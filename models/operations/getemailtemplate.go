// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetEmailTemplateRequest struct {
	// The unique identifier of the email template.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetEmailTemplateRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetEmailTemplateTemplateType string

const (
	GetEmailTemplateTemplateTypeSignIn                   GetEmailTemplateTemplateType = "SignIn"
	GetEmailTemplateTemplateTypeRegister                 GetEmailTemplateTemplateType = "Register"
	GetEmailTemplateTemplateTypeForgotPassword           GetEmailTemplateTemplateType = "ForgotPassword"
	GetEmailTemplateTemplateTypeOrganizationInvitation   GetEmailTemplateTemplateType = "OrganizationInvitation"
	GetEmailTemplateTemplateTypeGeneric                  GetEmailTemplateTemplateType = "Generic"
	GetEmailTemplateTemplateTypeUserPermissionValidation GetEmailTemplateTemplateType = "UserPermissionValidation"
	GetEmailTemplateTemplateTypeBindNewIdentifier        GetEmailTemplateTemplateType = "BindNewIdentifier"
)

func (e GetEmailTemplateTemplateType) ToPointer() *GetEmailTemplateTemplateType {
	return &e
}
func (e *GetEmailTemplateTemplateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SignIn":
		fallthrough
	case "Register":
		fallthrough
	case "ForgotPassword":
		fallthrough
	case "OrganizationInvitation":
		fallthrough
	case "Generic":
		fallthrough
	case "UserPermissionValidation":
		fallthrough
	case "BindNewIdentifier":
		*e = GetEmailTemplateTemplateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEmailTemplateTemplateType: %v", v)
	}
}

type GetEmailTemplateDetails struct {
	Subject     string  `json:"subject"`
	Content     string  `json:"content"`
	ContentType *string `json:"contentType,omitempty"`
	ReplyTo     *string `json:"replyTo,omitempty"`
	SendFrom    *string `json:"sendFrom,omitempty"`
}

func (o *GetEmailTemplateDetails) GetSubject() string {
	if o == nil {
		return ""
	}
	return o.Subject
}

func (o *GetEmailTemplateDetails) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *GetEmailTemplateDetails) GetContentType() *string {
	if o == nil {
		return nil
	}
	return o.ContentType
}

func (o *GetEmailTemplateDetails) GetReplyTo() *string {
	if o == nil {
		return nil
	}
	return o.ReplyTo
}

func (o *GetEmailTemplateDetails) GetSendFrom() *string {
	if o == nil {
		return nil
	}
	return o.SendFrom
}

// GetEmailTemplateResponseBody - The email template.
type GetEmailTemplateResponseBody struct {
	TenantID     string                       `json:"tenantId"`
	ID           string                       `json:"id"`
	LanguageTag  string                       `json:"languageTag"`
	TemplateType GetEmailTemplateTemplateType `json:"templateType"`
	Details      GetEmailTemplateDetails      `json:"details"`
	CreatedAt    float64                      `json:"createdAt"`
}

func (o *GetEmailTemplateResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetEmailTemplateResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetEmailTemplateResponseBody) GetLanguageTag() string {
	if o == nil {
		return ""
	}
	return o.LanguageTag
}

func (o *GetEmailTemplateResponseBody) GetTemplateType() GetEmailTemplateTemplateType {
	if o == nil {
		return GetEmailTemplateTemplateType("")
	}
	return o.TemplateType
}

func (o *GetEmailTemplateResponseBody) GetDetails() GetEmailTemplateDetails {
	if o == nil {
		return GetEmailTemplateDetails{}
	}
	return o.Details
}

func (o *GetEmailTemplateResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type GetEmailTemplateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The email template.
	Object *GetEmailTemplateResponseBody
}

func (o *GetEmailTemplateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetEmailTemplateResponse) GetObject() *GetEmailTemplateResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
