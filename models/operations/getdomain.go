// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetDomainRequest struct {
	// The unique identifier of the domain.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetDomainRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetDomainStatus string

const (
	GetDomainStatusPendingVerification GetDomainStatus = "PendingVerification"
	GetDomainStatusPendingSsl          GetDomainStatus = "PendingSsl"
	GetDomainStatusActive              GetDomainStatus = "Active"
	GetDomainStatusError               GetDomainStatus = "Error"
)

func (e GetDomainStatus) ToPointer() *GetDomainStatus {
	return &e
}
func (e *GetDomainStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingVerification":
		fallthrough
	case "PendingSsl":
		fallthrough
	case "Active":
		fallthrough
	case "Error":
		*e = GetDomainStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDomainStatus: %v", v)
	}
}

type GetDomainDNSRecord struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

func (o *GetDomainDNSRecord) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDomainDNSRecord) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *GetDomainDNSRecord) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// GetDomainResponseBody - Details of the domain.
type GetDomainResponseBody struct {
	ID           string               `json:"id"`
	Domain       string               `json:"domain"`
	Status       GetDomainStatus      `json:"status"`
	ErrorMessage *string              `json:"errorMessage"`
	DNSRecords   []GetDomainDNSRecord `json:"dnsRecords"`
}

func (o *GetDomainResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDomainResponseBody) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *GetDomainResponseBody) GetStatus() GetDomainStatus {
	if o == nil {
		return GetDomainStatus("")
	}
	return o.Status
}

func (o *GetDomainResponseBody) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *GetDomainResponseBody) GetDNSRecords() []GetDomainDNSRecord {
	if o == nil {
		return []GetDomainDNSRecord{}
	}
	return o.DNSRecords
}

type GetDomainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Details of the domain.
	Object *GetDomainResponseBody
}

func (o *GetDomainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDomainResponse) GetObject() *GetDomainResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
