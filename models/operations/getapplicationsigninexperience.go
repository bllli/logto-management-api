// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type GetApplicationSignInExperienceRequest struct {
	// The unique identifier of the application.
	ApplicationID string `pathParam:"style=simple,explode=false,name=applicationId"`
}

func (o *GetApplicationSignInExperienceRequest) GetApplicationID() string {
	if o == nil {
		return ""
	}
	return o.ApplicationID
}

type GetApplicationSignInExperienceColor struct {
	PrimaryColor      *string `json:"primaryColor,omitempty"`
	IsDarkModeEnabled *bool   `json:"isDarkModeEnabled,omitempty"`
	DarkPrimaryColor  *string `json:"darkPrimaryColor,omitempty"`
}

func (o *GetApplicationSignInExperienceColor) GetPrimaryColor() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryColor
}

func (o *GetApplicationSignInExperienceColor) GetIsDarkModeEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.IsDarkModeEnabled
}

func (o *GetApplicationSignInExperienceColor) GetDarkPrimaryColor() *string {
	if o == nil {
		return nil
	}
	return o.DarkPrimaryColor
}

type GetApplicationSignInExperienceBranding struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *GetApplicationSignInExperienceBranding) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *GetApplicationSignInExperienceBranding) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *GetApplicationSignInExperienceBranding) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *GetApplicationSignInExperienceBranding) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

// GetApplicationSignInExperienceResponseBody - Returns the application's application level sign-in experience.
type GetApplicationSignInExperienceResponseBody struct {
	TenantID         string                                 `json:"tenantId"`
	ApplicationID    string                                 `json:"applicationId"`
	Color            GetApplicationSignInExperienceColor    `json:"color"`
	Branding         GetApplicationSignInExperienceBranding `json:"branding"`
	TermsOfUseURL    *string                                `json:"termsOfUseUrl"`
	PrivacyPolicyURL *string                                `json:"privacyPolicyUrl"`
	DisplayName      *string                                `json:"displayName"`
}

func (o *GetApplicationSignInExperienceResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetApplicationSignInExperienceResponseBody) GetApplicationID() string {
	if o == nil {
		return ""
	}
	return o.ApplicationID
}

func (o *GetApplicationSignInExperienceResponseBody) GetColor() GetApplicationSignInExperienceColor {
	if o == nil {
		return GetApplicationSignInExperienceColor{}
	}
	return o.Color
}

func (o *GetApplicationSignInExperienceResponseBody) GetBranding() GetApplicationSignInExperienceBranding {
	if o == nil {
		return GetApplicationSignInExperienceBranding{}
	}
	return o.Branding
}

func (o *GetApplicationSignInExperienceResponseBody) GetTermsOfUseURL() *string {
	if o == nil {
		return nil
	}
	return o.TermsOfUseURL
}

func (o *GetApplicationSignInExperienceResponseBody) GetPrivacyPolicyURL() *string {
	if o == nil {
		return nil
	}
	return o.PrivacyPolicyURL
}

func (o *GetApplicationSignInExperienceResponseBody) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

type GetApplicationSignInExperienceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the application's application level sign-in experience.
	Object *GetApplicationSignInExperienceResponseBody
}

func (o *GetApplicationSignInExperienceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetApplicationSignInExperienceResponse) GetObject() *GetApplicationSignInExperienceResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
