// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type PostAPIInteractionVerificationWebauthnAuthenticationTransport string

const (
	PostAPIInteractionVerificationWebauthnAuthenticationTransportUsb       PostAPIInteractionVerificationWebauthnAuthenticationTransport = "usb"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportNfc       PostAPIInteractionVerificationWebauthnAuthenticationTransport = "nfc"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportBle       PostAPIInteractionVerificationWebauthnAuthenticationTransport = "ble"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportInternal  PostAPIInteractionVerificationWebauthnAuthenticationTransport = "internal"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportCable     PostAPIInteractionVerificationWebauthnAuthenticationTransport = "cable"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportHybrid    PostAPIInteractionVerificationWebauthnAuthenticationTransport = "hybrid"
	PostAPIInteractionVerificationWebauthnAuthenticationTransportSmartCard PostAPIInteractionVerificationWebauthnAuthenticationTransport = "smart-card"
)

func (e PostAPIInteractionVerificationWebauthnAuthenticationTransport) ToPointer() *PostAPIInteractionVerificationWebauthnAuthenticationTransport {
	return &e
}
func (e *PostAPIInteractionVerificationWebauthnAuthenticationTransport) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "usb":
		fallthrough
	case "nfc":
		fallthrough
	case "ble":
		fallthrough
	case "internal":
		fallthrough
	case "cable":
		fallthrough
	case "hybrid":
		fallthrough
	case "smart-card":
		*e = PostAPIInteractionVerificationWebauthnAuthenticationTransport(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIInteractionVerificationWebauthnAuthenticationTransport: %v", v)
	}
}

type PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential struct {
	Type       string                                                          `json:"type"`
	ID         string                                                          `json:"id"`
	Transports []PostAPIInteractionVerificationWebauthnAuthenticationTransport `json:"transports,omitempty"`
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential) GetTransports() []PostAPIInteractionVerificationWebauthnAuthenticationTransport {
	if o == nil {
		return nil
	}
	return o.Transports
}

type PostAPIInteractionVerificationWebauthnAuthenticationUserVerification string

const (
	PostAPIInteractionVerificationWebauthnAuthenticationUserVerificationRequired    PostAPIInteractionVerificationWebauthnAuthenticationUserVerification = "required"
	PostAPIInteractionVerificationWebauthnAuthenticationUserVerificationPreferred   PostAPIInteractionVerificationWebauthnAuthenticationUserVerification = "preferred"
	PostAPIInteractionVerificationWebauthnAuthenticationUserVerificationDiscouraged PostAPIInteractionVerificationWebauthnAuthenticationUserVerification = "discouraged"
)

func (e PostAPIInteractionVerificationWebauthnAuthenticationUserVerification) ToPointer() *PostAPIInteractionVerificationWebauthnAuthenticationUserVerification {
	return &e
}
func (e *PostAPIInteractionVerificationWebauthnAuthenticationUserVerification) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "required":
		fallthrough
	case "preferred":
		fallthrough
	case "discouraged":
		*e = PostAPIInteractionVerificationWebauthnAuthenticationUserVerification(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIInteractionVerificationWebauthnAuthenticationUserVerification: %v", v)
	}
}

type PostAPIInteractionVerificationWebauthnAuthenticationExtensions struct {
	Appid            *string `json:"appid,omitempty"`
	CredProps        *bool   `json:"credProps,omitempty"`
	HmacCreateSecret *bool   `json:"hmacCreateSecret,omitempty"`
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationExtensions) GetAppid() *string {
	if o == nil {
		return nil
	}
	return o.Appid
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationExtensions) GetCredProps() *bool {
	if o == nil {
		return nil
	}
	return o.CredProps
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationExtensions) GetHmacCreateSecret() *bool {
	if o == nil {
		return nil
	}
	return o.HmacCreateSecret
}

// PostAPIInteractionVerificationWebauthnAuthenticationResponseBody - OK
type PostAPIInteractionVerificationWebauthnAuthenticationResponseBody struct {
	Challenge        string                                                                `json:"challenge"`
	Timeout          *float64                                                              `json:"timeout,omitempty"`
	RpID             *string                                                               `json:"rpId,omitempty"`
	AllowCredentials []PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential `json:"allowCredentials,omitempty"`
	UserVerification *PostAPIInteractionVerificationWebauthnAuthenticationUserVerification `json:"userVerification,omitempty"`
	Extensions       *PostAPIInteractionVerificationWebauthnAuthenticationExtensions       `json:"extensions,omitempty"`
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetChallenge() string {
	if o == nil {
		return ""
	}
	return o.Challenge
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetTimeout() *float64 {
	if o == nil {
		return nil
	}
	return o.Timeout
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetRpID() *string {
	if o == nil {
		return nil
	}
	return o.RpID
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetAllowCredentials() []PostAPIInteractionVerificationWebauthnAuthenticationAllowCredential {
	if o == nil {
		return nil
	}
	return o.AllowCredentials
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetUserVerification() *PostAPIInteractionVerificationWebauthnAuthenticationUserVerification {
	if o == nil {
		return nil
	}
	return o.UserVerification
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody) GetExtensions() *PostAPIInteractionVerificationWebauthnAuthenticationExtensions {
	if o == nil {
		return nil
	}
	return o.Extensions
}

type PostAPIInteractionVerificationWebauthnAuthenticationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Object *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *PostAPIInteractionVerificationWebauthnAuthenticationResponse) GetObject() *PostAPIInteractionVerificationWebauthnAuthenticationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
