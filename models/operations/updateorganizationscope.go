// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type UpdateOrganizationScopeRequestBody struct {
	TenantID *string `json:"tenantId,omitempty"`
	ID       *string `json:"id,omitempty"`
	// The updated name of the organization scope. It must be unique within the organization template.
	Name *string `json:"name,omitempty"`
	// The updated description of the organization scope.
	Description *string `json:"description,omitempty"`
}

func (o *UpdateOrganizationScopeRequestBody) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *UpdateOrganizationScopeRequestBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateOrganizationScopeRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateOrganizationScopeRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type UpdateOrganizationScopeRequest struct {
	// The unique identifier of the organization scope.
	ID          string                             `pathParam:"style=simple,explode=false,name=id"`
	RequestBody UpdateOrganizationScopeRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateOrganizationScopeRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateOrganizationScopeRequest) GetRequestBody() UpdateOrganizationScopeRequestBody {
	if o == nil {
		return UpdateOrganizationScopeRequestBody{}
	}
	return o.RequestBody
}

// UpdateOrganizationScopeResponseBody - The organization scope was updated successfully.
type UpdateOrganizationScopeResponseBody struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

func (o *UpdateOrganizationScopeResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *UpdateOrganizationScopeResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateOrganizationScopeResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateOrganizationScopeResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type UpdateOrganizationScopeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The organization scope was updated successfully.
	Object *UpdateOrganizationScopeResponseBody
}

func (o *UpdateOrganizationScopeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateOrganizationScopeResponse) GetObject() *UpdateOrganizationScopeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
