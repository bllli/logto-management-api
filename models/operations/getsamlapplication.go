// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetSamlApplicationRequest struct {
	// The unique identifier of the saml application.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetSamlApplicationRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetSamlApplicationType string

const (
	GetSamlApplicationTypeNative           GetSamlApplicationType = "Native"
	GetSamlApplicationTypeSpa              GetSamlApplicationType = "SPA"
	GetSamlApplicationTypeTraditional      GetSamlApplicationType = "Traditional"
	GetSamlApplicationTypeMachineToMachine GetSamlApplicationType = "MachineToMachine"
	GetSamlApplicationTypeProtected        GetSamlApplicationType = "Protected"
	GetSamlApplicationTypeSaml             GetSamlApplicationType = "SAML"
)

func (e GetSamlApplicationType) ToPointer() *GetSamlApplicationType {
	return &e
}
func (e *GetSamlApplicationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Native":
		fallthrough
	case "SPA":
		fallthrough
	case "Traditional":
		fallthrough
	case "MachineToMachine":
		fallthrough
	case "Protected":
		fallthrough
	case "SAML":
		*e = GetSamlApplicationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSamlApplicationType: %v", v)
	}
}

// GetSamlApplicationCustomData - arbitrary
type GetSamlApplicationCustomData struct {
}

type GetSamlApplicationAttributeMapping struct {
	Sub                 *string `json:"sub,omitempty"`
	Name                *string `json:"name,omitempty"`
	GivenName           *string `json:"given_name,omitempty"`
	FamilyName          *string `json:"family_name,omitempty"`
	MiddleName          *string `json:"middle_name,omitempty"`
	Nickname            *string `json:"nickname,omitempty"`
	PreferredUsername   *string `json:"preferred_username,omitempty"`
	Profile             *string `json:"profile,omitempty"`
	Picture             *string `json:"picture,omitempty"`
	Website             *string `json:"website,omitempty"`
	Email               *string `json:"email,omitempty"`
	EmailVerified       *string `json:"email_verified,omitempty"`
	Gender              *string `json:"gender,omitempty"`
	Birthdate           *string `json:"birthdate,omitempty"`
	Zoneinfo            *string `json:"zoneinfo,omitempty"`
	Locale              *string `json:"locale,omitempty"`
	PhoneNumber         *string `json:"phone_number,omitempty"`
	PhoneNumberVerified *string `json:"phone_number_verified,omitempty"`
	Address             *string `json:"address,omitempty"`
	UpdatedAt           *string `json:"updated_at,omitempty"`
	Username            *string `json:"username,omitempty"`
	Roles               *string `json:"roles,omitempty"`
	Organizations       *string `json:"organizations,omitempty"`
	OrganizationData    *string `json:"organization_data,omitempty"`
	OrganizationRoles   *string `json:"organization_roles,omitempty"`
	CustomData          *string `json:"custom_data,omitempty"`
	Identities          *string `json:"identities,omitempty"`
	SsoIdentities       *string `json:"sso_identities,omitempty"`
	CreatedAt           *string `json:"created_at,omitempty"`
}

func (o *GetSamlApplicationAttributeMapping) GetSub() *string {
	if o == nil {
		return nil
	}
	return o.Sub
}

func (o *GetSamlApplicationAttributeMapping) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetSamlApplicationAttributeMapping) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *GetSamlApplicationAttributeMapping) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *GetSamlApplicationAttributeMapping) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *GetSamlApplicationAttributeMapping) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *GetSamlApplicationAttributeMapping) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *GetSamlApplicationAttributeMapping) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetSamlApplicationAttributeMapping) GetPicture() *string {
	if o == nil {
		return nil
	}
	return o.Picture
}

func (o *GetSamlApplicationAttributeMapping) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *GetSamlApplicationAttributeMapping) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetSamlApplicationAttributeMapping) GetEmailVerified() *string {
	if o == nil {
		return nil
	}
	return o.EmailVerified
}

func (o *GetSamlApplicationAttributeMapping) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *GetSamlApplicationAttributeMapping) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *GetSamlApplicationAttributeMapping) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *GetSamlApplicationAttributeMapping) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *GetSamlApplicationAttributeMapping) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *GetSamlApplicationAttributeMapping) GetPhoneNumberVerified() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumberVerified
}

func (o *GetSamlApplicationAttributeMapping) GetAddress() *string {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *GetSamlApplicationAttributeMapping) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetSamlApplicationAttributeMapping) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *GetSamlApplicationAttributeMapping) GetRoles() *string {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *GetSamlApplicationAttributeMapping) GetOrganizations() *string {
	if o == nil {
		return nil
	}
	return o.Organizations
}

func (o *GetSamlApplicationAttributeMapping) GetOrganizationData() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationData
}

func (o *GetSamlApplicationAttributeMapping) GetOrganizationRoles() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationRoles
}

func (o *GetSamlApplicationAttributeMapping) GetCustomData() *string {
	if o == nil {
		return nil
	}
	return o.CustomData
}

func (o *GetSamlApplicationAttributeMapping) GetIdentities() *string {
	if o == nil {
		return nil
	}
	return o.Identities
}

func (o *GetSamlApplicationAttributeMapping) GetSsoIdentities() *string {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

func (o *GetSamlApplicationAttributeMapping) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

type GetSamlApplicationBinding string

const (
	GetSamlApplicationBindingUrnOasisNamesTcSaml20BindingsHTTPPost     GetSamlApplicationBinding = "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
	GetSamlApplicationBindingUrnOasisNamesTcSaml20BindingsHTTPRedirect GetSamlApplicationBinding = "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
)

func (e GetSamlApplicationBinding) ToPointer() *GetSamlApplicationBinding {
	return &e
}
func (e *GetSamlApplicationBinding) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST":
		fallthrough
	case "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect":
		*e = GetSamlApplicationBinding(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSamlApplicationBinding: %v", v)
	}
}

type GetSamlApplicationAcsURL struct {
	Binding GetSamlApplicationBinding `json:"binding"`
	URL     string                    `json:"url"`
}

func (o *GetSamlApplicationAcsURL) GetBinding() GetSamlApplicationBinding {
	if o == nil {
		return GetSamlApplicationBinding("")
	}
	return o.Binding
}

func (o *GetSamlApplicationAcsURL) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

// GetSamlApplicationEncryption - Validator function
type GetSamlApplicationEncryption struct {
}

type GetSamlApplicationNameIDFormat string

const (
	GetSamlApplicationNameIDFormatUrnOasisNamesTcSaml20NameidFormatPersistent   GetSamlApplicationNameIDFormat = "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
	GetSamlApplicationNameIDFormatUrnOasisNamesTcSaml11NameidFormatEmailAddress GetSamlApplicationNameIDFormat = "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
	GetSamlApplicationNameIDFormatUrnOasisNamesTcSaml20NameidFormatTransient    GetSamlApplicationNameIDFormat = "urn:oasis:names:tc:SAML:2.0:nameid-format:transient"
	GetSamlApplicationNameIDFormatUrnOasisNamesTcSaml11NameidFormatUnspecified  GetSamlApplicationNameIDFormat = "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
)

func (e GetSamlApplicationNameIDFormat) ToPointer() *GetSamlApplicationNameIDFormat {
	return &e
}
func (e *GetSamlApplicationNameIDFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent":
		fallthrough
	case "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress":
		fallthrough
	case "urn:oasis:names:tc:SAML:2.0:nameid-format:transient":
		fallthrough
	case "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified":
		*e = GetSamlApplicationNameIDFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSamlApplicationNameIDFormat: %v", v)
	}
}

// GetSamlApplicationResponseBody - The SAML application details.
type GetSamlApplicationResponseBody struct {
	TenantID    string                 `json:"tenantId"`
	ID          string                 `json:"id"`
	Name        string                 `json:"name"`
	Description *string                `json:"description"`
	Type        GetSamlApplicationType `json:"type"`
	// arbitrary
	CustomData       GetSamlApplicationCustomData       `json:"customData"`
	IsThirdParty     bool                               `json:"isThirdParty"`
	CreatedAt        float64                            `json:"createdAt"`
	AttributeMapping GetSamlApplicationAttributeMapping `json:"attributeMapping"`
	EntityID         *string                            `json:"entityId"`
	AcsURL           *GetSamlApplicationAcsURL          `json:"acsUrl"`
	// Validator function
	Encryption   *GetSamlApplicationEncryption  `json:"encryption"`
	NameIDFormat GetSamlApplicationNameIDFormat `json:"nameIdFormat"`
}

func (o *GetSamlApplicationResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetSamlApplicationResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetSamlApplicationResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetSamlApplicationResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetSamlApplicationResponseBody) GetType() GetSamlApplicationType {
	if o == nil {
		return GetSamlApplicationType("")
	}
	return o.Type
}

func (o *GetSamlApplicationResponseBody) GetCustomData() GetSamlApplicationCustomData {
	if o == nil {
		return GetSamlApplicationCustomData{}
	}
	return o.CustomData
}

func (o *GetSamlApplicationResponseBody) GetIsThirdParty() bool {
	if o == nil {
		return false
	}
	return o.IsThirdParty
}

func (o *GetSamlApplicationResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetSamlApplicationResponseBody) GetAttributeMapping() GetSamlApplicationAttributeMapping {
	if o == nil {
		return GetSamlApplicationAttributeMapping{}
	}
	return o.AttributeMapping
}

func (o *GetSamlApplicationResponseBody) GetEntityID() *string {
	if o == nil {
		return nil
	}
	return o.EntityID
}

func (o *GetSamlApplicationResponseBody) GetAcsURL() *GetSamlApplicationAcsURL {
	if o == nil {
		return nil
	}
	return o.AcsURL
}

func (o *GetSamlApplicationResponseBody) GetEncryption() *GetSamlApplicationEncryption {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *GetSamlApplicationResponseBody) GetNameIDFormat() GetSamlApplicationNameIDFormat {
	if o == nil {
		return GetSamlApplicationNameIDFormat("")
	}
	return o.NameIDFormat
}

type GetSamlApplicationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The SAML application details.
	Object *GetSamlApplicationResponseBody
}

func (o *GetSamlApplicationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSamlApplicationResponse) GetObject() *GetSamlApplicationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
