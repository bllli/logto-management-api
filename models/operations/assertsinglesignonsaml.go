// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type AssertSingleSignOnSamlRequestBody struct {
	// SAML standard parameter that will be transmitted between the identity provider and the service provider. It will be used as the session ID (jti) of the user's Logto authentication session. This API will use this session ID to retrieve the SSO connector authentication session from the database.
	RelayState *string `json:"RelayState,omitempty"`
	// The SAML assertion response from the identity provider (IdP).
	SAMLResponse string `json:"SAMLResponse"`
}

func (o *AssertSingleSignOnSamlRequestBody) GetRelayState() *string {
	if o == nil {
		return nil
	}
	return o.RelayState
}

func (o *AssertSingleSignOnSamlRequestBody) GetSAMLResponse() string {
	if o == nil {
		return ""
	}
	return o.SAMLResponse
}

type AssertSingleSignOnSamlRequest struct {
	// The unique identifier of the connector.
	ConnectorID string                            `pathParam:"style=simple,explode=false,name=connectorId"`
	RequestBody AssertSingleSignOnSamlRequestBody `request:"mediaType=application/json"`
}

func (o *AssertSingleSignOnSamlRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *AssertSingleSignOnSamlRequest) GetRequestBody() AssertSingleSignOnSamlRequestBody {
	if o == nil {
		return AssertSingleSignOnSamlRequestBody{}
	}
	return o.RequestBody
}

type AssertSingleSignOnSamlResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *AssertSingleSignOnSamlResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
