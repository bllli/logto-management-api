// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListUsersRequest struct {
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
	// Search query parameters.
	SearchParams map[string]string `queryParam:"style=form,explode=true,name=search_params"`
}

func (l ListUsersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListUsersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListUsersRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListUsersRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListUsersRequest) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}

// ListUsersCustomData - arbitrary
type ListUsersCustomData struct {
}

// ListUsersDetails - arbitrary
type ListUsersDetails struct {
}

type ListUsersIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details *ListUsersDetails `json:"details,omitempty"`
}

func (o *ListUsersIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListUsersIdentities) GetDetails() *ListUsersDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type ListUsersAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *ListUsersAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *ListUsersAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *ListUsersAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *ListUsersAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *ListUsersAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ListUsersAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type ListUsersProfile struct {
	FamilyName        *string           `json:"familyName,omitempty"`
	GivenName         *string           `json:"givenName,omitempty"`
	MiddleName        *string           `json:"middleName,omitempty"`
	Nickname          *string           `json:"nickname,omitempty"`
	PreferredUsername *string           `json:"preferredUsername,omitempty"`
	Profile           *string           `json:"profile,omitempty"`
	Website           *string           `json:"website,omitempty"`
	Gender            *string           `json:"gender,omitempty"`
	Birthdate         *string           `json:"birthdate,omitempty"`
	Zoneinfo          *string           `json:"zoneinfo,omitempty"`
	Locale            *string           `json:"locale,omitempty"`
	Address           *ListUsersAddress `json:"address,omitempty"`
}

func (o *ListUsersProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *ListUsersProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *ListUsersProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *ListUsersProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *ListUsersProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *ListUsersProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *ListUsersProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ListUsersProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *ListUsersProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *ListUsersProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *ListUsersProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *ListUsersProfile) GetAddress() *ListUsersAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

// ListUsersDetail - arbitrary
type ListUsersDetail struct {
}

type ListUsersSsoIdentity struct {
	TenantID   string `json:"tenantId"`
	ID         string `json:"id"`
	UserID     string `json:"userId"`
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail         ListUsersDetail `json:"detail"`
	CreatedAt      float64         `json:"createdAt"`
	SsoConnectorID string          `json:"ssoConnectorId"`
}

func (o *ListUsersSsoIdentity) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListUsersSsoIdentity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListUsersSsoIdentity) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListUsersSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *ListUsersSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *ListUsersSsoIdentity) GetDetail() ListUsersDetail {
	if o == nil {
		return ListUsersDetail{}
	}
	return o.Detail
}

func (o *ListUsersSsoIdentity) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListUsersSsoIdentity) GetSsoConnectorID() string {
	if o == nil {
		return ""
	}
	return o.SsoConnectorID
}

type ListUsersResponseBody struct {
	ID           string  `json:"id"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	// arbitrary
	CustomData    ListUsersCustomData            `json:"customData"`
	Identities    map[string]ListUsersIdentities `json:"identities"`
	LastSignInAt  *float64                       `json:"lastSignInAt"`
	CreatedAt     float64                        `json:"createdAt"`
	UpdatedAt     float64                        `json:"updatedAt"`
	Profile       ListUsersProfile               `json:"profile"`
	ApplicationID *string                        `json:"applicationId"`
	IsSuspended   bool                           `json:"isSuspended"`
	HasPassword   *bool                          `json:"hasPassword,omitempty"`
	SsoIdentities []ListUsersSsoIdentity         `json:"ssoIdentities,omitempty"`
}

func (o *ListUsersResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListUsersResponseBody) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ListUsersResponseBody) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *ListUsersResponseBody) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *ListUsersResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListUsersResponseBody) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *ListUsersResponseBody) GetCustomData() ListUsersCustomData {
	if o == nil {
		return ListUsersCustomData{}
	}
	return o.CustomData
}

func (o *ListUsersResponseBody) GetIdentities() map[string]ListUsersIdentities {
	if o == nil {
		return map[string]ListUsersIdentities{}
	}
	return o.Identities
}

func (o *ListUsersResponseBody) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *ListUsersResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListUsersResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *ListUsersResponseBody) GetProfile() ListUsersProfile {
	if o == nil {
		return ListUsersProfile{}
	}
	return o.Profile
}

func (o *ListUsersResponseBody) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ListUsersResponseBody) GetIsSuspended() bool {
	if o == nil {
		return false
	}
	return o.IsSuspended
}

func (o *ListUsersResponseBody) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *ListUsersResponseBody) GetSsoIdentities() []ListUsersSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

type ListUsersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of users that match the given criteria.
	ResponseBodies []ListUsersResponseBody
}

func (o *ListUsersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListUsersResponse) GetResponseBodies() []ListUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
