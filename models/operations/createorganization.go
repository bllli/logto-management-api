// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

// CreateOrganizationCustomDataRequest - arbitrary
type CreateOrganizationCustomDataRequest struct {
}

type CreateOrganizationBrandingRequest struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *CreateOrganizationBrandingRequest) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *CreateOrganizationBrandingRequest) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *CreateOrganizationBrandingRequest) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *CreateOrganizationBrandingRequest) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

type CreateOrganizationRequest struct {
	TenantID *string `json:"tenantId,omitempty"`
	// The name of the organization.
	Name string `json:"name"`
	// The description of the organization.
	Description *string `json:"description,omitempty"`
	// arbitrary
	CustomData    *CreateOrganizationCustomDataRequest `json:"customData,omitempty"`
	IsMfaRequired *bool                                `json:"isMfaRequired,omitempty"`
	Branding      *CreateOrganizationBrandingRequest   `json:"branding,omitempty"`
	CreatedAt     *float64                             `json:"createdAt,omitempty"`
}

func (o *CreateOrganizationRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CreateOrganizationRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateOrganizationRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateOrganizationRequest) GetCustomData() *CreateOrganizationCustomDataRequest {
	if o == nil {
		return nil
	}
	return o.CustomData
}

func (o *CreateOrganizationRequest) GetIsMfaRequired() *bool {
	if o == nil {
		return nil
	}
	return o.IsMfaRequired
}

func (o *CreateOrganizationRequest) GetBranding() *CreateOrganizationBrandingRequest {
	if o == nil {
		return nil
	}
	return o.Branding
}

func (o *CreateOrganizationRequest) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

// CreateOrganizationCustomDataResponse - arbitrary
type CreateOrganizationCustomDataResponse struct {
}

type CreateOrganizationBrandingResponse struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *CreateOrganizationBrandingResponse) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *CreateOrganizationBrandingResponse) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *CreateOrganizationBrandingResponse) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *CreateOrganizationBrandingResponse) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

// CreateOrganizationResponseBody - The organization was created successfully.
type CreateOrganizationResponseBody struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// arbitrary
	CustomData    CreateOrganizationCustomDataResponse `json:"customData"`
	IsMfaRequired bool                                 `json:"isMfaRequired"`
	Branding      CreateOrganizationBrandingResponse   `json:"branding"`
	CreatedAt     float64                              `json:"createdAt"`
}

func (o *CreateOrganizationResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *CreateOrganizationResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateOrganizationResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateOrganizationResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateOrganizationResponseBody) GetCustomData() CreateOrganizationCustomDataResponse {
	if o == nil {
		return CreateOrganizationCustomDataResponse{}
	}
	return o.CustomData
}

func (o *CreateOrganizationResponseBody) GetIsMfaRequired() bool {
	if o == nil {
		return false
	}
	return o.IsMfaRequired
}

func (o *CreateOrganizationResponseBody) GetBranding() CreateOrganizationBrandingResponse {
	if o == nil {
		return CreateOrganizationBrandingResponse{}
	}
	return o.Branding
}

func (o *CreateOrganizationResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type CreateOrganizationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The organization was created successfully.
	Object *CreateOrganizationResponseBody
}

func (o *CreateOrganizationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateOrganizationResponse) GetObject() *CreateOrganizationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
