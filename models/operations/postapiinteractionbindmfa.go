// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type PostAPIInteractionBindMfaRequestBody3 struct {
	Type string `json:"type"`
}

func (o *PostAPIInteractionBindMfaRequestBody3) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type PostAPIInteractionBindMfaTransport string

const (
	PostAPIInteractionBindMfaTransportUsb       PostAPIInteractionBindMfaTransport = "usb"
	PostAPIInteractionBindMfaTransportNfc       PostAPIInteractionBindMfaTransport = "nfc"
	PostAPIInteractionBindMfaTransportBle       PostAPIInteractionBindMfaTransport = "ble"
	PostAPIInteractionBindMfaTransportInternal  PostAPIInteractionBindMfaTransport = "internal"
	PostAPIInteractionBindMfaTransportCable     PostAPIInteractionBindMfaTransport = "cable"
	PostAPIInteractionBindMfaTransportHybrid    PostAPIInteractionBindMfaTransport = "hybrid"
	PostAPIInteractionBindMfaTransportSmartCard PostAPIInteractionBindMfaTransport = "smart-card"
)

func (e PostAPIInteractionBindMfaTransport) ToPointer() *PostAPIInteractionBindMfaTransport {
	return &e
}
func (e *PostAPIInteractionBindMfaTransport) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "usb":
		fallthrough
	case "nfc":
		fallthrough
	case "ble":
		fallthrough
	case "internal":
		fallthrough
	case "cable":
		fallthrough
	case "hybrid":
		fallthrough
	case "smart-card":
		*e = PostAPIInteractionBindMfaTransport(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIInteractionBindMfaTransport: %v", v)
	}
}

type InteractionPostAPIInteractionBindMfaResponse struct {
	ClientDataJSON     string                               `json:"clientDataJSON"`
	AttestationObject  string                               `json:"attestationObject"`
	AuthenticatorData  *string                              `json:"authenticatorData,omitempty"`
	Transports         []PostAPIInteractionBindMfaTransport `json:"transports,omitempty"`
	PublicKeyAlgorithm *float64                             `json:"publicKeyAlgorithm,omitempty"`
	PublicKey          *string                              `json:"publicKey,omitempty"`
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetClientDataJSON() string {
	if o == nil {
		return ""
	}
	return o.ClientDataJSON
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetAttestationObject() string {
	if o == nil {
		return ""
	}
	return o.AttestationObject
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetAuthenticatorData() *string {
	if o == nil {
		return nil
	}
	return o.AuthenticatorData
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetTransports() []PostAPIInteractionBindMfaTransport {
	if o == nil {
		return nil
	}
	return o.Transports
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetPublicKeyAlgorithm() *float64 {
	if o == nil {
		return nil
	}
	return o.PublicKeyAlgorithm
}

func (o *InteractionPostAPIInteractionBindMfaResponse) GetPublicKey() *string {
	if o == nil {
		return nil
	}
	return o.PublicKey
}

type PostAPIInteractionBindMfaAuthenticatorAttachment string

const (
	PostAPIInteractionBindMfaAuthenticatorAttachmentCrossPlatform PostAPIInteractionBindMfaAuthenticatorAttachment = "cross-platform"
	PostAPIInteractionBindMfaAuthenticatorAttachmentPlatform      PostAPIInteractionBindMfaAuthenticatorAttachment = "platform"
)

func (e PostAPIInteractionBindMfaAuthenticatorAttachment) ToPointer() *PostAPIInteractionBindMfaAuthenticatorAttachment {
	return &e
}
func (e *PostAPIInteractionBindMfaAuthenticatorAttachment) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cross-platform":
		fallthrough
	case "platform":
		*e = PostAPIInteractionBindMfaAuthenticatorAttachment(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIInteractionBindMfaAuthenticatorAttachment: %v", v)
	}
}

type PostAPIInteractionBindMfaCrepProps struct {
	Rk *bool `json:"rk,omitempty"`
}

func (o *PostAPIInteractionBindMfaCrepProps) GetRk() *bool {
	if o == nil {
		return nil
	}
	return o.Rk
}

type PostAPIInteractionBindMfaClientExtensionResults struct {
	Appid            *bool                               `json:"appid,omitempty"`
	CrepProps        *PostAPIInteractionBindMfaCrepProps `json:"crepProps,omitempty"`
	HmacCreateSecret *bool                               `json:"hmacCreateSecret,omitempty"`
}

func (o *PostAPIInteractionBindMfaClientExtensionResults) GetAppid() *bool {
	if o == nil {
		return nil
	}
	return o.Appid
}

func (o *PostAPIInteractionBindMfaClientExtensionResults) GetCrepProps() *PostAPIInteractionBindMfaCrepProps {
	if o == nil {
		return nil
	}
	return o.CrepProps
}

func (o *PostAPIInteractionBindMfaClientExtensionResults) GetHmacCreateSecret() *bool {
	if o == nil {
		return nil
	}
	return o.HmacCreateSecret
}

type PostAPIInteractionBindMfaRequestBody2 struct {
	Type                    string                                            `json:"type"`
	ID                      string                                            `json:"id"`
	RawID                   string                                            `json:"rawId"`
	Response                InteractionPostAPIInteractionBindMfaResponse      `json:"response"`
	AuthenticatorAttachment *PostAPIInteractionBindMfaAuthenticatorAttachment `json:"authenticatorAttachment,omitempty"`
	ClientExtensionResults  PostAPIInteractionBindMfaClientExtensionResults   `json:"clientExtensionResults"`
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetRawID() string {
	if o == nil {
		return ""
	}
	return o.RawID
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetResponse() InteractionPostAPIInteractionBindMfaResponse {
	if o == nil {
		return InteractionPostAPIInteractionBindMfaResponse{}
	}
	return o.Response
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetAuthenticatorAttachment() *PostAPIInteractionBindMfaAuthenticatorAttachment {
	if o == nil {
		return nil
	}
	return o.AuthenticatorAttachment
}

func (o *PostAPIInteractionBindMfaRequestBody2) GetClientExtensionResults() PostAPIInteractionBindMfaClientExtensionResults {
	if o == nil {
		return PostAPIInteractionBindMfaClientExtensionResults{}
	}
	return o.ClientExtensionResults
}

type PostAPIInteractionBindMfaRequestBody1 struct {
	Type string `json:"type"`
	Code string `json:"code"`
}

func (o *PostAPIInteractionBindMfaRequestBody1) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PostAPIInteractionBindMfaRequestBody1) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

type PostAPIInteractionBindMfaRequestType string

const (
	PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody1 PostAPIInteractionBindMfaRequestType = "post_api_interaction_bind_mfa_RequestBody_1"
	PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody2 PostAPIInteractionBindMfaRequestType = "post_api_interaction_bind_mfa_RequestBody_2"
	PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody3 PostAPIInteractionBindMfaRequestType = "post_api_interaction_bind_mfa_RequestBody_3"
)

type PostAPIInteractionBindMfaRequest struct {
	PostAPIInteractionBindMfaRequestBody1 *PostAPIInteractionBindMfaRequestBody1 `queryParam:"inline"`
	PostAPIInteractionBindMfaRequestBody2 *PostAPIInteractionBindMfaRequestBody2 `queryParam:"inline"`
	PostAPIInteractionBindMfaRequestBody3 *PostAPIInteractionBindMfaRequestBody3 `queryParam:"inline"`

	Type PostAPIInteractionBindMfaRequestType
}

func CreatePostAPIInteractionBindMfaRequestPostAPIInteractionBindMfaRequestBody1(postAPIInteractionBindMfaRequestBody1 PostAPIInteractionBindMfaRequestBody1) PostAPIInteractionBindMfaRequest {
	typ := PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody1

	return PostAPIInteractionBindMfaRequest{
		PostAPIInteractionBindMfaRequestBody1: &postAPIInteractionBindMfaRequestBody1,
		Type:                                  typ,
	}
}

func CreatePostAPIInteractionBindMfaRequestPostAPIInteractionBindMfaRequestBody2(postAPIInteractionBindMfaRequestBody2 PostAPIInteractionBindMfaRequestBody2) PostAPIInteractionBindMfaRequest {
	typ := PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody2

	return PostAPIInteractionBindMfaRequest{
		PostAPIInteractionBindMfaRequestBody2: &postAPIInteractionBindMfaRequestBody2,
		Type:                                  typ,
	}
}

func CreatePostAPIInteractionBindMfaRequestPostAPIInteractionBindMfaRequestBody3(postAPIInteractionBindMfaRequestBody3 PostAPIInteractionBindMfaRequestBody3) PostAPIInteractionBindMfaRequest {
	typ := PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody3

	return PostAPIInteractionBindMfaRequest{
		PostAPIInteractionBindMfaRequestBody3: &postAPIInteractionBindMfaRequestBody3,
		Type:                                  typ,
	}
}

func (u *PostAPIInteractionBindMfaRequest) UnmarshalJSON(data []byte) error {

	var postAPIInteractionBindMfaRequestBody3 PostAPIInteractionBindMfaRequestBody3 = PostAPIInteractionBindMfaRequestBody3{}
	if err := utils.UnmarshalJSON(data, &postAPIInteractionBindMfaRequestBody3, "", true, true); err == nil {
		u.PostAPIInteractionBindMfaRequestBody3 = &postAPIInteractionBindMfaRequestBody3
		u.Type = PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody3
		return nil
	}

	var postAPIInteractionBindMfaRequestBody1 PostAPIInteractionBindMfaRequestBody1 = PostAPIInteractionBindMfaRequestBody1{}
	if err := utils.UnmarshalJSON(data, &postAPIInteractionBindMfaRequestBody1, "", true, true); err == nil {
		u.PostAPIInteractionBindMfaRequestBody1 = &postAPIInteractionBindMfaRequestBody1
		u.Type = PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody1
		return nil
	}

	var postAPIInteractionBindMfaRequestBody2 PostAPIInteractionBindMfaRequestBody2 = PostAPIInteractionBindMfaRequestBody2{}
	if err := utils.UnmarshalJSON(data, &postAPIInteractionBindMfaRequestBody2, "", true, true); err == nil {
		u.PostAPIInteractionBindMfaRequestBody2 = &postAPIInteractionBindMfaRequestBody2
		u.Type = PostAPIInteractionBindMfaRequestTypePostAPIInteractionBindMfaRequestBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PostAPIInteractionBindMfaRequest", string(data))
}

func (u PostAPIInteractionBindMfaRequest) MarshalJSON() ([]byte, error) {
	if u.PostAPIInteractionBindMfaRequestBody1 != nil {
		return utils.MarshalJSON(u.PostAPIInteractionBindMfaRequestBody1, "", true)
	}

	if u.PostAPIInteractionBindMfaRequestBody2 != nil {
		return utils.MarshalJSON(u.PostAPIInteractionBindMfaRequestBody2, "", true)
	}

	if u.PostAPIInteractionBindMfaRequestBody3 != nil {
		return utils.MarshalJSON(u.PostAPIInteractionBindMfaRequestBody3, "", true)
	}

	return nil, errors.New("could not marshal union type PostAPIInteractionBindMfaRequest: all fields are null")
}

type PostAPIInteractionBindMfaResponseResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *PostAPIInteractionBindMfaResponseResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
