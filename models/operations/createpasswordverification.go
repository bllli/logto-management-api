// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type CreatePasswordVerificationType string

const (
	CreatePasswordVerificationTypeUsername CreatePasswordVerificationType = "username"
	CreatePasswordVerificationTypeEmail    CreatePasswordVerificationType = "email"
	CreatePasswordVerificationTypePhone    CreatePasswordVerificationType = "phone"
)

func (e CreatePasswordVerificationType) ToPointer() *CreatePasswordVerificationType {
	return &e
}
func (e *CreatePasswordVerificationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "username":
		fallthrough
	case "email":
		fallthrough
	case "phone":
		*e = CreatePasswordVerificationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePasswordVerificationType: %v", v)
	}
}

// CreatePasswordVerificationIdentifier - The unique identifier of the user that will be used to identify the user along with the provided password.
type CreatePasswordVerificationIdentifier struct {
	Type  CreatePasswordVerificationType `json:"type"`
	Value string                         `json:"value"`
}

func (o *CreatePasswordVerificationIdentifier) GetType() CreatePasswordVerificationType {
	if o == nil {
		return CreatePasswordVerificationType("")
	}
	return o.Type
}

func (o *CreatePasswordVerificationIdentifier) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type CreatePasswordVerificationRequest struct {
	// The unique identifier of the user that will be used to identify the user along with the provided password.
	Identifier CreatePasswordVerificationIdentifier `json:"identifier"`
	// The user password.
	Password string `json:"password"`
}

func (o *CreatePasswordVerificationRequest) GetIdentifier() CreatePasswordVerificationIdentifier {
	if o == nil {
		return CreatePasswordVerificationIdentifier{}
	}
	return o.Identifier
}

func (o *CreatePasswordVerificationRequest) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

// CreatePasswordVerificationResponseBody - The Password verification record has been successfully created and verified.
type CreatePasswordVerificationResponseBody struct {
	// The unique verification ID of the newly created Password verification record. The `verificationId` is required when verifying the user's identity via the `Identification` API.
	VerificationID string `json:"verificationId"`
}

func (o *CreatePasswordVerificationResponseBody) GetVerificationID() string {
	if o == nil {
		return ""
	}
	return o.VerificationID
}

type CreatePasswordVerificationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The Password verification record has been successfully created and verified.
	Object *CreatePasswordVerificationResponseBody
}

func (o *CreatePasswordVerificationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreatePasswordVerificationResponse) GetObject() *CreatePasswordVerificationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
