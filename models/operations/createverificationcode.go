// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type CreateVerificationCodeRequestBody2 struct {
	Phone string `json:"phone"`
}

func (o *CreateVerificationCodeRequestBody2) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

type CreateVerificationCodeRequestBody1 struct {
	Email string `json:"email"`
}

func (o *CreateVerificationCodeRequestBody1) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

type CreateVerificationCodeRequestType string

const (
	CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody1 CreateVerificationCodeRequestType = "CreateVerificationCode_RequestBody_1"
	CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody2 CreateVerificationCodeRequestType = "CreateVerificationCode_RequestBody_2"
)

type CreateVerificationCodeRequest struct {
	CreateVerificationCodeRequestBody1 *CreateVerificationCodeRequestBody1 `queryParam:"inline"`
	CreateVerificationCodeRequestBody2 *CreateVerificationCodeRequestBody2 `queryParam:"inline"`

	Type CreateVerificationCodeRequestType
}

func CreateCreateVerificationCodeRequestCreateVerificationCodeRequestBody1(createVerificationCodeRequestBody1 CreateVerificationCodeRequestBody1) CreateVerificationCodeRequest {
	typ := CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody1

	return CreateVerificationCodeRequest{
		CreateVerificationCodeRequestBody1: &createVerificationCodeRequestBody1,
		Type:                               typ,
	}
}

func CreateCreateVerificationCodeRequestCreateVerificationCodeRequestBody2(createVerificationCodeRequestBody2 CreateVerificationCodeRequestBody2) CreateVerificationCodeRequest {
	typ := CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody2

	return CreateVerificationCodeRequest{
		CreateVerificationCodeRequestBody2: &createVerificationCodeRequestBody2,
		Type:                               typ,
	}
}

func (u *CreateVerificationCodeRequest) UnmarshalJSON(data []byte) error {

	var createVerificationCodeRequestBody1 CreateVerificationCodeRequestBody1 = CreateVerificationCodeRequestBody1{}
	if err := utils.UnmarshalJSON(data, &createVerificationCodeRequestBody1, "", true, true); err == nil {
		u.CreateVerificationCodeRequestBody1 = &createVerificationCodeRequestBody1
		u.Type = CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody1
		return nil
	}

	var createVerificationCodeRequestBody2 CreateVerificationCodeRequestBody2 = CreateVerificationCodeRequestBody2{}
	if err := utils.UnmarshalJSON(data, &createVerificationCodeRequestBody2, "", true, true); err == nil {
		u.CreateVerificationCodeRequestBody2 = &createVerificationCodeRequestBody2
		u.Type = CreateVerificationCodeRequestTypeCreateVerificationCodeRequestBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateVerificationCodeRequest", string(data))
}

func (u CreateVerificationCodeRequest) MarshalJSON() ([]byte, error) {
	if u.CreateVerificationCodeRequestBody1 != nil {
		return utils.MarshalJSON(u.CreateVerificationCodeRequestBody1, "", true)
	}

	if u.CreateVerificationCodeRequestBody2 != nil {
		return utils.MarshalJSON(u.CreateVerificationCodeRequestBody2, "", true)
	}

	return nil, errors.New("could not marshal union type CreateVerificationCodeRequest: all fields are null")
}

type CreateVerificationCodeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *CreateVerificationCodeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
