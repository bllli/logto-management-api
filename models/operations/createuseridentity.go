// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type CreateUserIdentityRequestBody struct {
	// The Logto connector ID.
	ConnectorID string `json:"connectorId"`
	// A json object constructed from the url query params returned by the social platform. Typically it contains `code`, `state` and `redirectUri` fields.
	ConnectorData map[string]any `json:"connectorData"`
}

func (o *CreateUserIdentityRequestBody) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *CreateUserIdentityRequestBody) GetConnectorData() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.ConnectorData
}

type CreateUserIdentityRequest struct {
	// The unique identifier of the user.
	UserID      string                        `pathParam:"style=simple,explode=false,name=userId"`
	RequestBody CreateUserIdentityRequestBody `request:"mediaType=application/json"`
}

func (o *CreateUserIdentityRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *CreateUserIdentityRequest) GetRequestBody() CreateUserIdentityRequestBody {
	if o == nil {
		return CreateUserIdentityRequestBody{}
	}
	return o.RequestBody
}

type CreateUserIdentityResponseBody struct {
	UserID string `json:"userId"`
	// arbitrary
	Details map[string]any `json:"details,omitempty"`
}

func (o *CreateUserIdentityResponseBody) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *CreateUserIdentityResponseBody) GetDetails() map[string]any {
	if o == nil {
		return nil
	}
	return o.Details
}

type CreateUserIdentityResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A new identity is linked to the user.
	Object map[string]CreateUserIdentityResponseBody
}

func (o *CreateUserIdentityResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateUserIdentityResponse) GetObject() map[string]CreateUserIdentityResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
