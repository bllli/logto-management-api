// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type VerifyVerificationByVerificationCodeType string

const (
	VerifyVerificationByVerificationCodeTypeEmail VerifyVerificationByVerificationCodeType = "email"
	VerifyVerificationByVerificationCodeTypePhone VerifyVerificationByVerificationCodeType = "phone"
)

func (e VerifyVerificationByVerificationCodeType) ToPointer() *VerifyVerificationByVerificationCodeType {
	return &e
}
func (e *VerifyVerificationByVerificationCodeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		fallthrough
	case "phone":
		*e = VerifyVerificationByVerificationCodeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerifyVerificationByVerificationCodeType: %v", v)
	}
}

// VerifyVerificationByVerificationCodeIdentifier - The identifier (email address or phone number) to verify the code against. Must match the identifier used to send the verification code.
type VerifyVerificationByVerificationCodeIdentifier struct {
	Type  VerifyVerificationByVerificationCodeType `json:"type"`
	Value string                                   `json:"value"`
}

func (o *VerifyVerificationByVerificationCodeIdentifier) GetType() VerifyVerificationByVerificationCodeType {
	if o == nil {
		return VerifyVerificationByVerificationCodeType("")
	}
	return o.Type
}

func (o *VerifyVerificationByVerificationCodeIdentifier) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type VerifyVerificationByVerificationCodeRequest struct {
	// The identifier (email address or phone number) to verify the code against. Must match the identifier used to send the verification code.
	Identifier VerifyVerificationByVerificationCodeIdentifier `json:"identifier"`
	// The verification ID of the CodeVerification record.
	VerificationID string `json:"verificationId"`
	// The verification code to be verified.
	Code string `json:"code"`
}

func (o *VerifyVerificationByVerificationCodeRequest) GetIdentifier() VerifyVerificationByVerificationCodeIdentifier {
	if o == nil {
		return VerifyVerificationByVerificationCodeIdentifier{}
	}
	return o.Identifier
}

func (o *VerifyVerificationByVerificationCodeRequest) GetVerificationID() string {
	if o == nil {
		return ""
	}
	return o.VerificationID
}

func (o *VerifyVerificationByVerificationCodeRequest) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

// VerifyVerificationByVerificationCodeResponseBody - The verification code has been successfully verified.
type VerifyVerificationByVerificationCodeResponseBody struct {
	VerificationRecordID string `json:"verificationRecordId"`
}

func (o *VerifyVerificationByVerificationCodeResponseBody) GetVerificationRecordID() string {
	if o == nil {
		return ""
	}
	return o.VerificationRecordID
}

type VerifyVerificationByVerificationCodeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The verification code has been successfully verified.
	Object *VerifyVerificationByVerificationCodeResponseBody
}

func (o *VerifyVerificationByVerificationCodeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *VerifyVerificationByVerificationCodeResponse) GetObject() *VerifyVerificationByVerificationCodeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
