// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListOrganizationRolesRequest struct {
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListOrganizationRolesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationRolesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationRolesRequest) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *ListOrganizationRolesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListOrganizationRolesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListOrganizationRolesType string

const (
	ListOrganizationRolesTypeUser             ListOrganizationRolesType = "User"
	ListOrganizationRolesTypeMachineToMachine ListOrganizationRolesType = "MachineToMachine"
)

func (e ListOrganizationRolesType) ToPointer() *ListOrganizationRolesType {
	return &e
}
func (e *ListOrganizationRolesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "MachineToMachine":
		*e = ListOrganizationRolesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOrganizationRolesType: %v", v)
	}
}

type ListOrganizationRolesScope struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *ListOrganizationRolesScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationRolesScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type ListOrganizationRolesResource struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *ListOrganizationRolesResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationRolesResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type ListOrganizationRolesResourceScope struct {
	ID       string                        `json:"id"`
	Name     string                        `json:"name"`
	Resource ListOrganizationRolesResource `json:"resource"`
}

func (o *ListOrganizationRolesResourceScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationRolesResourceScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListOrganizationRolesResourceScope) GetResource() ListOrganizationRolesResource {
	if o == nil {
		return ListOrganizationRolesResource{}
	}
	return o.Resource
}

type ListOrganizationRolesResponseBody struct {
	TenantID       string                               `json:"tenantId"`
	ID             string                               `json:"id"`
	Name           string                               `json:"name"`
	Description    *string                              `json:"description"`
	Type           ListOrganizationRolesType            `json:"type"`
	Scopes         []ListOrganizationRolesScope         `json:"scopes"`
	ResourceScopes []ListOrganizationRolesResourceScope `json:"resourceScopes"`
}

func (o *ListOrganizationRolesResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListOrganizationRolesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationRolesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListOrganizationRolesResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListOrganizationRolesResponseBody) GetType() ListOrganizationRolesType {
	if o == nil {
		return ListOrganizationRolesType("")
	}
	return o.Type
}

func (o *ListOrganizationRolesResponseBody) GetScopes() []ListOrganizationRolesScope {
	if o == nil {
		return []ListOrganizationRolesScope{}
	}
	return o.Scopes
}

func (o *ListOrganizationRolesResponseBody) GetResourceScopes() []ListOrganizationRolesResourceScope {
	if o == nil {
		return []ListOrganizationRolesResourceScope{}
	}
	return o.ResourceScopes
}

type ListOrganizationRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of organization roles.
	ResponseBodies []ListOrganizationRolesResponseBody
}

func (o *ListOrganizationRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationRolesResponse) GetResponseBodies() []ListOrganizationRolesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
