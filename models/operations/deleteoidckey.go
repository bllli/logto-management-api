// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

// DeleteOidcKeyKeyType - Private keys are used to sign OIDC JWTs. Cookie keys are used to sign OIDC cookies. For clients, they do not need to know private keys to verify OIDC JWTs; they can use public keys from the JWKS endpoint instead.
type DeleteOidcKeyKeyType string

const (
	DeleteOidcKeyKeyTypePrivateKeys DeleteOidcKeyKeyType = "private-keys"
	DeleteOidcKeyKeyTypeCookieKeys  DeleteOidcKeyKeyType = "cookie-keys"
)

func (e DeleteOidcKeyKeyType) ToPointer() *DeleteOidcKeyKeyType {
	return &e
}
func (e *DeleteOidcKeyKeyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private-keys":
		fallthrough
	case "cookie-keys":
		*e = DeleteOidcKeyKeyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteOidcKeyKeyType: %v", v)
	}
}

type DeleteOidcKeyRequest struct {
	// Private keys are used to sign OIDC JWTs. Cookie keys are used to sign OIDC cookies. For clients, they do not need to know private keys to verify OIDC JWTs; they can use public keys from the JWKS endpoint instead.
	KeyType DeleteOidcKeyKeyType `pathParam:"style=simple,explode=false,name=keyType"`
	// The unique identifier of the key.
	KeyID string `pathParam:"style=simple,explode=false,name=keyId"`
}

func (o *DeleteOidcKeyRequest) GetKeyType() DeleteOidcKeyKeyType {
	if o == nil {
		return DeleteOidcKeyKeyType("")
	}
	return o.KeyType
}

func (o *DeleteOidcKeyRequest) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

type DeleteOidcKeyResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *DeleteOidcKeyResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
