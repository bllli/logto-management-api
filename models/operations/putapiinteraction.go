// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type PutAPIInteractionEvent string

const (
	PutAPIInteractionEventSignIn         PutAPIInteractionEvent = "SignIn"
	PutAPIInteractionEventRegister       PutAPIInteractionEvent = "Register"
	PutAPIInteractionEventForgotPassword PutAPIInteractionEvent = "ForgotPassword"
)

func (e PutAPIInteractionEvent) ToPointer() *PutAPIInteractionEvent {
	return &e
}
func (e *PutAPIInteractionEvent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SignIn":
		fallthrough
	case "Register":
		fallthrough
	case "ForgotPassword":
		*e = PutAPIInteractionEvent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAPIInteractionEvent: %v", v)
	}
}

type PutAPIInteractionIdentifier8 struct {
	ConnectorID string `json:"connectorId"`
	Phone       string `json:"phone"`
}

func (o *PutAPIInteractionIdentifier8) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *PutAPIInteractionIdentifier8) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

type PutAPIInteractionIdentifier7 struct {
	ConnectorID string `json:"connectorId"`
	Email       string `json:"email"`
}

func (o *PutAPIInteractionIdentifier7) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *PutAPIInteractionIdentifier7) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

type PutAPIInteractionIdentifier6 struct {
	ConnectorID string `json:"connectorId"`
	// arbitrary
	ConnectorData map[string]any `json:"connectorData"`
}

func (o *PutAPIInteractionIdentifier6) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *PutAPIInteractionIdentifier6) GetConnectorData() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.ConnectorData
}

type PutAPIInteractionIdentifier5 struct {
	Phone            string `json:"phone"`
	VerificationCode string `json:"verificationCode"`
}

func (o *PutAPIInteractionIdentifier5) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

func (o *PutAPIInteractionIdentifier5) GetVerificationCode() string {
	if o == nil {
		return ""
	}
	return o.VerificationCode
}

type PutAPIInteractionIdentifier4 struct {
	Email            string `json:"email"`
	VerificationCode string `json:"verificationCode"`
}

func (o *PutAPIInteractionIdentifier4) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *PutAPIInteractionIdentifier4) GetVerificationCode() string {
	if o == nil {
		return ""
	}
	return o.VerificationCode
}

type PutAPIInteractionIdentifier3 struct {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

func (o *PutAPIInteractionIdentifier3) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

func (o *PutAPIInteractionIdentifier3) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

type PutAPIInteractionIdentifier2 struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

func (o *PutAPIInteractionIdentifier2) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *PutAPIInteractionIdentifier2) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

type PutAPIInteractionIdentifier1 struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (o *PutAPIInteractionIdentifier1) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *PutAPIInteractionIdentifier1) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

type PutAPIInteractionIdentifierUnionType string

const (
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier1 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_1"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier2 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_2"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier3 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_3"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier4 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_4"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier5 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_5"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier6 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_6"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier7 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_7"
	PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier8 PutAPIInteractionIdentifierUnionType = "put_api_interaction_identifier_8"
)

type PutAPIInteractionIdentifierUnion struct {
	PutAPIInteractionIdentifier1 *PutAPIInteractionIdentifier1 `queryParam:"inline"`
	PutAPIInteractionIdentifier2 *PutAPIInteractionIdentifier2 `queryParam:"inline"`
	PutAPIInteractionIdentifier3 *PutAPIInteractionIdentifier3 `queryParam:"inline"`
	PutAPIInteractionIdentifier4 *PutAPIInteractionIdentifier4 `queryParam:"inline"`
	PutAPIInteractionIdentifier5 *PutAPIInteractionIdentifier5 `queryParam:"inline"`
	PutAPIInteractionIdentifier6 *PutAPIInteractionIdentifier6 `queryParam:"inline"`
	PutAPIInteractionIdentifier7 *PutAPIInteractionIdentifier7 `queryParam:"inline"`
	PutAPIInteractionIdentifier8 *PutAPIInteractionIdentifier8 `queryParam:"inline"`

	Type PutAPIInteractionIdentifierUnionType
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier1(putAPIInteractionIdentifier1 PutAPIInteractionIdentifier1) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier1

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier1: &putAPIInteractionIdentifier1,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier2(putAPIInteractionIdentifier2 PutAPIInteractionIdentifier2) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier2

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier2: &putAPIInteractionIdentifier2,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier3(putAPIInteractionIdentifier3 PutAPIInteractionIdentifier3) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier3

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier3: &putAPIInteractionIdentifier3,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier4(putAPIInteractionIdentifier4 PutAPIInteractionIdentifier4) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier4

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier4: &putAPIInteractionIdentifier4,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier5(putAPIInteractionIdentifier5 PutAPIInteractionIdentifier5) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier5

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier5: &putAPIInteractionIdentifier5,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier6(putAPIInteractionIdentifier6 PutAPIInteractionIdentifier6) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier6

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier6: &putAPIInteractionIdentifier6,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier7(putAPIInteractionIdentifier7 PutAPIInteractionIdentifier7) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier7

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier7: &putAPIInteractionIdentifier7,
		Type:                         typ,
	}
}

func CreatePutAPIInteractionIdentifierUnionPutAPIInteractionIdentifier8(putAPIInteractionIdentifier8 PutAPIInteractionIdentifier8) PutAPIInteractionIdentifierUnion {
	typ := PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier8

	return PutAPIInteractionIdentifierUnion{
		PutAPIInteractionIdentifier8: &putAPIInteractionIdentifier8,
		Type:                         typ,
	}
}

func (u *PutAPIInteractionIdentifierUnion) UnmarshalJSON(data []byte) error {

	var putAPIInteractionIdentifier1 PutAPIInteractionIdentifier1 = PutAPIInteractionIdentifier1{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier1, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier1 = &putAPIInteractionIdentifier1
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier1
		return nil
	}

	var putAPIInteractionIdentifier2 PutAPIInteractionIdentifier2 = PutAPIInteractionIdentifier2{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier2, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier2 = &putAPIInteractionIdentifier2
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier2
		return nil
	}

	var putAPIInteractionIdentifier3 PutAPIInteractionIdentifier3 = PutAPIInteractionIdentifier3{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier3, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier3 = &putAPIInteractionIdentifier3
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier3
		return nil
	}

	var putAPIInteractionIdentifier4 PutAPIInteractionIdentifier4 = PutAPIInteractionIdentifier4{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier4, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier4 = &putAPIInteractionIdentifier4
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier4
		return nil
	}

	var putAPIInteractionIdentifier5 PutAPIInteractionIdentifier5 = PutAPIInteractionIdentifier5{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier5, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier5 = &putAPIInteractionIdentifier5
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier5
		return nil
	}

	var putAPIInteractionIdentifier6 PutAPIInteractionIdentifier6 = PutAPIInteractionIdentifier6{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier6, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier6 = &putAPIInteractionIdentifier6
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier6
		return nil
	}

	var putAPIInteractionIdentifier7 PutAPIInteractionIdentifier7 = PutAPIInteractionIdentifier7{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier7, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier7 = &putAPIInteractionIdentifier7
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier7
		return nil
	}

	var putAPIInteractionIdentifier8 PutAPIInteractionIdentifier8 = PutAPIInteractionIdentifier8{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionIdentifier8, "", true, true); err == nil {
		u.PutAPIInteractionIdentifier8 = &putAPIInteractionIdentifier8
		u.Type = PutAPIInteractionIdentifierUnionTypePutAPIInteractionIdentifier8
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PutAPIInteractionIdentifierUnion", string(data))
}

func (u PutAPIInteractionIdentifierUnion) MarshalJSON() ([]byte, error) {
	if u.PutAPIInteractionIdentifier1 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier1, "", true)
	}

	if u.PutAPIInteractionIdentifier2 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier2, "", true)
	}

	if u.PutAPIInteractionIdentifier3 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier3, "", true)
	}

	if u.PutAPIInteractionIdentifier4 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier4, "", true)
	}

	if u.PutAPIInteractionIdentifier5 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier5, "", true)
	}

	if u.PutAPIInteractionIdentifier6 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier6, "", true)
	}

	if u.PutAPIInteractionIdentifier7 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier7, "", true)
	}

	if u.PutAPIInteractionIdentifier8 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionIdentifier8, "", true)
	}

	return nil, errors.New("could not marshal union type PutAPIInteractionIdentifierUnion: all fields are null")
}

type PutAPIInteractionProfile struct {
	Username    *string `json:"username,omitempty"`
	Email       *string `json:"email,omitempty"`
	Phone       *string `json:"phone,omitempty"`
	ConnectorID *string `json:"connectorId,omitempty"`
	Password    *string `json:"password,omitempty"`
}

func (o *PutAPIInteractionProfile) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *PutAPIInteractionProfile) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *PutAPIInteractionProfile) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *PutAPIInteractionProfile) GetConnectorID() *string {
	if o == nil {
		return nil
	}
	return o.ConnectorID
}

func (o *PutAPIInteractionProfile) GetPassword() *string {
	if o == nil {
		return nil
	}
	return o.Password
}

type PutAPIInteractionRequest struct {
	Event      PutAPIInteractionEvent            `json:"event"`
	Identifier *PutAPIInteractionIdentifierUnion `json:"identifier,omitempty"`
	Profile    *PutAPIInteractionProfile         `json:"profile,omitempty"`
}

func (o *PutAPIInteractionRequest) GetEvent() PutAPIInteractionEvent {
	if o == nil {
		return PutAPIInteractionEvent("")
	}
	return o.Event
}

func (o *PutAPIInteractionRequest) GetIdentifier() *PutAPIInteractionIdentifierUnion {
	if o == nil {
		return nil
	}
	return o.Identifier
}

func (o *PutAPIInteractionRequest) GetProfile() *PutAPIInteractionProfile {
	if o == nil {
		return nil
	}
	return o.Profile
}

type PutAPIInteractionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *PutAPIInteractionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
