// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetOrganizationRoleRequest struct {
	// The unique identifier of the organization role.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetOrganizationRoleRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetOrganizationRoleType string

const (
	GetOrganizationRoleTypeUser             GetOrganizationRoleType = "User"
	GetOrganizationRoleTypeMachineToMachine GetOrganizationRoleType = "MachineToMachine"
)

func (e GetOrganizationRoleType) ToPointer() *GetOrganizationRoleType {
	return &e
}
func (e *GetOrganizationRoleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "MachineToMachine":
		*e = GetOrganizationRoleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationRoleType: %v", v)
	}
}

// GetOrganizationRoleResponseBody - Details of the organization role.
type GetOrganizationRoleResponseBody struct {
	TenantID    string                  `json:"tenantId"`
	ID          string                  `json:"id"`
	Name        string                  `json:"name"`
	Description *string                 `json:"description"`
	Type        GetOrganizationRoleType `json:"type"`
}

func (o *GetOrganizationRoleResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetOrganizationRoleResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOrganizationRoleResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetOrganizationRoleResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetOrganizationRoleResponseBody) GetType() GetOrganizationRoleType {
	if o == nil {
		return GetOrganizationRoleType("")
	}
	return o.Type
}

type GetOrganizationRoleResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Details of the organization role.
	Object *GetOrganizationRoleResponseBody
}

func (o *GetOrganizationRoleResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOrganizationRoleResponse) GetObject() *GetOrganizationRoleResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
