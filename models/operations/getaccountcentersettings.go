// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetAccountCenterSettingsName string

const (
	GetAccountCenterSettingsNameOff      GetAccountCenterSettingsName = "Off"
	GetAccountCenterSettingsNameReadOnly GetAccountCenterSettingsName = "ReadOnly"
	GetAccountCenterSettingsNameEdit     GetAccountCenterSettingsName = "Edit"
)

func (e GetAccountCenterSettingsName) ToPointer() *GetAccountCenterSettingsName {
	return &e
}
func (e *GetAccountCenterSettingsName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsName: %v", v)
	}
}

type GetAccountCenterSettingsAvatar string

const (
	GetAccountCenterSettingsAvatarOff      GetAccountCenterSettingsAvatar = "Off"
	GetAccountCenterSettingsAvatarReadOnly GetAccountCenterSettingsAvatar = "ReadOnly"
	GetAccountCenterSettingsAvatarEdit     GetAccountCenterSettingsAvatar = "Edit"
)

func (e GetAccountCenterSettingsAvatar) ToPointer() *GetAccountCenterSettingsAvatar {
	return &e
}
func (e *GetAccountCenterSettingsAvatar) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsAvatar(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsAvatar: %v", v)
	}
}

type GetAccountCenterSettingsProfile string

const (
	GetAccountCenterSettingsProfileOff      GetAccountCenterSettingsProfile = "Off"
	GetAccountCenterSettingsProfileReadOnly GetAccountCenterSettingsProfile = "ReadOnly"
	GetAccountCenterSettingsProfileEdit     GetAccountCenterSettingsProfile = "Edit"
)

func (e GetAccountCenterSettingsProfile) ToPointer() *GetAccountCenterSettingsProfile {
	return &e
}
func (e *GetAccountCenterSettingsProfile) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsProfile(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsProfile: %v", v)
	}
}

type GetAccountCenterSettingsEmail string

const (
	GetAccountCenterSettingsEmailOff      GetAccountCenterSettingsEmail = "Off"
	GetAccountCenterSettingsEmailReadOnly GetAccountCenterSettingsEmail = "ReadOnly"
	GetAccountCenterSettingsEmailEdit     GetAccountCenterSettingsEmail = "Edit"
)

func (e GetAccountCenterSettingsEmail) ToPointer() *GetAccountCenterSettingsEmail {
	return &e
}
func (e *GetAccountCenterSettingsEmail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsEmail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsEmail: %v", v)
	}
}

type GetAccountCenterSettingsPhone string

const (
	GetAccountCenterSettingsPhoneOff      GetAccountCenterSettingsPhone = "Off"
	GetAccountCenterSettingsPhoneReadOnly GetAccountCenterSettingsPhone = "ReadOnly"
	GetAccountCenterSettingsPhoneEdit     GetAccountCenterSettingsPhone = "Edit"
)

func (e GetAccountCenterSettingsPhone) ToPointer() *GetAccountCenterSettingsPhone {
	return &e
}
func (e *GetAccountCenterSettingsPhone) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsPhone(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsPhone: %v", v)
	}
}

type GetAccountCenterSettingsPassword string

const (
	GetAccountCenterSettingsPasswordOff      GetAccountCenterSettingsPassword = "Off"
	GetAccountCenterSettingsPasswordReadOnly GetAccountCenterSettingsPassword = "ReadOnly"
	GetAccountCenterSettingsPasswordEdit     GetAccountCenterSettingsPassword = "Edit"
)

func (e GetAccountCenterSettingsPassword) ToPointer() *GetAccountCenterSettingsPassword {
	return &e
}
func (e *GetAccountCenterSettingsPassword) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsPassword(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsPassword: %v", v)
	}
}

type GetAccountCenterSettingsUsername string

const (
	GetAccountCenterSettingsUsernameOff      GetAccountCenterSettingsUsername = "Off"
	GetAccountCenterSettingsUsernameReadOnly GetAccountCenterSettingsUsername = "ReadOnly"
	GetAccountCenterSettingsUsernameEdit     GetAccountCenterSettingsUsername = "Edit"
)

func (e GetAccountCenterSettingsUsername) ToPointer() *GetAccountCenterSettingsUsername {
	return &e
}
func (e *GetAccountCenterSettingsUsername) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsUsername(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsUsername: %v", v)
	}
}

type GetAccountCenterSettingsSocial string

const (
	GetAccountCenterSettingsSocialOff      GetAccountCenterSettingsSocial = "Off"
	GetAccountCenterSettingsSocialReadOnly GetAccountCenterSettingsSocial = "ReadOnly"
	GetAccountCenterSettingsSocialEdit     GetAccountCenterSettingsSocial = "Edit"
)

func (e GetAccountCenterSettingsSocial) ToPointer() *GetAccountCenterSettingsSocial {
	return &e
}
func (e *GetAccountCenterSettingsSocial) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsSocial(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsSocial: %v", v)
	}
}

type GetAccountCenterSettingsCustomData string

const (
	GetAccountCenterSettingsCustomDataOff      GetAccountCenterSettingsCustomData = "Off"
	GetAccountCenterSettingsCustomDataReadOnly GetAccountCenterSettingsCustomData = "ReadOnly"
	GetAccountCenterSettingsCustomDataEdit     GetAccountCenterSettingsCustomData = "Edit"
)

func (e GetAccountCenterSettingsCustomData) ToPointer() *GetAccountCenterSettingsCustomData {
	return &e
}
func (e *GetAccountCenterSettingsCustomData) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = GetAccountCenterSettingsCustomData(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountCenterSettingsCustomData: %v", v)
	}
}

type GetAccountCenterSettingsFields struct {
	Name       *GetAccountCenterSettingsName       `json:"name,omitempty"`
	Avatar     *GetAccountCenterSettingsAvatar     `json:"avatar,omitempty"`
	Profile    *GetAccountCenterSettingsProfile    `json:"profile,omitempty"`
	Email      *GetAccountCenterSettingsEmail      `json:"email,omitempty"`
	Phone      *GetAccountCenterSettingsPhone      `json:"phone,omitempty"`
	Password   *GetAccountCenterSettingsPassword   `json:"password,omitempty"`
	Username   *GetAccountCenterSettingsUsername   `json:"username,omitempty"`
	Social     *GetAccountCenterSettingsSocial     `json:"social,omitempty"`
	CustomData *GetAccountCenterSettingsCustomData `json:"customData,omitempty"`
}

func (o *GetAccountCenterSettingsFields) GetName() *GetAccountCenterSettingsName {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetAccountCenterSettingsFields) GetAvatar() *GetAccountCenterSettingsAvatar {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *GetAccountCenterSettingsFields) GetProfile() *GetAccountCenterSettingsProfile {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetAccountCenterSettingsFields) GetEmail() *GetAccountCenterSettingsEmail {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetAccountCenterSettingsFields) GetPhone() *GetAccountCenterSettingsPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *GetAccountCenterSettingsFields) GetPassword() *GetAccountCenterSettingsPassword {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *GetAccountCenterSettingsFields) GetUsername() *GetAccountCenterSettingsUsername {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *GetAccountCenterSettingsFields) GetSocial() *GetAccountCenterSettingsSocial {
	if o == nil {
		return nil
	}
	return o.Social
}

func (o *GetAccountCenterSettingsFields) GetCustomData() *GetAccountCenterSettingsCustomData {
	if o == nil {
		return nil
	}
	return o.CustomData
}

// GetAccountCenterSettingsResponseBody - Account center settings.
type GetAccountCenterSettingsResponseBody struct {
	TenantID string                         `json:"tenantId"`
	ID       string                         `json:"id"`
	Enabled  bool                           `json:"enabled"`
	Fields   GetAccountCenterSettingsFields `json:"fields"`
}

func (o *GetAccountCenterSettingsResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetAccountCenterSettingsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAccountCenterSettingsResponseBody) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *GetAccountCenterSettingsResponseBody) GetFields() GetAccountCenterSettingsFields {
	if o == nil {
		return GetAccountCenterSettingsFields{}
	}
	return o.Fields
}

type GetAccountCenterSettingsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Account center settings.
	Object *GetAccountCenterSettingsResponseBody
}

func (o *GetAccountCenterSettingsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAccountCenterSettingsResponse) GetObject() *GetAccountCenterSettingsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
