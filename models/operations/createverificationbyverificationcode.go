// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type CreateVerificationByVerificationCodeType string

const (
	CreateVerificationByVerificationCodeTypeEmail CreateVerificationByVerificationCodeType = "email"
	CreateVerificationByVerificationCodeTypePhone CreateVerificationByVerificationCodeType = "phone"
)

func (e CreateVerificationByVerificationCodeType) ToPointer() *CreateVerificationByVerificationCodeType {
	return &e
}
func (e *CreateVerificationByVerificationCodeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		fallthrough
	case "phone":
		*e = CreateVerificationByVerificationCodeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVerificationByVerificationCodeType: %v", v)
	}
}

// CreateVerificationByVerificationCodeIdentifier - The identifier (email address or phone number) to send the verification code to.
type CreateVerificationByVerificationCodeIdentifier struct {
	Type  CreateVerificationByVerificationCodeType `json:"type"`
	Value string                                   `json:"value"`
}

func (o *CreateVerificationByVerificationCodeIdentifier) GetType() CreateVerificationByVerificationCodeType {
	if o == nil {
		return CreateVerificationByVerificationCodeType("")
	}
	return o.Type
}

func (o *CreateVerificationByVerificationCodeIdentifier) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type CreateVerificationByVerificationCodeRequest struct {
	// The identifier (email address or phone number) to send the verification code to.
	Identifier CreateVerificationByVerificationCodeIdentifier `json:"identifier"`
}

func (o *CreateVerificationByVerificationCodeRequest) GetIdentifier() CreateVerificationByVerificationCodeIdentifier {
	if o == nil {
		return CreateVerificationByVerificationCodeIdentifier{}
	}
	return o.Identifier
}

// CreateVerificationByVerificationCodeResponseBody - The verification code has been successfully sent.
type CreateVerificationByVerificationCodeResponseBody struct {
	VerificationRecordID string `json:"verificationRecordId"`
	ExpiresAt            string `json:"expiresAt"`
}

func (o *CreateVerificationByVerificationCodeResponseBody) GetVerificationRecordID() string {
	if o == nil {
		return ""
	}
	return o.VerificationRecordID
}

func (o *CreateVerificationByVerificationCodeResponseBody) GetExpiresAt() string {
	if o == nil {
		return ""
	}
	return o.ExpiresAt
}

type CreateVerificationByVerificationCodeResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The verification code has been successfully sent.
	Object *CreateVerificationByVerificationCodeResponseBody
}

func (o *CreateVerificationByVerificationCodeResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateVerificationByVerificationCodeResponse) GetObject() *CreateVerificationByVerificationCodeResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
