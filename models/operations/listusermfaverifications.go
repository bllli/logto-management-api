// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type ListUserMfaVerificationsRequest struct {
	// The unique identifier of the user.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

func (o *ListUserMfaVerificationsRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

type ListUserMfaVerificationsType string

const (
	ListUserMfaVerificationsTypeTotp       ListUserMfaVerificationsType = "Totp"
	ListUserMfaVerificationsTypeWebAuthn   ListUserMfaVerificationsType = "WebAuthn"
	ListUserMfaVerificationsTypeBackupCode ListUserMfaVerificationsType = "BackupCode"
)

func (e ListUserMfaVerificationsType) ToPointer() *ListUserMfaVerificationsType {
	return &e
}
func (e *ListUserMfaVerificationsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Totp":
		fallthrough
	case "WebAuthn":
		fallthrough
	case "BackupCode":
		*e = ListUserMfaVerificationsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUserMfaVerificationsType: %v", v)
	}
}

type ListUserMfaVerificationsResponseBody struct {
	ID          string                       `json:"id"`
	CreatedAt   string                       `json:"createdAt"`
	Type        ListUserMfaVerificationsType `json:"type"`
	Agent       *string                      `json:"agent,omitempty"`
	RemainCodes *float64                     `json:"remainCodes,omitempty"`
}

func (o *ListUserMfaVerificationsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListUserMfaVerificationsResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *ListUserMfaVerificationsResponseBody) GetType() ListUserMfaVerificationsType {
	if o == nil {
		return ListUserMfaVerificationsType("")
	}
	return o.Type
}

func (o *ListUserMfaVerificationsResponseBody) GetAgent() *string {
	if o == nil {
		return nil
	}
	return o.Agent
}

func (o *ListUserMfaVerificationsResponseBody) GetRemainCodes() *float64 {
	if o == nil {
		return nil
	}
	return o.RemainCodes
}

type ListUserMfaVerificationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of MFA verifications for the user.
	ResponseBodies []ListUserMfaVerificationsResponseBody
}

func (o *ListUserMfaVerificationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListUserMfaVerificationsResponse) GetResponseBodies() []ListUserMfaVerificationsResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
