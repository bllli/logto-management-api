// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type UpdateAccountCenterSettingsNameRequest string

const (
	UpdateAccountCenterSettingsNameRequestOff      UpdateAccountCenterSettingsNameRequest = "Off"
	UpdateAccountCenterSettingsNameRequestReadOnly UpdateAccountCenterSettingsNameRequest = "ReadOnly"
	UpdateAccountCenterSettingsNameRequestEdit     UpdateAccountCenterSettingsNameRequest = "Edit"
)

func (e UpdateAccountCenterSettingsNameRequest) ToPointer() *UpdateAccountCenterSettingsNameRequest {
	return &e
}
func (e *UpdateAccountCenterSettingsNameRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsNameRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsNameRequest: %v", v)
	}
}

type AvatarRequest string

const (
	AvatarRequestOff      AvatarRequest = "Off"
	AvatarRequestReadOnly AvatarRequest = "ReadOnly"
	AvatarRequestEdit     AvatarRequest = "Edit"
)

func (e AvatarRequest) ToPointer() *AvatarRequest {
	return &e
}
func (e *AvatarRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = AvatarRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AvatarRequest: %v", v)
	}
}

type UpdateAccountCenterSettingsProfileRequest string

const (
	UpdateAccountCenterSettingsProfileRequestOff      UpdateAccountCenterSettingsProfileRequest = "Off"
	UpdateAccountCenterSettingsProfileRequestReadOnly UpdateAccountCenterSettingsProfileRequest = "ReadOnly"
	UpdateAccountCenterSettingsProfileRequestEdit     UpdateAccountCenterSettingsProfileRequest = "Edit"
)

func (e UpdateAccountCenterSettingsProfileRequest) ToPointer() *UpdateAccountCenterSettingsProfileRequest {
	return &e
}
func (e *UpdateAccountCenterSettingsProfileRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsProfileRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsProfileRequest: %v", v)
	}
}

type EmailRequest string

const (
	EmailRequestOff      EmailRequest = "Off"
	EmailRequestReadOnly EmailRequest = "ReadOnly"
	EmailRequestEdit     EmailRequest = "Edit"
)

func (e EmailRequest) ToPointer() *EmailRequest {
	return &e
}
func (e *EmailRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = EmailRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmailRequest: %v", v)
	}
}

type PhoneRequest string

const (
	PhoneRequestOff      PhoneRequest = "Off"
	PhoneRequestReadOnly PhoneRequest = "ReadOnly"
	PhoneRequestEdit     PhoneRequest = "Edit"
)

func (e PhoneRequest) ToPointer() *PhoneRequest {
	return &e
}
func (e *PhoneRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = PhoneRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneRequest: %v", v)
	}
}

type PasswordRequest string

const (
	PasswordRequestOff      PasswordRequest = "Off"
	PasswordRequestReadOnly PasswordRequest = "ReadOnly"
	PasswordRequestEdit     PasswordRequest = "Edit"
)

func (e PasswordRequest) ToPointer() *PasswordRequest {
	return &e
}
func (e *PasswordRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = PasswordRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PasswordRequest: %v", v)
	}
}

type UsernameRequest string

const (
	UsernameRequestOff      UsernameRequest = "Off"
	UsernameRequestReadOnly UsernameRequest = "ReadOnly"
	UsernameRequestEdit     UsernameRequest = "Edit"
)

func (e UsernameRequest) ToPointer() *UsernameRequest {
	return &e
}
func (e *UsernameRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UsernameRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsernameRequest: %v", v)
	}
}

type SocialRequest string

const (
	SocialRequestOff      SocialRequest = "Off"
	SocialRequestReadOnly SocialRequest = "ReadOnly"
	SocialRequestEdit     SocialRequest = "Edit"
)

func (e SocialRequest) ToPointer() *SocialRequest {
	return &e
}
func (e *SocialRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = SocialRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SocialRequest: %v", v)
	}
}

type UpdateAccountCenterSettingsCustomDataRequest string

const (
	UpdateAccountCenterSettingsCustomDataRequestOff      UpdateAccountCenterSettingsCustomDataRequest = "Off"
	UpdateAccountCenterSettingsCustomDataRequestReadOnly UpdateAccountCenterSettingsCustomDataRequest = "ReadOnly"
	UpdateAccountCenterSettingsCustomDataRequestEdit     UpdateAccountCenterSettingsCustomDataRequest = "Edit"
)

func (e UpdateAccountCenterSettingsCustomDataRequest) ToPointer() *UpdateAccountCenterSettingsCustomDataRequest {
	return &e
}
func (e *UpdateAccountCenterSettingsCustomDataRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsCustomDataRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsCustomDataRequest: %v", v)
	}
}

// FieldsRequest - The fields settings for the account API.
type FieldsRequest struct {
	Name       *UpdateAccountCenterSettingsNameRequest       `json:"name,omitempty"`
	Avatar     *AvatarRequest                                `json:"avatar,omitempty"`
	Profile    *UpdateAccountCenterSettingsProfileRequest    `json:"profile,omitempty"`
	Email      *EmailRequest                                 `json:"email,omitempty"`
	Phone      *PhoneRequest                                 `json:"phone,omitempty"`
	Password   *PasswordRequest                              `json:"password,omitempty"`
	Username   *UsernameRequest                              `json:"username,omitempty"`
	Social     *SocialRequest                                `json:"social,omitempty"`
	CustomData *UpdateAccountCenterSettingsCustomDataRequest `json:"customData,omitempty"`
}

func (o *FieldsRequest) GetName() *UpdateAccountCenterSettingsNameRequest {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *FieldsRequest) GetAvatar() *AvatarRequest {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *FieldsRequest) GetProfile() *UpdateAccountCenterSettingsProfileRequest {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *FieldsRequest) GetEmail() *EmailRequest {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *FieldsRequest) GetPhone() *PhoneRequest {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *FieldsRequest) GetPassword() *PasswordRequest {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *FieldsRequest) GetUsername() *UsernameRequest {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *FieldsRequest) GetSocial() *SocialRequest {
	if o == nil {
		return nil
	}
	return o.Social
}

func (o *FieldsRequest) GetCustomData() *UpdateAccountCenterSettingsCustomDataRequest {
	if o == nil {
		return nil
	}
	return o.CustomData
}

type UpdateAccountCenterSettingsRequest struct {
	// Enable or disable the account API.
	Enabled *bool `json:"enabled,omitempty"`
	// The fields settings for the account API.
	Fields *FieldsRequest `json:"fields,omitempty"`
}

func (o *UpdateAccountCenterSettingsRequest) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *UpdateAccountCenterSettingsRequest) GetFields() *FieldsRequest {
	if o == nil {
		return nil
	}
	return o.Fields
}

type UpdateAccountCenterSettingsNameResponse string

const (
	UpdateAccountCenterSettingsNameResponseOff      UpdateAccountCenterSettingsNameResponse = "Off"
	UpdateAccountCenterSettingsNameResponseReadOnly UpdateAccountCenterSettingsNameResponse = "ReadOnly"
	UpdateAccountCenterSettingsNameResponseEdit     UpdateAccountCenterSettingsNameResponse = "Edit"
)

func (e UpdateAccountCenterSettingsNameResponse) ToPointer() *UpdateAccountCenterSettingsNameResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsNameResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsNameResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsNameResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsAvatarResponse string

const (
	UpdateAccountCenterSettingsAvatarResponseOff      UpdateAccountCenterSettingsAvatarResponse = "Off"
	UpdateAccountCenterSettingsAvatarResponseReadOnly UpdateAccountCenterSettingsAvatarResponse = "ReadOnly"
	UpdateAccountCenterSettingsAvatarResponseEdit     UpdateAccountCenterSettingsAvatarResponse = "Edit"
)

func (e UpdateAccountCenterSettingsAvatarResponse) ToPointer() *UpdateAccountCenterSettingsAvatarResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsAvatarResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsAvatarResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsAvatarResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsProfileResponse string

const (
	UpdateAccountCenterSettingsProfileResponseOff      UpdateAccountCenterSettingsProfileResponse = "Off"
	UpdateAccountCenterSettingsProfileResponseReadOnly UpdateAccountCenterSettingsProfileResponse = "ReadOnly"
	UpdateAccountCenterSettingsProfileResponseEdit     UpdateAccountCenterSettingsProfileResponse = "Edit"
)

func (e UpdateAccountCenterSettingsProfileResponse) ToPointer() *UpdateAccountCenterSettingsProfileResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsProfileResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsProfileResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsProfileResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsEmailResponse string

const (
	UpdateAccountCenterSettingsEmailResponseOff      UpdateAccountCenterSettingsEmailResponse = "Off"
	UpdateAccountCenterSettingsEmailResponseReadOnly UpdateAccountCenterSettingsEmailResponse = "ReadOnly"
	UpdateAccountCenterSettingsEmailResponseEdit     UpdateAccountCenterSettingsEmailResponse = "Edit"
)

func (e UpdateAccountCenterSettingsEmailResponse) ToPointer() *UpdateAccountCenterSettingsEmailResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsEmailResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsEmailResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsEmailResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsPhoneResponse string

const (
	UpdateAccountCenterSettingsPhoneResponseOff      UpdateAccountCenterSettingsPhoneResponse = "Off"
	UpdateAccountCenterSettingsPhoneResponseReadOnly UpdateAccountCenterSettingsPhoneResponse = "ReadOnly"
	UpdateAccountCenterSettingsPhoneResponseEdit     UpdateAccountCenterSettingsPhoneResponse = "Edit"
)

func (e UpdateAccountCenterSettingsPhoneResponse) ToPointer() *UpdateAccountCenterSettingsPhoneResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsPhoneResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsPhoneResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsPhoneResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsPasswordResponse string

const (
	UpdateAccountCenterSettingsPasswordResponseOff      UpdateAccountCenterSettingsPasswordResponse = "Off"
	UpdateAccountCenterSettingsPasswordResponseReadOnly UpdateAccountCenterSettingsPasswordResponse = "ReadOnly"
	UpdateAccountCenterSettingsPasswordResponseEdit     UpdateAccountCenterSettingsPasswordResponse = "Edit"
)

func (e UpdateAccountCenterSettingsPasswordResponse) ToPointer() *UpdateAccountCenterSettingsPasswordResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsPasswordResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsPasswordResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsPasswordResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsUsernameResponse string

const (
	UpdateAccountCenterSettingsUsernameResponseOff      UpdateAccountCenterSettingsUsernameResponse = "Off"
	UpdateAccountCenterSettingsUsernameResponseReadOnly UpdateAccountCenterSettingsUsernameResponse = "ReadOnly"
	UpdateAccountCenterSettingsUsernameResponseEdit     UpdateAccountCenterSettingsUsernameResponse = "Edit"
)

func (e UpdateAccountCenterSettingsUsernameResponse) ToPointer() *UpdateAccountCenterSettingsUsernameResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsUsernameResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsUsernameResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsUsernameResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsSocialResponse string

const (
	UpdateAccountCenterSettingsSocialResponseOff      UpdateAccountCenterSettingsSocialResponse = "Off"
	UpdateAccountCenterSettingsSocialResponseReadOnly UpdateAccountCenterSettingsSocialResponse = "ReadOnly"
	UpdateAccountCenterSettingsSocialResponseEdit     UpdateAccountCenterSettingsSocialResponse = "Edit"
)

func (e UpdateAccountCenterSettingsSocialResponse) ToPointer() *UpdateAccountCenterSettingsSocialResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsSocialResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsSocialResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsSocialResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsCustomDataResponse string

const (
	UpdateAccountCenterSettingsCustomDataResponseOff      UpdateAccountCenterSettingsCustomDataResponse = "Off"
	UpdateAccountCenterSettingsCustomDataResponseReadOnly UpdateAccountCenterSettingsCustomDataResponse = "ReadOnly"
	UpdateAccountCenterSettingsCustomDataResponseEdit     UpdateAccountCenterSettingsCustomDataResponse = "Edit"
)

func (e UpdateAccountCenterSettingsCustomDataResponse) ToPointer() *UpdateAccountCenterSettingsCustomDataResponse {
	return &e
}
func (e *UpdateAccountCenterSettingsCustomDataResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Off":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Edit":
		*e = UpdateAccountCenterSettingsCustomDataResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountCenterSettingsCustomDataResponse: %v", v)
	}
}

type UpdateAccountCenterSettingsFieldsResponse struct {
	Name       *UpdateAccountCenterSettingsNameResponse       `json:"name,omitempty"`
	Avatar     *UpdateAccountCenterSettingsAvatarResponse     `json:"avatar,omitempty"`
	Profile    *UpdateAccountCenterSettingsProfileResponse    `json:"profile,omitempty"`
	Email      *UpdateAccountCenterSettingsEmailResponse      `json:"email,omitempty"`
	Phone      *UpdateAccountCenterSettingsPhoneResponse      `json:"phone,omitempty"`
	Password   *UpdateAccountCenterSettingsPasswordResponse   `json:"password,omitempty"`
	Username   *UpdateAccountCenterSettingsUsernameResponse   `json:"username,omitempty"`
	Social     *UpdateAccountCenterSettingsSocialResponse     `json:"social,omitempty"`
	CustomData *UpdateAccountCenterSettingsCustomDataResponse `json:"customData,omitempty"`
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetName() *UpdateAccountCenterSettingsNameResponse {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetAvatar() *UpdateAccountCenterSettingsAvatarResponse {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetProfile() *UpdateAccountCenterSettingsProfileResponse {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetEmail() *UpdateAccountCenterSettingsEmailResponse {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetPhone() *UpdateAccountCenterSettingsPhoneResponse {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetPassword() *UpdateAccountCenterSettingsPasswordResponse {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetUsername() *UpdateAccountCenterSettingsUsernameResponse {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetSocial() *UpdateAccountCenterSettingsSocialResponse {
	if o == nil {
		return nil
	}
	return o.Social
}

func (o *UpdateAccountCenterSettingsFieldsResponse) GetCustomData() *UpdateAccountCenterSettingsCustomDataResponse {
	if o == nil {
		return nil
	}
	return o.CustomData
}

// UpdateAccountCenterSettingsResponseBody - Updated account center settings.
type UpdateAccountCenterSettingsResponseBody struct {
	TenantID string                                    `json:"tenantId"`
	ID       string                                    `json:"id"`
	Enabled  bool                                      `json:"enabled"`
	Fields   UpdateAccountCenterSettingsFieldsResponse `json:"fields"`
}

func (o *UpdateAccountCenterSettingsResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *UpdateAccountCenterSettingsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateAccountCenterSettingsResponseBody) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *UpdateAccountCenterSettingsResponseBody) GetFields() UpdateAccountCenterSettingsFieldsResponse {
	if o == nil {
		return UpdateAccountCenterSettingsFieldsResponse{}
	}
	return o.Fields
}

type UpdateAccountCenterSettingsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Updated account center settings.
	Object *UpdateAccountCenterSettingsResponseBody
}

func (o *UpdateAccountCenterSettingsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateAccountCenterSettingsResponse) GetObject() *UpdateAccountCenterSettingsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
