// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type CreateConnectorAuthorizationURIRequestBody struct {
	// A random string generated on the client side to prevent CSRF (Cross-Site Request Forgery) attacks.
	State string `json:"state"`
	// The URI to navigate back to after the user is authenticated by the connected social identity provider and has granted access to the connector.
	RedirectURI string `json:"redirectUri"`
}

func (o *CreateConnectorAuthorizationURIRequestBody) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *CreateConnectorAuthorizationURIRequestBody) GetRedirectURI() string {
	if o == nil {
		return ""
	}
	return o.RedirectURI
}

type CreateConnectorAuthorizationURIRequest struct {
	// The unique identifier of the connector.
	ConnectorID string                                     `pathParam:"style=simple,explode=false,name=connectorId"`
	RequestBody CreateConnectorAuthorizationURIRequestBody `request:"mediaType=application/json"`
}

func (o *CreateConnectorAuthorizationURIRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *CreateConnectorAuthorizationURIRequest) GetRequestBody() CreateConnectorAuthorizationURIRequestBody {
	if o == nil {
		return CreateConnectorAuthorizationURIRequestBody{}
	}
	return o.RequestBody
}

// CreateConnectorAuthorizationURIResponseBody - Successfully built authorization URI.
type CreateConnectorAuthorizationURIResponseBody struct {
	RedirectTo string `json:"redirectTo"`
	// The URI to navigate for authentication and authorization in the connected social identity provider.
	RedirectURI any `json:"redirectUri,omitempty"`
}

func (o *CreateConnectorAuthorizationURIResponseBody) GetRedirectTo() string {
	if o == nil {
		return ""
	}
	return o.RedirectTo
}

func (o *CreateConnectorAuthorizationURIResponseBody) GetRedirectURI() any {
	if o == nil {
		return nil
	}
	return o.RedirectURI
}

type CreateConnectorAuthorizationURIResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully built authorization URI.
	Object *CreateConnectorAuthorizationURIResponseBody
}

func (o *CreateConnectorAuthorizationURIResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateConnectorAuthorizationURIResponse) GetObject() *CreateConnectorAuthorizationURIResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
