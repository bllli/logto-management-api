// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

// ReplaceUserIdentityDetails - The user's social identity details.
type ReplaceUserIdentityDetails struct {
}

type ReplaceUserIdentityRequestBody struct {
	// The user's social identity ID.
	UserID string `json:"userId"`
	// The user's social identity details.
	Details *ReplaceUserIdentityDetails `json:"details,omitempty"`
}

func (o *ReplaceUserIdentityRequestBody) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ReplaceUserIdentityRequestBody) GetDetails() *ReplaceUserIdentityDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type ReplaceUserIdentityRequest struct {
	// The unique identifier of the user.
	UserID      string                         `pathParam:"style=simple,explode=false,name=userId"`
	Target      string                         `pathParam:"style=simple,explode=false,name=target"`
	RequestBody ReplaceUserIdentityRequestBody `request:"mediaType=application/json"`
}

func (o *ReplaceUserIdentityRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ReplaceUserIdentityRequest) GetTarget() string {
	if o == nil {
		return ""
	}
	return o.Target
}

func (o *ReplaceUserIdentityRequest) GetRequestBody() ReplaceUserIdentityRequestBody {
	if o == nil {
		return ReplaceUserIdentityRequestBody{}
	}
	return o.RequestBody
}

type ReplaceUserIdentityResponseBody2 struct {
	UserID string `json:"userId"`
	// arbitrary
	Details map[string]any `json:"details,omitempty"`
}

func (o *ReplaceUserIdentityResponseBody2) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ReplaceUserIdentityResponseBody2) GetDetails() map[string]any {
	if o == nil {
		return nil
	}
	return o.Details
}

type ReplaceUserIdentityResponseBody1 struct {
	UserID string `json:"userId"`
	// arbitrary
	Details map[string]any `json:"details,omitempty"`
}

func (o *ReplaceUserIdentityResponseBody1) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ReplaceUserIdentityResponseBody1) GetDetails() map[string]any {
	if o == nil {
		return nil
	}
	return o.Details
}

type ReplaceUserIdentityResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The identity is updated.
	TwoHundredApplicationJSONObject map[string]ReplaceUserIdentityResponseBody1
	// The identity is created.
	TwoHundredAndOneApplicationJSONObject map[string]ReplaceUserIdentityResponseBody2
}

func (o *ReplaceUserIdentityResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ReplaceUserIdentityResponse) GetTwoHundredApplicationJSONObject() map[string]ReplaceUserIdentityResponseBody1 {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ReplaceUserIdentityResponse) GetTwoHundredAndOneApplicationJSONObject() map[string]ReplaceUserIdentityResponseBody2 {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONObject
}
