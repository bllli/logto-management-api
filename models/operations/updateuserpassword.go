// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type UpdateUserPasswordRequestBody struct {
	// New password for the user.
	Password string `json:"password"`
}

func (o *UpdateUserPasswordRequestBody) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

type UpdateUserPasswordRequest struct {
	// The unique identifier of the user.
	UserID      string                        `pathParam:"style=simple,explode=false,name=userId"`
	RequestBody UpdateUserPasswordRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateUserPasswordRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *UpdateUserPasswordRequest) GetRequestBody() UpdateUserPasswordRequestBody {
	if o == nil {
		return UpdateUserPasswordRequestBody{}
	}
	return o.RequestBody
}

type UpdateUserPasswordIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details map[string]any `json:"details,omitempty"`
}

func (o *UpdateUserPasswordIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *UpdateUserPasswordIdentities) GetDetails() map[string]any {
	if o == nil {
		return nil
	}
	return o.Details
}

type UpdateUserPasswordAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *UpdateUserPasswordAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *UpdateUserPasswordAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *UpdateUserPasswordAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *UpdateUserPasswordAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *UpdateUserPasswordAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *UpdateUserPasswordAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type UpdateUserPasswordProfile struct {
	FamilyName        *string                    `json:"familyName,omitempty"`
	GivenName         *string                    `json:"givenName,omitempty"`
	MiddleName        *string                    `json:"middleName,omitempty"`
	Nickname          *string                    `json:"nickname,omitempty"`
	PreferredUsername *string                    `json:"preferredUsername,omitempty"`
	Profile           *string                    `json:"profile,omitempty"`
	Website           *string                    `json:"website,omitempty"`
	Gender            *string                    `json:"gender,omitempty"`
	Birthdate         *string                    `json:"birthdate,omitempty"`
	Zoneinfo          *string                    `json:"zoneinfo,omitempty"`
	Locale            *string                    `json:"locale,omitempty"`
	Address           *UpdateUserPasswordAddress `json:"address,omitempty"`
}

func (o *UpdateUserPasswordProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *UpdateUserPasswordProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *UpdateUserPasswordProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *UpdateUserPasswordProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *UpdateUserPasswordProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *UpdateUserPasswordProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *UpdateUserPasswordProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *UpdateUserPasswordProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *UpdateUserPasswordProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *UpdateUserPasswordProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *UpdateUserPasswordProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *UpdateUserPasswordProfile) GetAddress() *UpdateUserPasswordAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

type UpdateUserPasswordSsoIdentity struct {
	TenantID   string `json:"tenantId"`
	ID         string `json:"id"`
	UserID     string `json:"userId"`
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail         map[string]any `json:"detail"`
	CreatedAt      float64        `json:"createdAt"`
	SsoConnectorID string         `json:"ssoConnectorId"`
}

func (o *UpdateUserPasswordSsoIdentity) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *UpdateUserPasswordSsoIdentity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateUserPasswordSsoIdentity) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *UpdateUserPasswordSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *UpdateUserPasswordSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *UpdateUserPasswordSsoIdentity) GetDetail() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Detail
}

func (o *UpdateUserPasswordSsoIdentity) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *UpdateUserPasswordSsoIdentity) GetSsoConnectorID() string {
	if o == nil {
		return ""
	}
	return o.SsoConnectorID
}

// UpdateUserPasswordResponseBody - User password updated successfully.
type UpdateUserPasswordResponseBody struct {
	ID           string  `json:"id"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	// arbitrary
	CustomData    map[string]any                          `json:"customData"`
	Identities    map[string]UpdateUserPasswordIdentities `json:"identities"`
	LastSignInAt  *float64                                `json:"lastSignInAt"`
	CreatedAt     float64                                 `json:"createdAt"`
	UpdatedAt     float64                                 `json:"updatedAt"`
	Profile       UpdateUserPasswordProfile               `json:"profile"`
	ApplicationID *string                                 `json:"applicationId"`
	IsSuspended   bool                                    `json:"isSuspended"`
	HasPassword   *bool                                   `json:"hasPassword,omitempty"`
	SsoIdentities []UpdateUserPasswordSsoIdentity         `json:"ssoIdentities,omitempty"`
}

func (o *UpdateUserPasswordResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateUserPasswordResponseBody) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *UpdateUserPasswordResponseBody) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *UpdateUserPasswordResponseBody) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *UpdateUserPasswordResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateUserPasswordResponseBody) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *UpdateUserPasswordResponseBody) GetCustomData() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.CustomData
}

func (o *UpdateUserPasswordResponseBody) GetIdentities() map[string]UpdateUserPasswordIdentities {
	if o == nil {
		return map[string]UpdateUserPasswordIdentities{}
	}
	return o.Identities
}

func (o *UpdateUserPasswordResponseBody) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *UpdateUserPasswordResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *UpdateUserPasswordResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *UpdateUserPasswordResponseBody) GetProfile() UpdateUserPasswordProfile {
	if o == nil {
		return UpdateUserPasswordProfile{}
	}
	return o.Profile
}

func (o *UpdateUserPasswordResponseBody) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *UpdateUserPasswordResponseBody) GetIsSuspended() bool {
	if o == nil {
		return false
	}
	return o.IsSuspended
}

func (o *UpdateUserPasswordResponseBody) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *UpdateUserPasswordResponseBody) GetSsoIdentities() []UpdateUserPasswordSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

type UpdateUserPasswordResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// User password updated successfully.
	Object *UpdateUserPasswordResponseBody
}

func (o *UpdateUserPasswordResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateUserPasswordResponse) GetObject() *UpdateUserPasswordResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
