// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetOrganizationInvitationRequest struct {
	// The unique identifier of the organization invitation.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetOrganizationInvitationRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetOrganizationInvitationStatus string

const (
	GetOrganizationInvitationStatusPending  GetOrganizationInvitationStatus = "Pending"
	GetOrganizationInvitationStatusAccepted GetOrganizationInvitationStatus = "Accepted"
	GetOrganizationInvitationStatusExpired  GetOrganizationInvitationStatus = "Expired"
	GetOrganizationInvitationStatusRevoked  GetOrganizationInvitationStatus = "Revoked"
)

func (e GetOrganizationInvitationStatus) ToPointer() *GetOrganizationInvitationStatus {
	return &e
}
func (e *GetOrganizationInvitationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Accepted":
		fallthrough
	case "Expired":
		fallthrough
	case "Revoked":
		*e = GetOrganizationInvitationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationInvitationStatus: %v", v)
	}
}

type GetOrganizationInvitationOrganizationRole struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *GetOrganizationInvitationOrganizationRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOrganizationInvitationOrganizationRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// GetOrganizationInvitationResponseBody - The organization invitation, also contains the organization roles to be assigned to the user when they accept the invitation.
type GetOrganizationInvitationResponseBody struct {
	TenantID          string                                      `json:"tenantId"`
	ID                string                                      `json:"id"`
	InviterID         *string                                     `json:"inviterId"`
	Invitee           string                                      `json:"invitee"`
	AcceptedUserID    *string                                     `json:"acceptedUserId"`
	OrganizationID    string                                      `json:"organizationId"`
	Status            GetOrganizationInvitationStatus             `json:"status"`
	CreatedAt         float64                                     `json:"createdAt"`
	UpdatedAt         float64                                     `json:"updatedAt"`
	ExpiresAt         float64                                     `json:"expiresAt"`
	OrganizationRoles []GetOrganizationInvitationOrganizationRole `json:"organizationRoles"`
}

func (o *GetOrganizationInvitationResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetOrganizationInvitationResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOrganizationInvitationResponseBody) GetInviterID() *string {
	if o == nil {
		return nil
	}
	return o.InviterID
}

func (o *GetOrganizationInvitationResponseBody) GetInvitee() string {
	if o == nil {
		return ""
	}
	return o.Invitee
}

func (o *GetOrganizationInvitationResponseBody) GetAcceptedUserID() *string {
	if o == nil {
		return nil
	}
	return o.AcceptedUserID
}

func (o *GetOrganizationInvitationResponseBody) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *GetOrganizationInvitationResponseBody) GetStatus() GetOrganizationInvitationStatus {
	if o == nil {
		return GetOrganizationInvitationStatus("")
	}
	return o.Status
}

func (o *GetOrganizationInvitationResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetOrganizationInvitationResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *GetOrganizationInvitationResponseBody) GetExpiresAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.ExpiresAt
}

func (o *GetOrganizationInvitationResponseBody) GetOrganizationRoles() []GetOrganizationInvitationOrganizationRole {
	if o == nil {
		return []GetOrganizationInvitationOrganizationRole{}
	}
	return o.OrganizationRoles
}

type GetOrganizationInvitationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The organization invitation, also contains the organization roles to be assigned to the user when they accept the invitation.
	Object *GetOrganizationInvitationResponseBody
}

func (o *GetOrganizationInvitationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOrganizationInvitationResponse) GetObject() *GetOrganizationInvitationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
