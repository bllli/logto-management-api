// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type AllowUploadMimeType string

const (
	AllowUploadMimeTypeImageJpeg             AllowUploadMimeType = "image/jpeg"
	AllowUploadMimeTypeImagePng              AllowUploadMimeType = "image/png"
	AllowUploadMimeTypeImageGif              AllowUploadMimeType = "image/gif"
	AllowUploadMimeTypeImageVndMicrosoftIcon AllowUploadMimeType = "image/vnd.microsoft.icon"
	AllowUploadMimeTypeImageXIcon            AllowUploadMimeType = "image/x-icon"
	AllowUploadMimeTypeImageSvgPlusXML       AllowUploadMimeType = "image/svg+xml"
	AllowUploadMimeTypeImageTiff             AllowUploadMimeType = "image/tiff"
	AllowUploadMimeTypeImageWebp             AllowUploadMimeType = "image/webp"
	AllowUploadMimeTypeImageBmp              AllowUploadMimeType = "image/bmp"
	AllowUploadMimeTypeApplicationZip        AllowUploadMimeType = "application/zip"
)

func (e AllowUploadMimeType) ToPointer() *AllowUploadMimeType {
	return &e
}
func (e *AllowUploadMimeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "image/jpeg":
		fallthrough
	case "image/png":
		fallthrough
	case "image/gif":
		fallthrough
	case "image/vnd.microsoft.icon":
		fallthrough
	case "image/x-icon":
		fallthrough
	case "image/svg+xml":
		fallthrough
	case "image/tiff":
		fallthrough
	case "image/webp":
		fallthrough
	case "image/bmp":
		fallthrough
	case "application/zip":
		*e = AllowUploadMimeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllowUploadMimeType: %v", v)
	}
}

// GetUserAssetServiceStatusResponseBody - An object containing the service status and metadata.
type GetUserAssetServiceStatusResponseBody struct {
	Status               string                `json:"status"`
	AllowUploadMimeTypes []AllowUploadMimeType `json:"allowUploadMimeTypes,omitempty"`
	MaxUploadFileSize    *float64              `json:"maxUploadFileSize,omitempty"`
}

func (o *GetUserAssetServiceStatusResponseBody) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *GetUserAssetServiceStatusResponseBody) GetAllowUploadMimeTypes() []AllowUploadMimeType {
	if o == nil {
		return nil
	}
	return o.AllowUploadMimeTypes
}

func (o *GetUserAssetServiceStatusResponseBody) GetMaxUploadFileSize() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxUploadFileSize
}

type GetUserAssetServiceStatusResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An object containing the service status and metadata.
	Object *GetUserAssetServiceStatusResponseBody
}

func (o *GetUserAssetServiceStatusResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetUserAssetServiceStatusResponse) GetObject() *GetUserAssetServiceStatusResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
