// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListOrganizationUsersRequest struct {
	// The unique identifier of the organization.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The query to filter users. It will match multiple fields of users, including ID, name, username, email, and phone number.
	//
	// If not provided, all users will be returned.
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListOrganizationUsersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationUsersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationUsersRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationUsersRequest) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *ListOrganizationUsersRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListOrganizationUsersRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

// ListOrganizationUsersCustomData - arbitrary
type ListOrganizationUsersCustomData struct {
}

// ListOrganizationUsersDetails - arbitrary
type ListOrganizationUsersDetails struct {
}

type ListOrganizationUsersIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details *ListOrganizationUsersDetails `json:"details,omitempty"`
}

func (o *ListOrganizationUsersIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListOrganizationUsersIdentities) GetDetails() *ListOrganizationUsersDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type ListOrganizationUsersAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *ListOrganizationUsersAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *ListOrganizationUsersAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *ListOrganizationUsersAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *ListOrganizationUsersAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *ListOrganizationUsersAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ListOrganizationUsersAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type ListOrganizationUsersProfile struct {
	FamilyName        *string                       `json:"familyName,omitempty"`
	GivenName         *string                       `json:"givenName,omitempty"`
	MiddleName        *string                       `json:"middleName,omitempty"`
	Nickname          *string                       `json:"nickname,omitempty"`
	PreferredUsername *string                       `json:"preferredUsername,omitempty"`
	Profile           *string                       `json:"profile,omitempty"`
	Website           *string                       `json:"website,omitempty"`
	Gender            *string                       `json:"gender,omitempty"`
	Birthdate         *string                       `json:"birthdate,omitempty"`
	Zoneinfo          *string                       `json:"zoneinfo,omitempty"`
	Locale            *string                       `json:"locale,omitempty"`
	Address           *ListOrganizationUsersAddress `json:"address,omitempty"`
}

func (o *ListOrganizationUsersProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *ListOrganizationUsersProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *ListOrganizationUsersProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *ListOrganizationUsersProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *ListOrganizationUsersProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *ListOrganizationUsersProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *ListOrganizationUsersProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ListOrganizationUsersProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *ListOrganizationUsersProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *ListOrganizationUsersProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *ListOrganizationUsersProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *ListOrganizationUsersProfile) GetAddress() *ListOrganizationUsersAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

type ListOrganizationUsersOrganizationRole struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *ListOrganizationUsersOrganizationRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationUsersOrganizationRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type ListOrganizationUsersResponseBody struct {
	ID           string  `json:"id"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	// arbitrary
	CustomData        ListOrganizationUsersCustomData            `json:"customData"`
	Identities        map[string]ListOrganizationUsersIdentities `json:"identities"`
	LastSignInAt      *float64                                   `json:"lastSignInAt"`
	CreatedAt         float64                                    `json:"createdAt"`
	UpdatedAt         float64                                    `json:"updatedAt"`
	Profile           ListOrganizationUsersProfile               `json:"profile"`
	ApplicationID     *string                                    `json:"applicationId"`
	IsSuspended       bool                                       `json:"isSuspended"`
	OrganizationRoles []ListOrganizationUsersOrganizationRole    `json:"organizationRoles"`
}

func (o *ListOrganizationUsersResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationUsersResponseBody) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ListOrganizationUsersResponseBody) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *ListOrganizationUsersResponseBody) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *ListOrganizationUsersResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListOrganizationUsersResponseBody) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *ListOrganizationUsersResponseBody) GetCustomData() ListOrganizationUsersCustomData {
	if o == nil {
		return ListOrganizationUsersCustomData{}
	}
	return o.CustomData
}

func (o *ListOrganizationUsersResponseBody) GetIdentities() map[string]ListOrganizationUsersIdentities {
	if o == nil {
		return map[string]ListOrganizationUsersIdentities{}
	}
	return o.Identities
}

func (o *ListOrganizationUsersResponseBody) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *ListOrganizationUsersResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListOrganizationUsersResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *ListOrganizationUsersResponseBody) GetProfile() ListOrganizationUsersProfile {
	if o == nil {
		return ListOrganizationUsersProfile{}
	}
	return o.Profile
}

func (o *ListOrganizationUsersResponseBody) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ListOrganizationUsersResponseBody) GetIsSuspended() bool {
	if o == nil {
		return false
	}
	return o.IsSuspended
}

func (o *ListOrganizationUsersResponseBody) GetOrganizationRoles() []ListOrganizationUsersOrganizationRole {
	if o == nil {
		return []ListOrganizationUsersOrganizationRole{}
	}
	return o.OrganizationRoles
}

type ListOrganizationUsersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of users that are members of the organization.
	ResponseBodies []ListOrganizationUsersResponseBody
}

func (o *ListOrganizationUsersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationUsersResponse) GetResponseBodies() []ListOrganizationUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
