// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListApplicationOrganizationsRequest struct {
	// The unique identifier of the application.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListApplicationOrganizationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListApplicationOrganizationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListApplicationOrganizationsRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListApplicationOrganizationsRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListApplicationOrganizationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

// ListApplicationOrganizationsCustomData - arbitrary
type ListApplicationOrganizationsCustomData struct {
}

type ListApplicationOrganizationsBranding struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *ListApplicationOrganizationsBranding) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *ListApplicationOrganizationsBranding) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *ListApplicationOrganizationsBranding) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *ListApplicationOrganizationsBranding) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

type ListApplicationOrganizationsOrganizationRole struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *ListApplicationOrganizationsOrganizationRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListApplicationOrganizationsOrganizationRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type ListApplicationOrganizationsResponseBody struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// arbitrary
	CustomData        ListApplicationOrganizationsCustomData         `json:"customData"`
	IsMfaRequired     bool                                           `json:"isMfaRequired"`
	Branding          ListApplicationOrganizationsBranding           `json:"branding"`
	CreatedAt         float64                                        `json:"createdAt"`
	OrganizationRoles []ListApplicationOrganizationsOrganizationRole `json:"organizationRoles"`
}

func (o *ListApplicationOrganizationsResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListApplicationOrganizationsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListApplicationOrganizationsResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListApplicationOrganizationsResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListApplicationOrganizationsResponseBody) GetCustomData() ListApplicationOrganizationsCustomData {
	if o == nil {
		return ListApplicationOrganizationsCustomData{}
	}
	return o.CustomData
}

func (o *ListApplicationOrganizationsResponseBody) GetIsMfaRequired() bool {
	if o == nil {
		return false
	}
	return o.IsMfaRequired
}

func (o *ListApplicationOrganizationsResponseBody) GetBranding() ListApplicationOrganizationsBranding {
	if o == nil {
		return ListApplicationOrganizationsBranding{}
	}
	return o.Branding
}

func (o *ListApplicationOrganizationsResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListApplicationOrganizationsResponseBody) GetOrganizationRoles() []ListApplicationOrganizationsOrganizationRole {
	if o == nil {
		return []ListApplicationOrganizationsOrganizationRole{}
	}
	return o.OrganizationRoles
}

type ListApplicationOrganizationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of organizations that the application is associated with.
	ResponseBodies []ListApplicationOrganizationsResponseBody
}

func (o *ListApplicationOrganizationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListApplicationOrganizationsResponse) GetResponseBodies() []ListApplicationOrganizationsResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
