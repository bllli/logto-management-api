// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type ListOrganizationInvitationsRequest struct {
	OrganizationID *string `queryParam:"style=form,explode=true,name=organizationId"`
	InviterID      *string `queryParam:"style=form,explode=true,name=inviterId"`
	Invitee        *string `queryParam:"style=form,explode=true,name=invitee"`
}

func (o *ListOrganizationInvitationsRequest) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *ListOrganizationInvitationsRequest) GetInviterID() *string {
	if o == nil {
		return nil
	}
	return o.InviterID
}

func (o *ListOrganizationInvitationsRequest) GetInvitee() *string {
	if o == nil {
		return nil
	}
	return o.Invitee
}

type ListOrganizationInvitationsStatus string

const (
	ListOrganizationInvitationsStatusPending  ListOrganizationInvitationsStatus = "Pending"
	ListOrganizationInvitationsStatusAccepted ListOrganizationInvitationsStatus = "Accepted"
	ListOrganizationInvitationsStatusExpired  ListOrganizationInvitationsStatus = "Expired"
	ListOrganizationInvitationsStatusRevoked  ListOrganizationInvitationsStatus = "Revoked"
)

func (e ListOrganizationInvitationsStatus) ToPointer() *ListOrganizationInvitationsStatus {
	return &e
}
func (e *ListOrganizationInvitationsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Accepted":
		fallthrough
	case "Expired":
		fallthrough
	case "Revoked":
		*e = ListOrganizationInvitationsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOrganizationInvitationsStatus: %v", v)
	}
}

type ListOrganizationInvitationsOrganizationRole struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (o *ListOrganizationInvitationsOrganizationRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationInvitationsOrganizationRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type ListOrganizationInvitationsResponseBody struct {
	TenantID          string                                        `json:"tenantId"`
	ID                string                                        `json:"id"`
	InviterID         *string                                       `json:"inviterId"`
	Invitee           string                                        `json:"invitee"`
	AcceptedUserID    *string                                       `json:"acceptedUserId"`
	OrganizationID    string                                        `json:"organizationId"`
	Status            ListOrganizationInvitationsStatus             `json:"status"`
	CreatedAt         float64                                       `json:"createdAt"`
	UpdatedAt         float64                                       `json:"updatedAt"`
	ExpiresAt         float64                                       `json:"expiresAt"`
	OrganizationRoles []ListOrganizationInvitationsOrganizationRole `json:"organizationRoles"`
}

func (o *ListOrganizationInvitationsResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListOrganizationInvitationsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationInvitationsResponseBody) GetInviterID() *string {
	if o == nil {
		return nil
	}
	return o.InviterID
}

func (o *ListOrganizationInvitationsResponseBody) GetInvitee() string {
	if o == nil {
		return ""
	}
	return o.Invitee
}

func (o *ListOrganizationInvitationsResponseBody) GetAcceptedUserID() *string {
	if o == nil {
		return nil
	}
	return o.AcceptedUserID
}

func (o *ListOrganizationInvitationsResponseBody) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *ListOrganizationInvitationsResponseBody) GetStatus() ListOrganizationInvitationsStatus {
	if o == nil {
		return ListOrganizationInvitationsStatus("")
	}
	return o.Status
}

func (o *ListOrganizationInvitationsResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListOrganizationInvitationsResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *ListOrganizationInvitationsResponseBody) GetExpiresAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.ExpiresAt
}

func (o *ListOrganizationInvitationsResponseBody) GetOrganizationRoles() []ListOrganizationInvitationsOrganizationRole {
	if o == nil {
		return []ListOrganizationInvitationsOrganizationRole{}
	}
	return o.OrganizationRoles
}

type ListOrganizationInvitationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of organization invitations, each item also contains the organization roles to be assigned to the user when they accept the invitation.
	ResponseBodies []ListOrganizationInvitationsResponseBody
}

func (o *ListOrganizationInvitationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationInvitationsResponse) GetResponseBodies() []ListOrganizationInvitationsResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
