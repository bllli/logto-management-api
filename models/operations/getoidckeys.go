// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

// GetOidcKeysKeyType - Private keys are used to sign OIDC JWTs. Cookie keys are used to sign OIDC cookies. For clients, they do not need to know private keys to verify OIDC JWTs; they can use public keys from the JWKS endpoint instead.
type GetOidcKeysKeyType string

const (
	GetOidcKeysKeyTypePrivateKeys GetOidcKeysKeyType = "private-keys"
	GetOidcKeysKeyTypeCookieKeys  GetOidcKeysKeyType = "cookie-keys"
)

func (e GetOidcKeysKeyType) ToPointer() *GetOidcKeysKeyType {
	return &e
}
func (e *GetOidcKeysKeyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private-keys":
		fallthrough
	case "cookie-keys":
		*e = GetOidcKeysKeyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOidcKeysKeyType: %v", v)
	}
}

type GetOidcKeysRequest struct {
	// Private keys are used to sign OIDC JWTs. Cookie keys are used to sign OIDC cookies. For clients, they do not need to know private keys to verify OIDC JWTs; they can use public keys from the JWKS endpoint instead.
	KeyType GetOidcKeysKeyType `pathParam:"style=simple,explode=false,name=keyType"`
}

func (o *GetOidcKeysRequest) GetKeyType() GetOidcKeysKeyType {
	if o == nil {
		return GetOidcKeysKeyType("")
	}
	return o.KeyType
}

type GetOidcKeysSigningKeyAlgorithm string

const (
	GetOidcKeysSigningKeyAlgorithmRsa GetOidcKeysSigningKeyAlgorithm = "RSA"
	GetOidcKeysSigningKeyAlgorithmEc  GetOidcKeysSigningKeyAlgorithm = "EC"
)

func (e GetOidcKeysSigningKeyAlgorithm) ToPointer() *GetOidcKeysSigningKeyAlgorithm {
	return &e
}
func (e *GetOidcKeysSigningKeyAlgorithm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RSA":
		fallthrough
	case "EC":
		*e = GetOidcKeysSigningKeyAlgorithm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOidcKeysSigningKeyAlgorithm: %v", v)
	}
}

type GetOidcKeysResponseBody struct {
	ID                  string                          `json:"id"`
	CreatedAt           float64                         `json:"createdAt"`
	SigningKeyAlgorithm *GetOidcKeysSigningKeyAlgorithm `json:"signingKeyAlgorithm,omitempty"`
}

func (o *GetOidcKeysResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOidcKeysResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetOidcKeysResponseBody) GetSigningKeyAlgorithm() *GetOidcKeysSigningKeyAlgorithm {
	if o == nil {
		return nil
	}
	return o.SigningKeyAlgorithm
}

type GetOidcKeysResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of OIDC signing keys for the given key type.
	ResponseBodies []GetOidcKeysResponseBody
}

func (o *GetOidcKeysResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOidcKeysResponse) GetResponseBodies() []GetOidcKeysResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
