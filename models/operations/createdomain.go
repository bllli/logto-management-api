// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type CreateDomainRequest struct {
	// The domain name, e.g. `example.com`.
	Domain string `json:"domain"`
}

func (o *CreateDomainRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

type CreateDomainStatus string

const (
	CreateDomainStatusPendingVerification CreateDomainStatus = "PendingVerification"
	CreateDomainStatusPendingSsl          CreateDomainStatus = "PendingSsl"
	CreateDomainStatusActive              CreateDomainStatus = "Active"
	CreateDomainStatusError               CreateDomainStatus = "Error"
)

func (e CreateDomainStatus) ToPointer() *CreateDomainStatus {
	return &e
}
func (e *CreateDomainStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingVerification":
		fallthrough
	case "PendingSsl":
		fallthrough
	case "Active":
		fallthrough
	case "Error":
		*e = CreateDomainStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDomainStatus: %v", v)
	}
}

type CreateDomainDNSRecord struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

func (o *CreateDomainDNSRecord) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateDomainDNSRecord) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *CreateDomainDNSRecord) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// CreateDomainResponseBody - The domain was created successfully.
type CreateDomainResponseBody struct {
	ID           string                  `json:"id"`
	Domain       string                  `json:"domain"`
	Status       CreateDomainStatus      `json:"status"`
	ErrorMessage *string                 `json:"errorMessage"`
	DNSRecords   []CreateDomainDNSRecord `json:"dnsRecords"`
}

func (o *CreateDomainResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateDomainResponseBody) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *CreateDomainResponseBody) GetStatus() CreateDomainStatus {
	if o == nil {
		return CreateDomainStatus("")
	}
	return o.Status
}

func (o *CreateDomainResponseBody) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *CreateDomainResponseBody) GetDNSRecords() []CreateDomainDNSRecord {
	if o == nil {
		return []CreateDomainDNSRecord{}
	}
	return o.DNSRecords
}

type CreateDomainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The domain was created successfully.
	Object *CreateDomainResponseBody
}

func (o *CreateDomainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateDomainResponse) GetObject() *CreateDomainResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
