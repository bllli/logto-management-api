// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

// CreateOrganizationInvitationMessageRequestBody - The message payload for the "OrganizationInvitation" template to use when sending the invitation via email.
type CreateOrganizationInvitationMessageRequestBody struct {
	Code   *string `json:"code,omitempty"`
	Link   *string `json:"link,omitempty"`
	Locale *string `json:"locale,omitempty"`
}

func (o *CreateOrganizationInvitationMessageRequestBody) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *CreateOrganizationInvitationMessageRequestBody) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *CreateOrganizationInvitationMessageRequestBody) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

type CreateOrganizationInvitationMessageRequest struct {
	// The unique identifier of the organization invitation.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The message payload for the "OrganizationInvitation" template to use when sending the invitation via email.
	RequestBody CreateOrganizationInvitationMessageRequestBody `request:"mediaType=application/json"`
}

func (o *CreateOrganizationInvitationMessageRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateOrganizationInvitationMessageRequest) GetRequestBody() CreateOrganizationInvitationMessageRequestBody {
	if o == nil {
		return CreateOrganizationInvitationMessageRequestBody{}
	}
	return o.RequestBody
}

type CreateOrganizationInvitationMessageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *CreateOrganizationInvitationMessageResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
