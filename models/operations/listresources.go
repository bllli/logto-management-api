// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListResourcesRequest struct {
	// If it's provided with a truthy value (`true`, `1`, `yes`), the scopes of each resource will be included in the response.
	IncludeScopes *string `queryParam:"style=form,explode=true,name=includeScopes"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListResourcesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListResourcesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListResourcesRequest) GetIncludeScopes() *string {
	if o == nil {
		return nil
	}
	return o.IncludeScopes
}

func (o *ListResourcesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListResourcesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListResourcesScope struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	ResourceID  string  `json:"resourceId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	CreatedAt   float64 `json:"createdAt"`
}

func (o *ListResourcesScope) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListResourcesScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListResourcesScope) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *ListResourcesScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListResourcesScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListResourcesScope) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type ListResourcesResponseBody struct {
	TenantID       string               `json:"tenantId"`
	ID             string               `json:"id"`
	Name           string               `json:"name"`
	Indicator      string               `json:"indicator"`
	IsDefault      bool                 `json:"isDefault"`
	AccessTokenTTL float64              `json:"accessTokenTtl"`
	Scopes         []ListResourcesScope `json:"scopes,omitempty"`
}

func (o *ListResourcesResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListResourcesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListResourcesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListResourcesResponseBody) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *ListResourcesResponseBody) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

func (o *ListResourcesResponseBody) GetAccessTokenTTL() float64 {
	if o == nil {
		return 0.0
	}
	return o.AccessTokenTTL
}

func (o *ListResourcesResponseBody) GetScopes() []ListResourcesScope {
	if o == nil {
		return nil
	}
	return o.Scopes
}

type ListResourcesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of resources.
	ResponseBodies []ListResourcesResponseBody
}

func (o *ListResourcesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListResourcesResponse) GetResponseBodies() []ListResourcesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
