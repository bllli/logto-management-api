// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListRoleScopesRequest struct {
	// The unique identifier of the role.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
	// Search query parameters.
	SearchParams map[string]string `queryParam:"style=form,explode=true,name=search_params"`
}

func (l ListRoleScopesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListRoleScopesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListRoleScopesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleScopesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListRoleScopesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListRoleScopesRequest) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}

type ListRoleScopesResource struct {
	TenantID       string  `json:"tenantId"`
	ID             string  `json:"id"`
	Name           string  `json:"name"`
	Indicator      string  `json:"indicator"`
	IsDefault      bool    `json:"isDefault"`
	AccessTokenTTL float64 `json:"accessTokenTtl"`
}

func (o *ListRoleScopesResource) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListRoleScopesResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleScopesResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListRoleScopesResource) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *ListRoleScopesResource) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

func (o *ListRoleScopesResource) GetAccessTokenTTL() float64 {
	if o == nil {
		return 0.0
	}
	return o.AccessTokenTTL
}

type ListRoleScopesResponseBody struct {
	TenantID    string                 `json:"tenantId"`
	ID          string                 `json:"id"`
	ResourceID  string                 `json:"resourceId"`
	Name        string                 `json:"name"`
	Description *string                `json:"description"`
	CreatedAt   float64                `json:"createdAt"`
	Resource    ListRoleScopesResource `json:"resource"`
}

func (o *ListRoleScopesResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListRoleScopesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleScopesResponseBody) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *ListRoleScopesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListRoleScopesResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListRoleScopesResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListRoleScopesResponseBody) GetResource() ListRoleScopesResource {
	if o == nil {
		return ListRoleScopesResource{}
	}
	return o.Resource
}

type ListRoleScopesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of API resource scopes linked with the role.
	ResponseBodies []ListRoleScopesResponseBody
}

func (o *ListRoleScopesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListRoleScopesResponse) GetResponseBodies() []ListRoleScopesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
