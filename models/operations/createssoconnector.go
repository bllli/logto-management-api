// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

// CreateSsoConnectorConfigRequest - arbitrary
type CreateSsoConnectorConfigRequest struct {
}

type CreateSsoConnectorBrandingRequest struct {
	DisplayName *string `json:"displayName,omitempty"`
	Logo        *string `json:"logo,omitempty"`
	DarkLogo    *string `json:"darkLogo,omitempty"`
}

func (o *CreateSsoConnectorBrandingRequest) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CreateSsoConnectorBrandingRequest) GetLogo() *string {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *CreateSsoConnectorBrandingRequest) GetDarkLogo() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogo
}

type CreateSsoConnectorRequest struct {
	// arbitrary
	Config        *CreateSsoConnectorConfigRequest   `json:"config,omitempty"`
	Domains       []string                           `json:"domains,omitempty"`
	Branding      *CreateSsoConnectorBrandingRequest `json:"branding,omitempty"`
	SyncProfile   *bool                              `json:"syncProfile,omitempty"`
	ProviderName  string                             `json:"providerName"`
	ConnectorName string                             `json:"connectorName"`
}

func (o *CreateSsoConnectorRequest) GetConfig() *CreateSsoConnectorConfigRequest {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *CreateSsoConnectorRequest) GetDomains() []string {
	if o == nil {
		return nil
	}
	return o.Domains
}

func (o *CreateSsoConnectorRequest) GetBranding() *CreateSsoConnectorBrandingRequest {
	if o == nil {
		return nil
	}
	return o.Branding
}

func (o *CreateSsoConnectorRequest) GetSyncProfile() *bool {
	if o == nil {
		return nil
	}
	return o.SyncProfile
}

func (o *CreateSsoConnectorRequest) GetProviderName() string {
	if o == nil {
		return ""
	}
	return o.ProviderName
}

func (o *CreateSsoConnectorRequest) GetConnectorName() string {
	if o == nil {
		return ""
	}
	return o.ConnectorName
}

// CreateSsoConnectorConfigResponse - arbitrary
type CreateSsoConnectorConfigResponse struct {
}

type CreateSsoConnectorBrandingResponse struct {
	DisplayName *string `json:"displayName,omitempty"`
	Logo        *string `json:"logo,omitempty"`
	DarkLogo    *string `json:"darkLogo,omitempty"`
}

func (o *CreateSsoConnectorBrandingResponse) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CreateSsoConnectorBrandingResponse) GetLogo() *string {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *CreateSsoConnectorBrandingResponse) GetDarkLogo() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogo
}

// CreateSsoConnectorResponseBody - The created SSO connector.
type CreateSsoConnectorResponseBody struct {
	TenantID      string `json:"tenantId"`
	ID            string `json:"id"`
	ProviderName  string `json:"providerName"`
	ConnectorName string `json:"connectorName"`
	// arbitrary
	Config      CreateSsoConnectorConfigResponse   `json:"config"`
	Domains     []string                           `json:"domains"`
	Branding    CreateSsoConnectorBrandingResponse `json:"branding"`
	SyncProfile bool                               `json:"syncProfile"`
	CreatedAt   float64                            `json:"createdAt"`
}

func (o *CreateSsoConnectorResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *CreateSsoConnectorResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateSsoConnectorResponseBody) GetProviderName() string {
	if o == nil {
		return ""
	}
	return o.ProviderName
}

func (o *CreateSsoConnectorResponseBody) GetConnectorName() string {
	if o == nil {
		return ""
	}
	return o.ConnectorName
}

func (o *CreateSsoConnectorResponseBody) GetConfig() CreateSsoConnectorConfigResponse {
	if o == nil {
		return CreateSsoConnectorConfigResponse{}
	}
	return o.Config
}

func (o *CreateSsoConnectorResponseBody) GetDomains() []string {
	if o == nil {
		return []string{}
	}
	return o.Domains
}

func (o *CreateSsoConnectorResponseBody) GetBranding() CreateSsoConnectorBrandingResponse {
	if o == nil {
		return CreateSsoConnectorBrandingResponse{}
	}
	return o.Branding
}

func (o *CreateSsoConnectorResponseBody) GetSyncProfile() bool {
	if o == nil {
		return false
	}
	return o.SyncProfile
}

func (o *CreateSsoConnectorResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type CreateSsoConnectorResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The created SSO connector.
	Object *CreateSsoConnectorResponseBody
}

func (o *CreateSsoConnectorResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSsoConnectorResponse) GetObject() *CreateSsoConnectorResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
