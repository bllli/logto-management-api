// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type GetRoleRequest struct {
	// The unique identifier of the role.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetRoleRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetRoleType string

const (
	GetRoleTypeUser             GetRoleType = "User"
	GetRoleTypeMachineToMachine GetRoleType = "MachineToMachine"
)

func (e GetRoleType) ToPointer() *GetRoleType {
	return &e
}
func (e *GetRoleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "MachineToMachine":
		*e = GetRoleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRoleType: %v", v)
	}
}

// GetRoleResponseBody - Details of the role.
type GetRoleResponseBody struct {
	TenantID    string      `json:"tenantId"`
	ID          string      `json:"id"`
	Name        string      `json:"name"`
	Description string      `json:"description"`
	Type        GetRoleType `json:"type"`
	IsDefault   bool        `json:"isDefault"`
}

func (o *GetRoleResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetRoleResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetRoleResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetRoleResponseBody) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *GetRoleResponseBody) GetType() GetRoleType {
	if o == nil {
		return GetRoleType("")
	}
	return o.Type
}

func (o *GetRoleResponseBody) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

type GetRoleResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Details of the role.
	Object *GetRoleResponseBody
}

func (o *GetRoleResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetRoleResponse) GetObject() *GetRoleResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
