// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type CreateSocialVerificationRequestBody struct {
	// The state parameter to pass to the social connector.
	State string `json:"state"`
	// The URI to redirect the user after the social authorization is completed.
	RedirectURI string `json:"redirectUri"`
}

func (o *CreateSocialVerificationRequestBody) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *CreateSocialVerificationRequestBody) GetRedirectURI() string {
	if o == nil {
		return ""
	}
	return o.RedirectURI
}

type CreateSocialVerificationRequest struct {
	// The unique identifier of the connector.
	ConnectorID string                              `pathParam:"style=simple,explode=false,name=connectorId"`
	RequestBody CreateSocialVerificationRequestBody `request:"mediaType=application/json"`
}

func (o *CreateSocialVerificationRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *CreateSocialVerificationRequest) GetRequestBody() CreateSocialVerificationRequestBody {
	if o == nil {
		return CreateSocialVerificationRequestBody{}
	}
	return o.RequestBody
}

// CreateSocialVerificationResponseBody - The social authorization URI has been successfully generated.
type CreateSocialVerificationResponseBody struct {
	// The social authorization URI.
	AuthorizationURI string `json:"authorizationUri"`
	// The unique verification ID of the newly created SocialVerification record. The `verificationId` is required when verifying the social authorization response.
	VerificationID string `json:"verificationId"`
}

func (o *CreateSocialVerificationResponseBody) GetAuthorizationURI() string {
	if o == nil {
		return ""
	}
	return o.AuthorizationURI
}

func (o *CreateSocialVerificationResponseBody) GetVerificationID() string {
	if o == nil {
		return ""
	}
	return o.VerificationID
}

type CreateSocialVerificationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The social authorization URI has been successfully generated.
	Object *CreateSocialVerificationResponseBody
}

func (o *CreateSocialVerificationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSocialVerificationResponse) GetObject() *CreateSocialVerificationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
