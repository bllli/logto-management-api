// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

type ListDomainsStatus string

const (
	ListDomainsStatusPendingVerification ListDomainsStatus = "PendingVerification"
	ListDomainsStatusPendingSsl          ListDomainsStatus = "PendingSsl"
	ListDomainsStatusActive              ListDomainsStatus = "Active"
	ListDomainsStatusError               ListDomainsStatus = "Error"
)

func (e ListDomainsStatus) ToPointer() *ListDomainsStatus {
	return &e
}
func (e *ListDomainsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingVerification":
		fallthrough
	case "PendingSsl":
		fallthrough
	case "Active":
		fallthrough
	case "Error":
		*e = ListDomainsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDomainsStatus: %v", v)
	}
}

type ListDomainsDNSRecord struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

func (o *ListDomainsDNSRecord) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListDomainsDNSRecord) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *ListDomainsDNSRecord) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type ListDomainsResponseBody struct {
	ID           string                 `json:"id"`
	Domain       string                 `json:"domain"`
	Status       ListDomainsStatus      `json:"status"`
	ErrorMessage *string                `json:"errorMessage"`
	DNSRecords   []ListDomainsDNSRecord `json:"dnsRecords"`
}

func (o *ListDomainsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListDomainsResponseBody) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *ListDomainsResponseBody) GetStatus() ListDomainsStatus {
	if o == nil {
		return ListDomainsStatus("")
	}
	return o.Status
}

func (o *ListDomainsResponseBody) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *ListDomainsResponseBody) GetDNSRecords() []ListDomainsDNSRecord {
	if o == nil {
		return []ListDomainsDNSRecord{}
	}
	return o.DNSRecords
}

type ListDomainsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of domains.
	ResponseBodies []ListDomainsResponseBody
}

func (o *ListDomainsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListDomainsResponse) GetResponseBodies() []ListDomainsResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
