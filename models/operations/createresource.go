// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type CreateResourceRequest struct {
	TenantID *string `json:"tenantId,omitempty"`
	// The name of the resource.
	Name string `json:"name"`
	// The unique resource indicator. Should be a valid URI.
	Indicator string `json:"indicator"`
	// The access token TTL in seconds. It affects the `exp` claim of the access token granted for this resource.
	AccessTokenTTL *float64 `default:"3600" json:"accessTokenTtl"`
}

func (c CreateResourceRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateResourceRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateResourceRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *CreateResourceRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateResourceRequest) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *CreateResourceRequest) GetAccessTokenTTL() *float64 {
	if o == nil {
		return nil
	}
	return o.AccessTokenTTL
}

type CreateResourceScope struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	ResourceID  string  `json:"resourceId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	CreatedAt   float64 `json:"createdAt"`
}

func (o *CreateResourceScope) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *CreateResourceScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateResourceScope) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *CreateResourceScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateResourceScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateResourceScope) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

// CreateResourceResponseBody - The created resource.
type CreateResourceResponseBody struct {
	TenantID       string                `json:"tenantId"`
	ID             string                `json:"id"`
	Name           string                `json:"name"`
	Indicator      string                `json:"indicator"`
	IsDefault      bool                  `json:"isDefault"`
	AccessTokenTTL float64               `json:"accessTokenTtl"`
	Scopes         []CreateResourceScope `json:"scopes,omitempty"`
}

func (o *CreateResourceResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *CreateResourceResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateResourceResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateResourceResponseBody) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *CreateResourceResponseBody) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

func (o *CreateResourceResponseBody) GetAccessTokenTTL() float64 {
	if o == nil {
		return 0.0
	}
	return o.AccessTokenTTL
}

func (o *CreateResourceResponseBody) GetScopes() []CreateResourceScope {
	if o == nil {
		return nil
	}
	return o.Scopes
}

type CreateResourceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The created resource.
	Object *CreateResourceResponseBody
}

func (o *CreateResourceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateResourceResponse) GetObject() *CreateResourceResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
