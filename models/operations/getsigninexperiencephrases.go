// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type GetSignInExperiencePhrasesRequest struct {
	// The language tag for localization.
	Lng *string `queryParam:"style=form,explode=true,name=lng"`
}

func (o *GetSignInExperiencePhrasesRequest) GetLng() *string {
	if o == nil {
		return nil
	}
	return o.Lng
}

type GetSignInExperiencePhrasesResponseBodyType string

const (
	GetSignInExperiencePhrasesResponseBodyTypeStr      GetSignInExperiencePhrasesResponseBodyType = "str"
	GetSignInExperiencePhrasesResponseBodyTypeMapOfAny GetSignInExperiencePhrasesResponseBodyType = "mapOfAny"
)

type GetSignInExperiencePhrasesResponseBody struct {
	Str      *string        `queryParam:"inline"`
	MapOfAny map[string]any `queryParam:"inline"`

	Type GetSignInExperiencePhrasesResponseBodyType
}

func CreateGetSignInExperiencePhrasesResponseBodyStr(str string) GetSignInExperiencePhrasesResponseBody {
	typ := GetSignInExperiencePhrasesResponseBodyTypeStr

	return GetSignInExperiencePhrasesResponseBody{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetSignInExperiencePhrasesResponseBodyMapOfAny(mapOfAny map[string]any) GetSignInExperiencePhrasesResponseBody {
	typ := GetSignInExperiencePhrasesResponseBodyTypeMapOfAny

	return GetSignInExperiencePhrasesResponseBody{
		MapOfAny: mapOfAny,
		Type:     typ,
	}
}

func (u *GetSignInExperiencePhrasesResponseBody) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = GetSignInExperiencePhrasesResponseBodyTypeStr
		return nil
	}

	var mapOfAny map[string]any = map[string]any{}
	if err := utils.UnmarshalJSON(data, &mapOfAny, "", true, true); err == nil {
		u.MapOfAny = mapOfAny
		u.Type = GetSignInExperiencePhrasesResponseBodyTypeMapOfAny
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetSignInExperiencePhrasesResponseBody", string(data))
}

func (u GetSignInExperiencePhrasesResponseBody) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.MapOfAny != nil {
		return utils.MarshalJSON(u.MapOfAny, "", true)
	}

	return nil, errors.New("could not marshal union type GetSignInExperiencePhrasesResponseBody: all fields are null")
}

type GetSignInExperiencePhrasesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Localized phrases for the specified language.
	Object map[string]GetSignInExperiencePhrasesResponseBody
}

func (o *GetSignInExperiencePhrasesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSignInExperiencePhrasesResponse) GetObject() map[string]GetSignInExperiencePhrasesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
