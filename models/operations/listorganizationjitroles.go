// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListOrganizationJitRolesRequest struct {
	// The unique identifier of the organization.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListOrganizationJitRolesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationJitRolesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationJitRolesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationJitRolesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListOrganizationJitRolesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type ListOrganizationJitRolesType string

const (
	ListOrganizationJitRolesTypeUser             ListOrganizationJitRolesType = "User"
	ListOrganizationJitRolesTypeMachineToMachine ListOrganizationJitRolesType = "MachineToMachine"
)

func (e ListOrganizationJitRolesType) ToPointer() *ListOrganizationJitRolesType {
	return &e
}
func (e *ListOrganizationJitRolesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "MachineToMachine":
		*e = ListOrganizationJitRolesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOrganizationJitRolesType: %v", v)
	}
}

type ListOrganizationJitRolesResponseBody struct {
	TenantID    string                       `json:"tenantId"`
	ID          string                       `json:"id"`
	Name        string                       `json:"name"`
	Description *string                      `json:"description"`
	Type        ListOrganizationJitRolesType `json:"type"`
}

func (o *ListOrganizationJitRolesResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListOrganizationJitRolesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationJitRolesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListOrganizationJitRolesResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListOrganizationJitRolesResponseBody) GetType() ListOrganizationJitRolesType {
	if o == nil {
		return ListOrganizationJitRolesType("")
	}
	return o.Type
}

type ListOrganizationJitRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of organization roles.
	ResponseBodies []ListOrganizationJitRolesResponseBody
}

func (o *ListOrganizationJitRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationJitRolesResponse) GetResponseBodies() []ListOrganizationJitRolesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
