// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListUserRolesRequest struct {
	// The unique identifier of the user.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
	// Search query parameters.
	SearchParams map[string]string `queryParam:"style=form,explode=true,name=search_params"`
}

func (l ListUserRolesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListUserRolesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListUserRolesRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListUserRolesRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListUserRolesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListUserRolesRequest) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}

type ListUserRolesType string

const (
	ListUserRolesTypeUser             ListUserRolesType = "User"
	ListUserRolesTypeMachineToMachine ListUserRolesType = "MachineToMachine"
)

func (e ListUserRolesType) ToPointer() *ListUserRolesType {
	return &e
}
func (e *ListUserRolesType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "MachineToMachine":
		*e = ListUserRolesType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUserRolesType: %v", v)
	}
}

type ListUserRolesResponseBody struct {
	TenantID    string            `json:"tenantId"`
	ID          string            `json:"id"`
	Name        string            `json:"name"`
	Description string            `json:"description"`
	Type        ListUserRolesType `json:"type"`
	IsDefault   bool              `json:"isDefault"`
}

func (o *ListUserRolesResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListUserRolesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListUserRolesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListUserRolesResponseBody) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *ListUserRolesResponseBody) GetType() ListUserRolesType {
	if o == nil {
		return ListUserRolesType("")
	}
	return o.Type
}

func (o *ListUserRolesResponseBody) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

type ListUserRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of API resource roles assigned to the user.
	ResponseBodies []ListUserRolesResponseBody
}

func (o *ListUserRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListUserRolesResponse) GetResponseBodies() []ListUserRolesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
