// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type PutAPIInteractionMfaRequestBody3 struct {
	Type string `json:"type"`
	Code string `json:"code"`
}

func (o *PutAPIInteractionMfaRequestBody3) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PutAPIInteractionMfaRequestBody3) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

type PutAPIInteractionMfaAuthenticatorAttachment string

const (
	PutAPIInteractionMfaAuthenticatorAttachmentCrossPlatform PutAPIInteractionMfaAuthenticatorAttachment = "cross-platform"
	PutAPIInteractionMfaAuthenticatorAttachmentPlatform      PutAPIInteractionMfaAuthenticatorAttachment = "platform"
)

func (e PutAPIInteractionMfaAuthenticatorAttachment) ToPointer() *PutAPIInteractionMfaAuthenticatorAttachment {
	return &e
}
func (e *PutAPIInteractionMfaAuthenticatorAttachment) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cross-platform":
		fallthrough
	case "platform":
		*e = PutAPIInteractionMfaAuthenticatorAttachment(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAPIInteractionMfaAuthenticatorAttachment: %v", v)
	}
}

type PutAPIInteractionMfaCrepProps struct {
	Rk *bool `json:"rk,omitempty"`
}

func (o *PutAPIInteractionMfaCrepProps) GetRk() *bool {
	if o == nil {
		return nil
	}
	return o.Rk
}

type PutAPIInteractionMfaClientExtensionResults struct {
	Appid            *bool                          `json:"appid,omitempty"`
	CrepProps        *PutAPIInteractionMfaCrepProps `json:"crepProps,omitempty"`
	HmacCreateSecret *bool                          `json:"hmacCreateSecret,omitempty"`
}

func (o *PutAPIInteractionMfaClientExtensionResults) GetAppid() *bool {
	if o == nil {
		return nil
	}
	return o.Appid
}

func (o *PutAPIInteractionMfaClientExtensionResults) GetCrepProps() *PutAPIInteractionMfaCrepProps {
	if o == nil {
		return nil
	}
	return o.CrepProps
}

func (o *PutAPIInteractionMfaClientExtensionResults) GetHmacCreateSecret() *bool {
	if o == nil {
		return nil
	}
	return o.HmacCreateSecret
}

type InteractionPutAPIInteractionMfaResponse struct {
	ClientDataJSON    string  `json:"clientDataJSON"`
	AuthenticatorData string  `json:"authenticatorData"`
	Signature         string  `json:"signature"`
	UserHandle        *string `json:"userHandle,omitempty"`
}

func (o *InteractionPutAPIInteractionMfaResponse) GetClientDataJSON() string {
	if o == nil {
		return ""
	}
	return o.ClientDataJSON
}

func (o *InteractionPutAPIInteractionMfaResponse) GetAuthenticatorData() string {
	if o == nil {
		return ""
	}
	return o.AuthenticatorData
}

func (o *InteractionPutAPIInteractionMfaResponse) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *InteractionPutAPIInteractionMfaResponse) GetUserHandle() *string {
	if o == nil {
		return nil
	}
	return o.UserHandle
}

type PutAPIInteractionMfaRequestBody2 struct {
	Type                    string                                       `json:"type"`
	ID                      string                                       `json:"id"`
	RawID                   string                                       `json:"rawId"`
	AuthenticatorAttachment *PutAPIInteractionMfaAuthenticatorAttachment `json:"authenticatorAttachment,omitempty"`
	ClientExtensionResults  PutAPIInteractionMfaClientExtensionResults   `json:"clientExtensionResults"`
	Response                InteractionPutAPIInteractionMfaResponse      `json:"response"`
}

func (o *PutAPIInteractionMfaRequestBody2) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PutAPIInteractionMfaRequestBody2) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PutAPIInteractionMfaRequestBody2) GetRawID() string {
	if o == nil {
		return ""
	}
	return o.RawID
}

func (o *PutAPIInteractionMfaRequestBody2) GetAuthenticatorAttachment() *PutAPIInteractionMfaAuthenticatorAttachment {
	if o == nil {
		return nil
	}
	return o.AuthenticatorAttachment
}

func (o *PutAPIInteractionMfaRequestBody2) GetClientExtensionResults() PutAPIInteractionMfaClientExtensionResults {
	if o == nil {
		return PutAPIInteractionMfaClientExtensionResults{}
	}
	return o.ClientExtensionResults
}

func (o *PutAPIInteractionMfaRequestBody2) GetResponse() InteractionPutAPIInteractionMfaResponse {
	if o == nil {
		return InteractionPutAPIInteractionMfaResponse{}
	}
	return o.Response
}

type PutAPIInteractionMfaRequestBody1 struct {
	Type string `json:"type"`
	Code string `json:"code"`
}

func (o *PutAPIInteractionMfaRequestBody1) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *PutAPIInteractionMfaRequestBody1) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

type PutAPIInteractionMfaRequestType string

const (
	PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody1 PutAPIInteractionMfaRequestType = "put_api_interaction_mfa_RequestBody_1"
	PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody2 PutAPIInteractionMfaRequestType = "put_api_interaction_mfa_RequestBody_2"
	PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody3 PutAPIInteractionMfaRequestType = "put_api_interaction_mfa_RequestBody_3"
)

type PutAPIInteractionMfaRequest struct {
	PutAPIInteractionMfaRequestBody1 *PutAPIInteractionMfaRequestBody1 `queryParam:"inline"`
	PutAPIInteractionMfaRequestBody2 *PutAPIInteractionMfaRequestBody2 `queryParam:"inline"`
	PutAPIInteractionMfaRequestBody3 *PutAPIInteractionMfaRequestBody3 `queryParam:"inline"`

	Type PutAPIInteractionMfaRequestType
}

func CreatePutAPIInteractionMfaRequestPutAPIInteractionMfaRequestBody1(putAPIInteractionMfaRequestBody1 PutAPIInteractionMfaRequestBody1) PutAPIInteractionMfaRequest {
	typ := PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody1

	return PutAPIInteractionMfaRequest{
		PutAPIInteractionMfaRequestBody1: &putAPIInteractionMfaRequestBody1,
		Type:                             typ,
	}
}

func CreatePutAPIInteractionMfaRequestPutAPIInteractionMfaRequestBody2(putAPIInteractionMfaRequestBody2 PutAPIInteractionMfaRequestBody2) PutAPIInteractionMfaRequest {
	typ := PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody2

	return PutAPIInteractionMfaRequest{
		PutAPIInteractionMfaRequestBody2: &putAPIInteractionMfaRequestBody2,
		Type:                             typ,
	}
}

func CreatePutAPIInteractionMfaRequestPutAPIInteractionMfaRequestBody3(putAPIInteractionMfaRequestBody3 PutAPIInteractionMfaRequestBody3) PutAPIInteractionMfaRequest {
	typ := PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody3

	return PutAPIInteractionMfaRequest{
		PutAPIInteractionMfaRequestBody3: &putAPIInteractionMfaRequestBody3,
		Type:                             typ,
	}
}

func (u *PutAPIInteractionMfaRequest) UnmarshalJSON(data []byte) error {

	var putAPIInteractionMfaRequestBody1 PutAPIInteractionMfaRequestBody1 = PutAPIInteractionMfaRequestBody1{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionMfaRequestBody1, "", true, true); err == nil {
		u.PutAPIInteractionMfaRequestBody1 = &putAPIInteractionMfaRequestBody1
		u.Type = PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody1
		return nil
	}

	var putAPIInteractionMfaRequestBody3 PutAPIInteractionMfaRequestBody3 = PutAPIInteractionMfaRequestBody3{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionMfaRequestBody3, "", true, true); err == nil {
		u.PutAPIInteractionMfaRequestBody3 = &putAPIInteractionMfaRequestBody3
		u.Type = PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody3
		return nil
	}

	var putAPIInteractionMfaRequestBody2 PutAPIInteractionMfaRequestBody2 = PutAPIInteractionMfaRequestBody2{}
	if err := utils.UnmarshalJSON(data, &putAPIInteractionMfaRequestBody2, "", true, true); err == nil {
		u.PutAPIInteractionMfaRequestBody2 = &putAPIInteractionMfaRequestBody2
		u.Type = PutAPIInteractionMfaRequestTypePutAPIInteractionMfaRequestBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PutAPIInteractionMfaRequest", string(data))
}

func (u PutAPIInteractionMfaRequest) MarshalJSON() ([]byte, error) {
	if u.PutAPIInteractionMfaRequestBody1 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionMfaRequestBody1, "", true)
	}

	if u.PutAPIInteractionMfaRequestBody2 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionMfaRequestBody2, "", true)
	}

	if u.PutAPIInteractionMfaRequestBody3 != nil {
		return utils.MarshalJSON(u.PutAPIInteractionMfaRequestBody3, "", true)
	}

	return nil, errors.New("could not marshal union type PutAPIInteractionMfaRequest: all fields are null")
}

type PutAPIInteractionMfaResponseResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *PutAPIInteractionMfaResponseResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
