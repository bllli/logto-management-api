// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type DeleteApplicationLegacySecretRequest struct {
	// The unique identifier of the application.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *DeleteApplicationLegacySecretRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type DeleteApplicationLegacySecretType string

const (
	DeleteApplicationLegacySecretTypeNative           DeleteApplicationLegacySecretType = "Native"
	DeleteApplicationLegacySecretTypeSpa              DeleteApplicationLegacySecretType = "SPA"
	DeleteApplicationLegacySecretTypeTraditional      DeleteApplicationLegacySecretType = "Traditional"
	DeleteApplicationLegacySecretTypeMachineToMachine DeleteApplicationLegacySecretType = "MachineToMachine"
	DeleteApplicationLegacySecretTypeProtected        DeleteApplicationLegacySecretType = "Protected"
	DeleteApplicationLegacySecretTypeSaml             DeleteApplicationLegacySecretType = "SAML"
)

func (e DeleteApplicationLegacySecretType) ToPointer() *DeleteApplicationLegacySecretType {
	return &e
}
func (e *DeleteApplicationLegacySecretType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Native":
		fallthrough
	case "SPA":
		fallthrough
	case "Traditional":
		fallthrough
	case "MachineToMachine":
		fallthrough
	case "Protected":
		fallthrough
	case "SAML":
		*e = DeleteApplicationLegacySecretType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteApplicationLegacySecretType: %v", v)
	}
}

// DeleteApplicationLegacySecretRedirectUris2 - Validator function
type DeleteApplicationLegacySecretRedirectUris2 struct {
}

// DeleteApplicationLegacySecretRedirectUris1 - Validator function
type DeleteApplicationLegacySecretRedirectUris1 struct {
}

type DeleteApplicationLegacySecretRedirectUrisUnionType string

const (
	DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris1 DeleteApplicationLegacySecretRedirectUrisUnionType = "DeleteApplicationLegacySecret_redirectUris_1"
	DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris2 DeleteApplicationLegacySecretRedirectUrisUnionType = "DeleteApplicationLegacySecret_redirectUris_2"
)

type DeleteApplicationLegacySecretRedirectUrisUnion struct {
	DeleteApplicationLegacySecretRedirectUris1 *DeleteApplicationLegacySecretRedirectUris1 `queryParam:"inline"`
	DeleteApplicationLegacySecretRedirectUris2 *DeleteApplicationLegacySecretRedirectUris2 `queryParam:"inline"`

	Type DeleteApplicationLegacySecretRedirectUrisUnionType
}

func CreateDeleteApplicationLegacySecretRedirectUrisUnionDeleteApplicationLegacySecretRedirectUris1(deleteApplicationLegacySecretRedirectUris1 DeleteApplicationLegacySecretRedirectUris1) DeleteApplicationLegacySecretRedirectUrisUnion {
	typ := DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris1

	return DeleteApplicationLegacySecretRedirectUrisUnion{
		DeleteApplicationLegacySecretRedirectUris1: &deleteApplicationLegacySecretRedirectUris1,
		Type: typ,
	}
}

func CreateDeleteApplicationLegacySecretRedirectUrisUnionDeleteApplicationLegacySecretRedirectUris2(deleteApplicationLegacySecretRedirectUris2 DeleteApplicationLegacySecretRedirectUris2) DeleteApplicationLegacySecretRedirectUrisUnion {
	typ := DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris2

	return DeleteApplicationLegacySecretRedirectUrisUnion{
		DeleteApplicationLegacySecretRedirectUris2: &deleteApplicationLegacySecretRedirectUris2,
		Type: typ,
	}
}

func (u *DeleteApplicationLegacySecretRedirectUrisUnion) UnmarshalJSON(data []byte) error {

	var deleteApplicationLegacySecretRedirectUris1 DeleteApplicationLegacySecretRedirectUris1 = DeleteApplicationLegacySecretRedirectUris1{}
	if err := utils.UnmarshalJSON(data, &deleteApplicationLegacySecretRedirectUris1, "", true, true); err == nil {
		u.DeleteApplicationLegacySecretRedirectUris1 = &deleteApplicationLegacySecretRedirectUris1
		u.Type = DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris1
		return nil
	}

	var deleteApplicationLegacySecretRedirectUris2 DeleteApplicationLegacySecretRedirectUris2 = DeleteApplicationLegacySecretRedirectUris2{}
	if err := utils.UnmarshalJSON(data, &deleteApplicationLegacySecretRedirectUris2, "", true, true); err == nil {
		u.DeleteApplicationLegacySecretRedirectUris2 = &deleteApplicationLegacySecretRedirectUris2
		u.Type = DeleteApplicationLegacySecretRedirectUrisUnionTypeDeleteApplicationLegacySecretRedirectUris2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DeleteApplicationLegacySecretRedirectUrisUnion", string(data))
}

func (u DeleteApplicationLegacySecretRedirectUrisUnion) MarshalJSON() ([]byte, error) {
	if u.DeleteApplicationLegacySecretRedirectUris1 != nil {
		return utils.MarshalJSON(u.DeleteApplicationLegacySecretRedirectUris1, "", true)
	}

	if u.DeleteApplicationLegacySecretRedirectUris2 != nil {
		return utils.MarshalJSON(u.DeleteApplicationLegacySecretRedirectUris2, "", true)
	}

	return nil, errors.New("could not marshal union type DeleteApplicationLegacySecretRedirectUrisUnion: all fields are null")
}

type DeleteApplicationLegacySecretOidcClientMetadata struct {
	RedirectUris                     []DeleteApplicationLegacySecretRedirectUrisUnion `json:"redirectUris"`
	PostLogoutRedirectUris           []string                                         `json:"postLogoutRedirectUris"`
	BackchannelLogoutURI             *string                                          `json:"backchannelLogoutUri,omitempty"`
	BackchannelLogoutSessionRequired *bool                                            `json:"backchannelLogoutSessionRequired,omitempty"`
	LogoURI                          *string                                          `json:"logoUri,omitempty"`
}

func (o *DeleteApplicationLegacySecretOidcClientMetadata) GetRedirectUris() []DeleteApplicationLegacySecretRedirectUrisUnion {
	if o == nil {
		return []DeleteApplicationLegacySecretRedirectUrisUnion{}
	}
	return o.RedirectUris
}

func (o *DeleteApplicationLegacySecretOidcClientMetadata) GetPostLogoutRedirectUris() []string {
	if o == nil {
		return []string{}
	}
	return o.PostLogoutRedirectUris
}

func (o *DeleteApplicationLegacySecretOidcClientMetadata) GetBackchannelLogoutURI() *string {
	if o == nil {
		return nil
	}
	return o.BackchannelLogoutURI
}

func (o *DeleteApplicationLegacySecretOidcClientMetadata) GetBackchannelLogoutSessionRequired() *bool {
	if o == nil {
		return nil
	}
	return o.BackchannelLogoutSessionRequired
}

func (o *DeleteApplicationLegacySecretOidcClientMetadata) GetLogoURI() *string {
	if o == nil {
		return nil
	}
	return o.LogoURI
}

type DeleteApplicationLegacySecretCustomClientMetadata struct {
	CorsAllowedOrigins      []string `json:"corsAllowedOrigins,omitempty"`
	IDTokenTTL              *float64 `json:"idTokenTtl,omitempty"`
	RefreshTokenTTL         *float64 `json:"refreshTokenTtl,omitempty"`
	RefreshTokenTTLInDays   *float64 `json:"refreshTokenTtlInDays,omitempty"`
	TenantID                *string  `json:"tenantId,omitempty"`
	AlwaysIssueRefreshToken *bool    `json:"alwaysIssueRefreshToken,omitempty"`
	RotateRefreshToken      *bool    `json:"rotateRefreshToken,omitempty"`
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetCorsAllowedOrigins() []string {
	if o == nil {
		return nil
	}
	return o.CorsAllowedOrigins
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetIDTokenTTL() *float64 {
	if o == nil {
		return nil
	}
	return o.IDTokenTTL
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetRefreshTokenTTL() *float64 {
	if o == nil {
		return nil
	}
	return o.RefreshTokenTTL
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetRefreshTokenTTLInDays() *float64 {
	if o == nil {
		return nil
	}
	return o.RefreshTokenTTLInDays
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetAlwaysIssueRefreshToken() *bool {
	if o == nil {
		return nil
	}
	return o.AlwaysIssueRefreshToken
}

func (o *DeleteApplicationLegacySecretCustomClientMetadata) GetRotateRefreshToken() *bool {
	if o == nil {
		return nil
	}
	return o.RotateRefreshToken
}

type DeleteApplicationLegacySecretPageRule struct {
	Path string `json:"path"`
}

func (o *DeleteApplicationLegacySecretPageRule) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

type DeleteApplicationLegacySecretStatus string

const (
	DeleteApplicationLegacySecretStatusPendingVerification DeleteApplicationLegacySecretStatus = "PendingVerification"
	DeleteApplicationLegacySecretStatusPendingSsl          DeleteApplicationLegacySecretStatus = "PendingSsl"
	DeleteApplicationLegacySecretStatusActive              DeleteApplicationLegacySecretStatus = "Active"
	DeleteApplicationLegacySecretStatusError               DeleteApplicationLegacySecretStatus = "Error"
)

func (e DeleteApplicationLegacySecretStatus) ToPointer() *DeleteApplicationLegacySecretStatus {
	return &e
}
func (e *DeleteApplicationLegacySecretStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingVerification":
		fallthrough
	case "PendingSsl":
		fallthrough
	case "Active":
		fallthrough
	case "Error":
		*e = DeleteApplicationLegacySecretStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteApplicationLegacySecretStatus: %v", v)
	}
}

type DeleteApplicationLegacySecretDNSRecord struct {
	Name  string `json:"name"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

func (o *DeleteApplicationLegacySecretDNSRecord) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DeleteApplicationLegacySecretDNSRecord) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *DeleteApplicationLegacySecretDNSRecord) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type DeleteApplicationLegacySecretValidationError struct {
	Message string `json:"message"`
}

func (o *DeleteApplicationLegacySecretValidationError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

type DeleteApplicationLegacySecretSsl struct {
	Status           string                                         `json:"status"`
	ValidationErrors []DeleteApplicationLegacySecretValidationError `json:"validation_errors,omitempty"`
}

func (o *DeleteApplicationLegacySecretSsl) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *DeleteApplicationLegacySecretSsl) GetValidationErrors() []DeleteApplicationLegacySecretValidationError {
	if o == nil {
		return nil
	}
	return o.ValidationErrors
}

type DeleteApplicationLegacySecretCloudflareData struct {
	ID                 string                           `json:"id"`
	Status             string                           `json:"status"`
	Ssl                DeleteApplicationLegacySecretSsl `json:"ssl"`
	VerificationErrors []string                         `json:"verification_errors,omitempty"`
}

func (o *DeleteApplicationLegacySecretCloudflareData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteApplicationLegacySecretCloudflareData) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *DeleteApplicationLegacySecretCloudflareData) GetSsl() DeleteApplicationLegacySecretSsl {
	if o == nil {
		return DeleteApplicationLegacySecretSsl{}
	}
	return o.Ssl
}

func (o *DeleteApplicationLegacySecretCloudflareData) GetVerificationErrors() []string {
	if o == nil {
		return nil
	}
	return o.VerificationErrors
}

type DeleteApplicationLegacySecretCustomDomain struct {
	Domain         string                                       `json:"domain"`
	Status         DeleteApplicationLegacySecretStatus          `json:"status"`
	ErrorMessage   *string                                      `json:"errorMessage"`
	DNSRecords     []DeleteApplicationLegacySecretDNSRecord     `json:"dnsRecords"`
	CloudflareData *DeleteApplicationLegacySecretCloudflareData `json:"cloudflareData"`
}

func (o *DeleteApplicationLegacySecretCustomDomain) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *DeleteApplicationLegacySecretCustomDomain) GetStatus() DeleteApplicationLegacySecretStatus {
	if o == nil {
		return DeleteApplicationLegacySecretStatus("")
	}
	return o.Status
}

func (o *DeleteApplicationLegacySecretCustomDomain) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *DeleteApplicationLegacySecretCustomDomain) GetDNSRecords() []DeleteApplicationLegacySecretDNSRecord {
	if o == nil {
		return []DeleteApplicationLegacySecretDNSRecord{}
	}
	return o.DNSRecords
}

func (o *DeleteApplicationLegacySecretCustomDomain) GetCloudflareData() *DeleteApplicationLegacySecretCloudflareData {
	if o == nil {
		return nil
	}
	return o.CloudflareData
}

type DeleteApplicationLegacySecretProtectedAppMetadata struct {
	Host            string                                      `json:"host"`
	Origin          string                                      `json:"origin"`
	SessionDuration float64                                     `json:"sessionDuration"`
	PageRules       []DeleteApplicationLegacySecretPageRule     `json:"pageRules"`
	CustomDomains   []DeleteApplicationLegacySecretCustomDomain `json:"customDomains,omitempty"`
}

func (o *DeleteApplicationLegacySecretProtectedAppMetadata) GetHost() string {
	if o == nil {
		return ""
	}
	return o.Host
}

func (o *DeleteApplicationLegacySecretProtectedAppMetadata) GetOrigin() string {
	if o == nil {
		return ""
	}
	return o.Origin
}

func (o *DeleteApplicationLegacySecretProtectedAppMetadata) GetSessionDuration() float64 {
	if o == nil {
		return 0.0
	}
	return o.SessionDuration
}

func (o *DeleteApplicationLegacySecretProtectedAppMetadata) GetPageRules() []DeleteApplicationLegacySecretPageRule {
	if o == nil {
		return []DeleteApplicationLegacySecretPageRule{}
	}
	return o.PageRules
}

func (o *DeleteApplicationLegacySecretProtectedAppMetadata) GetCustomDomains() []DeleteApplicationLegacySecretCustomDomain {
	if o == nil {
		return nil
	}
	return o.CustomDomains
}

// DeleteApplicationLegacySecretResponseBody - OK
type DeleteApplicationLegacySecretResponseBody struct {
	TenantID             string                                             `json:"tenantId"`
	ID                   string                                             `json:"id"`
	Name                 string                                             `json:"name"`
	Secret               string                                             `json:"secret"`
	Description          *string                                            `json:"description"`
	Type                 DeleteApplicationLegacySecretType                  `json:"type"`
	OidcClientMetadata   DeleteApplicationLegacySecretOidcClientMetadata    `json:"oidcClientMetadata"`
	CustomClientMetadata DeleteApplicationLegacySecretCustomClientMetadata  `json:"customClientMetadata"`
	ProtectedAppMetadata *DeleteApplicationLegacySecretProtectedAppMetadata `json:"protectedAppMetadata"`
	// arbitrary
	CustomData   map[string]any `json:"customData"`
	IsThirdParty bool           `json:"isThirdParty"`
	CreatedAt    float64        `json:"createdAt"`
}

func (o *DeleteApplicationLegacySecretResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *DeleteApplicationLegacySecretResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteApplicationLegacySecretResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DeleteApplicationLegacySecretResponseBody) GetSecret() string {
	if o == nil {
		return ""
	}
	return o.Secret
}

func (o *DeleteApplicationLegacySecretResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DeleteApplicationLegacySecretResponseBody) GetType() DeleteApplicationLegacySecretType {
	if o == nil {
		return DeleteApplicationLegacySecretType("")
	}
	return o.Type
}

func (o *DeleteApplicationLegacySecretResponseBody) GetOidcClientMetadata() DeleteApplicationLegacySecretOidcClientMetadata {
	if o == nil {
		return DeleteApplicationLegacySecretOidcClientMetadata{}
	}
	return o.OidcClientMetadata
}

func (o *DeleteApplicationLegacySecretResponseBody) GetCustomClientMetadata() DeleteApplicationLegacySecretCustomClientMetadata {
	if o == nil {
		return DeleteApplicationLegacySecretCustomClientMetadata{}
	}
	return o.CustomClientMetadata
}

func (o *DeleteApplicationLegacySecretResponseBody) GetProtectedAppMetadata() *DeleteApplicationLegacySecretProtectedAppMetadata {
	if o == nil {
		return nil
	}
	return o.ProtectedAppMetadata
}

func (o *DeleteApplicationLegacySecretResponseBody) GetCustomData() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.CustomData
}

func (o *DeleteApplicationLegacySecretResponseBody) GetIsThirdParty() bool {
	if o == nil {
		return false
	}
	return o.IsThirdParty
}

func (o *DeleteApplicationLegacySecretResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

type DeleteApplicationLegacySecretResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Object *DeleteApplicationLegacySecretResponseBody
}

func (o *DeleteApplicationLegacySecretResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteApplicationLegacySecretResponse) GetObject() *DeleteApplicationLegacySecretResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
