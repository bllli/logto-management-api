// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/bllli/logto-management-api/models/components"
)

// BindMfaVerificationType - The type of MFA.
type BindMfaVerificationType string

const (
	BindMfaVerificationTypeTotp       BindMfaVerificationType = "Totp"
	BindMfaVerificationTypeWebAuthn   BindMfaVerificationType = "WebAuthn"
	BindMfaVerificationTypeBackupCode BindMfaVerificationType = "BackupCode"
)

func (e BindMfaVerificationType) ToPointer() *BindMfaVerificationType {
	return &e
}
func (e *BindMfaVerificationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Totp":
		fallthrough
	case "WebAuthn":
		fallthrough
	case "BackupCode":
		*e = BindMfaVerificationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BindMfaVerificationType: %v", v)
	}
}

type BindMfaVerificationRequest struct {
	// The type of MFA.
	Type BindMfaVerificationType `json:"type"`
	// The ID of the MFA verification record.
	VerificationID string `json:"verificationId"`
}

func (o *BindMfaVerificationRequest) GetType() BindMfaVerificationType {
	if o == nil {
		return BindMfaVerificationType("")
	}
	return o.Type
}

func (o *BindMfaVerificationRequest) GetVerificationID() string {
	if o == nil {
		return ""
	}
	return o.VerificationID
}

type BindMfaVerificationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *BindMfaVerificationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
