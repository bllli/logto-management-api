// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListOrganizationsRequest struct {
	// The query to filter organizations. It can be a partial ID or name.
	//
	// If not provided, all organizations will be returned.
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Whether to show featured users in the organization. Featured users are randomly selected from the organization members.
	//
	// If not provided, `featuredUsers` will not be included in the response.
	ShowFeatured *string `queryParam:"style=form,explode=true,name=showFeatured"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
}

func (l ListOrganizationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationsRequest) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *ListOrganizationsRequest) GetShowFeatured() *string {
	if o == nil {
		return nil
	}
	return o.ShowFeatured
}

func (o *ListOrganizationsRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListOrganizationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

// ListOrganizationsCustomData - arbitrary
type ListOrganizationsCustomData struct {
}

type ListOrganizationsBranding struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *ListOrganizationsBranding) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *ListOrganizationsBranding) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *ListOrganizationsBranding) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *ListOrganizationsBranding) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

type ListOrganizationsFeaturedUser struct {
	ID     string  `json:"id"`
	Avatar *string `json:"avatar"`
	Name   *string `json:"name"`
}

func (o *ListOrganizationsFeaturedUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationsFeaturedUser) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *ListOrganizationsFeaturedUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type ListOrganizationsResponseBody struct {
	TenantID    string  `json:"tenantId"`
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	// arbitrary
	CustomData    ListOrganizationsCustomData     `json:"customData"`
	IsMfaRequired bool                            `json:"isMfaRequired"`
	Branding      ListOrganizationsBranding       `json:"branding"`
	CreatedAt     float64                         `json:"createdAt"`
	UsersCount    *float64                        `json:"usersCount,omitempty"`
	FeaturedUsers []ListOrganizationsFeaturedUser `json:"featuredUsers,omitempty"`
}

func (o *ListOrganizationsResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListOrganizationsResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListOrganizationsResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListOrganizationsResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListOrganizationsResponseBody) GetCustomData() ListOrganizationsCustomData {
	if o == nil {
		return ListOrganizationsCustomData{}
	}
	return o.CustomData
}

func (o *ListOrganizationsResponseBody) GetIsMfaRequired() bool {
	if o == nil {
		return false
	}
	return o.IsMfaRequired
}

func (o *ListOrganizationsResponseBody) GetBranding() ListOrganizationsBranding {
	if o == nil {
		return ListOrganizationsBranding{}
	}
	return o.Branding
}

func (o *ListOrganizationsResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListOrganizationsResponseBody) GetUsersCount() *float64 {
	if o == nil {
		return nil
	}
	return o.UsersCount
}

func (o *ListOrganizationsResponseBody) GetFeaturedUsers() []ListOrganizationsFeaturedUser {
	if o == nil {
		return nil
	}
	return o.FeaturedUsers
}

type ListOrganizationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of organizations.
	ResponseBodies []ListOrganizationsResponseBody
}

func (o *ListOrganizationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationsResponse) GetResponseBodies() []ListOrganizationsResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
