// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

// ListJwtCustomizersContextSample2 - arbitrary
type ListJwtCustomizersContextSample2 struct {
}

type ListJwtCustomizersAud2Type string

const (
	ListJwtCustomizersAud2TypeStr        ListJwtCustomizersAud2Type = "str"
	ListJwtCustomizersAud2TypeArrayOfStr ListJwtCustomizersAud2Type = "arrayOfStr"
)

type ListJwtCustomizersAud2 struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type ListJwtCustomizersAud2Type
}

func CreateListJwtCustomizersAud2Str(str string) ListJwtCustomizersAud2 {
	typ := ListJwtCustomizersAud2TypeStr

	return ListJwtCustomizersAud2{
		Str:  &str,
		Type: typ,
	}
}

func CreateListJwtCustomizersAud2ArrayOfStr(arrayOfStr []string) ListJwtCustomizersAud2 {
	typ := ListJwtCustomizersAud2TypeArrayOfStr

	return ListJwtCustomizersAud2{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *ListJwtCustomizersAud2) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ListJwtCustomizersAud2TypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = ListJwtCustomizersAud2TypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListJwtCustomizersAud2", string(data))
}

func (u ListJwtCustomizersAud2) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type ListJwtCustomizersAud2: all fields are null")
}

type ListJwtCustomizersTokenSample2 struct {
	Jti      *string                 `json:"jti,omitempty"`
	Aud      *ListJwtCustomizersAud2 `json:"aud,omitempty"`
	Scope    *string                 `json:"scope,omitempty"`
	ClientID *string                 `json:"clientId,omitempty"`
	Kind     *string                 `json:"kind,omitempty"`
}

func (o *ListJwtCustomizersTokenSample2) GetJti() *string {
	if o == nil {
		return nil
	}
	return o.Jti
}

func (o *ListJwtCustomizersTokenSample2) GetAud() *ListJwtCustomizersAud2 {
	if o == nil {
		return nil
	}
	return o.Aud
}

func (o *ListJwtCustomizersTokenSample2) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *ListJwtCustomizersTokenSample2) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *ListJwtCustomizersTokenSample2) GetKind() *string {
	if o == nil {
		return nil
	}
	return o.Kind
}

type Value2 struct {
	Script               string            `json:"script"`
	EnvironmentVariables map[string]string `json:"environmentVariables,omitempty"`
	// arbitrary
	ContextSample *ListJwtCustomizersContextSample2 `json:"contextSample,omitempty"`
	TokenSample   *ListJwtCustomizersTokenSample2   `json:"tokenSample,omitempty"`
}

func (o *Value2) GetScript() string {
	if o == nil {
		return ""
	}
	return o.Script
}

func (o *Value2) GetEnvironmentVariables() map[string]string {
	if o == nil {
		return nil
	}
	return o.EnvironmentVariables
}

func (o *Value2) GetContextSample() *ListJwtCustomizersContextSample2 {
	if o == nil {
		return nil
	}
	return o.ContextSample
}

func (o *Value2) GetTokenSample() *ListJwtCustomizersTokenSample2 {
	if o == nil {
		return nil
	}
	return o.TokenSample
}

type ListJwtCustomizersResponseBody2 struct {
	Key   string `json:"key"`
	Value Value2 `json:"value"`
}

func (o *ListJwtCustomizersResponseBody2) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *ListJwtCustomizersResponseBody2) GetValue() Value2 {
	if o == nil {
		return Value2{}
	}
	return o.Value
}

// ListJwtCustomizersCustomData - arbitrary
type ListJwtCustomizersCustomData struct {
}

// ListJwtCustomizersDetails - arbitrary
type ListJwtCustomizersDetails struct {
}

type ListJwtCustomizersIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details *ListJwtCustomizersDetails `json:"details,omitempty"`
}

func (o *ListJwtCustomizersIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListJwtCustomizersIdentities) GetDetails() *ListJwtCustomizersDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type ListJwtCustomizersAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *ListJwtCustomizersAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *ListJwtCustomizersAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *ListJwtCustomizersAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *ListJwtCustomizersAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *ListJwtCustomizersAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ListJwtCustomizersAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type ListJwtCustomizersProfile struct {
	FamilyName        *string                    `json:"familyName,omitempty"`
	GivenName         *string                    `json:"givenName,omitempty"`
	MiddleName        *string                    `json:"middleName,omitempty"`
	Nickname          *string                    `json:"nickname,omitempty"`
	PreferredUsername *string                    `json:"preferredUsername,omitempty"`
	Profile           *string                    `json:"profile,omitempty"`
	Website           *string                    `json:"website,omitempty"`
	Gender            *string                    `json:"gender,omitempty"`
	Birthdate         *string                    `json:"birthdate,omitempty"`
	Zoneinfo          *string                    `json:"zoneinfo,omitempty"`
	Locale            *string                    `json:"locale,omitempty"`
	Address           *ListJwtCustomizersAddress `json:"address,omitempty"`
}

func (o *ListJwtCustomizersProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *ListJwtCustomizersProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *ListJwtCustomizersProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *ListJwtCustomizersProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *ListJwtCustomizersProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *ListJwtCustomizersProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *ListJwtCustomizersProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ListJwtCustomizersProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *ListJwtCustomizersProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *ListJwtCustomizersProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *ListJwtCustomizersProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *ListJwtCustomizersProfile) GetAddress() *ListJwtCustomizersAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

// ListJwtCustomizersDetail - arbitrary
type ListJwtCustomizersDetail struct {
}

type ListJwtCustomizersSsoIdentity struct {
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail ListJwtCustomizersDetail `json:"detail"`
}

func (o *ListJwtCustomizersSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *ListJwtCustomizersSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *ListJwtCustomizersSsoIdentity) GetDetail() ListJwtCustomizersDetail {
	if o == nil {
		return ListJwtCustomizersDetail{}
	}
	return o.Detail
}

type ListJwtCustomizersMfaVerificationFactor string

const (
	ListJwtCustomizersMfaVerificationFactorTotp       ListJwtCustomizersMfaVerificationFactor = "Totp"
	ListJwtCustomizersMfaVerificationFactorWebAuthn   ListJwtCustomizersMfaVerificationFactor = "WebAuthn"
	ListJwtCustomizersMfaVerificationFactorBackupCode ListJwtCustomizersMfaVerificationFactor = "BackupCode"
)

func (e ListJwtCustomizersMfaVerificationFactor) ToPointer() *ListJwtCustomizersMfaVerificationFactor {
	return &e
}
func (e *ListJwtCustomizersMfaVerificationFactor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Totp":
		fallthrough
	case "WebAuthn":
		fallthrough
	case "BackupCode":
		*e = ListJwtCustomizersMfaVerificationFactor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListJwtCustomizersMfaVerificationFactor: %v", v)
	}
}

type ListJwtCustomizersResource struct {
	TenantID       string  `json:"tenantId"`
	ID             string  `json:"id"`
	Name           string  `json:"name"`
	Indicator      string  `json:"indicator"`
	IsDefault      bool    `json:"isDefault"`
	AccessTokenTTL float64 `json:"accessTokenTtl"`
}

func (o *ListJwtCustomizersResource) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListJwtCustomizersResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListJwtCustomizersResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListJwtCustomizersResource) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *ListJwtCustomizersResource) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

func (o *ListJwtCustomizersResource) GetAccessTokenTTL() float64 {
	if o == nil {
		return 0.0
	}
	return o.AccessTokenTTL
}

type ListJwtCustomizersScope struct {
	ID          string                     `json:"id"`
	Name        string                     `json:"name"`
	Description *string                    `json:"description"`
	ResourceID  string                     `json:"resourceId"`
	Resource    ListJwtCustomizersResource `json:"resource"`
}

func (o *ListJwtCustomizersScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListJwtCustomizersScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListJwtCustomizersScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListJwtCustomizersScope) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *ListJwtCustomizersScope) GetResource() ListJwtCustomizersResource {
	if o == nil {
		return ListJwtCustomizersResource{}
	}
	return o.Resource
}

type ListJwtCustomizersRole struct {
	ID          string                    `json:"id"`
	Name        string                    `json:"name"`
	Description string                    `json:"description"`
	Scopes      []ListJwtCustomizersScope `json:"scopes"`
}

func (o *ListJwtCustomizersRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListJwtCustomizersRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListJwtCustomizersRole) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *ListJwtCustomizersRole) GetScopes() []ListJwtCustomizersScope {
	if o == nil {
		return []ListJwtCustomizersScope{}
	}
	return o.Scopes
}

type ListJwtCustomizersOrganization struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

func (o *ListJwtCustomizersOrganization) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListJwtCustomizersOrganization) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListJwtCustomizersOrganization) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type ListJwtCustomizersOrganizationRole struct {
	OrganizationID string `json:"organizationId"`
	RoleID         string `json:"roleId"`
	RoleName       string `json:"roleName"`
}

func (o *ListJwtCustomizersOrganizationRole) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *ListJwtCustomizersOrganizationRole) GetRoleID() string {
	if o == nil {
		return ""
	}
	return o.RoleID
}

func (o *ListJwtCustomizersOrganizationRole) GetRoleName() string {
	if o == nil {
		return ""
	}
	return o.RoleName
}

type ListJwtCustomizersUser struct {
	ID           *string `json:"id,omitempty"`
	Username     *string `json:"username,omitempty"`
	PrimaryEmail *string `json:"primaryEmail,omitempty"`
	PrimaryPhone *string `json:"primaryPhone,omitempty"`
	Name         *string `json:"name,omitempty"`
	Avatar       *string `json:"avatar,omitempty"`
	// arbitrary
	CustomData             *ListJwtCustomizersCustomData             `json:"customData,omitempty"`
	Identities             map[string]ListJwtCustomizersIdentities   `json:"identities,omitempty"`
	LastSignInAt           *float64                                  `json:"lastSignInAt,omitempty"`
	CreatedAt              *float64                                  `json:"createdAt,omitempty"`
	UpdatedAt              *float64                                  `json:"updatedAt,omitempty"`
	Profile                *ListJwtCustomizersProfile                `json:"profile,omitempty"`
	ApplicationID          *string                                   `json:"applicationId,omitempty"`
	IsSuspended            *bool                                     `json:"isSuspended,omitempty"`
	HasPassword            *bool                                     `json:"hasPassword,omitempty"`
	SsoIdentities          []ListJwtCustomizersSsoIdentity           `json:"ssoIdentities,omitempty"`
	MfaVerificationFactors []ListJwtCustomizersMfaVerificationFactor `json:"mfaVerificationFactors,omitempty"`
	Roles                  []ListJwtCustomizersRole                  `json:"roles,omitempty"`
	Organizations          []ListJwtCustomizersOrganization          `json:"organizations,omitempty"`
	OrganizationRoles      []ListJwtCustomizersOrganizationRole      `json:"organizationRoles,omitempty"`
}

func (o *ListJwtCustomizersUser) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ListJwtCustomizersUser) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ListJwtCustomizersUser) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *ListJwtCustomizersUser) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *ListJwtCustomizersUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListJwtCustomizersUser) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *ListJwtCustomizersUser) GetCustomData() *ListJwtCustomizersCustomData {
	if o == nil {
		return nil
	}
	return o.CustomData
}

func (o *ListJwtCustomizersUser) GetIdentities() map[string]ListJwtCustomizersIdentities {
	if o == nil {
		return nil
	}
	return o.Identities
}

func (o *ListJwtCustomizersUser) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *ListJwtCustomizersUser) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ListJwtCustomizersUser) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *ListJwtCustomizersUser) GetProfile() *ListJwtCustomizersProfile {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *ListJwtCustomizersUser) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ListJwtCustomizersUser) GetIsSuspended() *bool {
	if o == nil {
		return nil
	}
	return o.IsSuspended
}

func (o *ListJwtCustomizersUser) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *ListJwtCustomizersUser) GetSsoIdentities() []ListJwtCustomizersSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

func (o *ListJwtCustomizersUser) GetMfaVerificationFactors() []ListJwtCustomizersMfaVerificationFactor {
	if o == nil {
		return nil
	}
	return o.MfaVerificationFactors
}

func (o *ListJwtCustomizersUser) GetRoles() []ListJwtCustomizersRole {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *ListJwtCustomizersUser) GetOrganizations() []ListJwtCustomizersOrganization {
	if o == nil {
		return nil
	}
	return o.Organizations
}

func (o *ListJwtCustomizersUser) GetOrganizationRoles() []ListJwtCustomizersOrganizationRole {
	if o == nil {
		return nil
	}
	return o.OrganizationRoles
}

// ListJwtCustomizersSubjectTokenContext - arbitrary
type ListJwtCustomizersSubjectTokenContext struct {
}

type ListJwtCustomizersGrant struct {
	Type *string `json:"type,omitempty"`
	// arbitrary
	SubjectTokenContext *ListJwtCustomizersSubjectTokenContext `json:"subjectTokenContext,omitempty"`
}

func (o *ListJwtCustomizersGrant) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ListJwtCustomizersGrant) GetSubjectTokenContext() *ListJwtCustomizersSubjectTokenContext {
	if o == nil {
		return nil
	}
	return o.SubjectTokenContext
}

type ListJwtCustomizersContextSample1 struct {
	User  ListJwtCustomizersUser   `json:"user"`
	Grant *ListJwtCustomizersGrant `json:"grant,omitempty"`
}

func (o *ListJwtCustomizersContextSample1) GetUser() ListJwtCustomizersUser {
	if o == nil {
		return ListJwtCustomizersUser{}
	}
	return o.User
}

func (o *ListJwtCustomizersContextSample1) GetGrant() *ListJwtCustomizersGrant {
	if o == nil {
		return nil
	}
	return o.Grant
}

type ListJwtCustomizersAud1Type string

const (
	ListJwtCustomizersAud1TypeStr        ListJwtCustomizersAud1Type = "str"
	ListJwtCustomizersAud1TypeArrayOfStr ListJwtCustomizersAud1Type = "arrayOfStr"
)

type ListJwtCustomizersAud1 struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type ListJwtCustomizersAud1Type
}

func CreateListJwtCustomizersAud1Str(str string) ListJwtCustomizersAud1 {
	typ := ListJwtCustomizersAud1TypeStr

	return ListJwtCustomizersAud1{
		Str:  &str,
		Type: typ,
	}
}

func CreateListJwtCustomizersAud1ArrayOfStr(arrayOfStr []string) ListJwtCustomizersAud1 {
	typ := ListJwtCustomizersAud1TypeArrayOfStr

	return ListJwtCustomizersAud1{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *ListJwtCustomizersAud1) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ListJwtCustomizersAud1TypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = ListJwtCustomizersAud1TypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListJwtCustomizersAud1", string(data))
}

func (u ListJwtCustomizersAud1) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type ListJwtCustomizersAud1: all fields are null")
}

type ListJwtCustomizersTokenSample1 struct {
	Jti                *string                 `json:"jti,omitempty"`
	Aud                *ListJwtCustomizersAud1 `json:"aud,omitempty"`
	Scope              *string                 `json:"scope,omitempty"`
	ClientID           *string                 `json:"clientId,omitempty"`
	AccountID          *string                 `json:"accountId,omitempty"`
	ExpiresWithSession *bool                   `json:"expiresWithSession,omitempty"`
	GrantID            *string                 `json:"grantId,omitempty"`
	Gty                *string                 `json:"gty,omitempty"`
	SessionUID         *string                 `json:"sessionUid,omitempty"`
	Sid                *string                 `json:"sid,omitempty"`
	Kind               *string                 `json:"kind,omitempty"`
}

func (o *ListJwtCustomizersTokenSample1) GetJti() *string {
	if o == nil {
		return nil
	}
	return o.Jti
}

func (o *ListJwtCustomizersTokenSample1) GetAud() *ListJwtCustomizersAud1 {
	if o == nil {
		return nil
	}
	return o.Aud
}

func (o *ListJwtCustomizersTokenSample1) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *ListJwtCustomizersTokenSample1) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *ListJwtCustomizersTokenSample1) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *ListJwtCustomizersTokenSample1) GetExpiresWithSession() *bool {
	if o == nil {
		return nil
	}
	return o.ExpiresWithSession
}

func (o *ListJwtCustomizersTokenSample1) GetGrantID() *string {
	if o == nil {
		return nil
	}
	return o.GrantID
}

func (o *ListJwtCustomizersTokenSample1) GetGty() *string {
	if o == nil {
		return nil
	}
	return o.Gty
}

func (o *ListJwtCustomizersTokenSample1) GetSessionUID() *string {
	if o == nil {
		return nil
	}
	return o.SessionUID
}

func (o *ListJwtCustomizersTokenSample1) GetSid() *string {
	if o == nil {
		return nil
	}
	return o.Sid
}

func (o *ListJwtCustomizersTokenSample1) GetKind() *string {
	if o == nil {
		return nil
	}
	return o.Kind
}

type Value1 struct {
	Script               string                            `json:"script"`
	EnvironmentVariables map[string]string                 `json:"environmentVariables,omitempty"`
	ContextSample        *ListJwtCustomizersContextSample1 `json:"contextSample,omitempty"`
	TokenSample          *ListJwtCustomizersTokenSample1   `json:"tokenSample,omitempty"`
}

func (o *Value1) GetScript() string {
	if o == nil {
		return ""
	}
	return o.Script
}

func (o *Value1) GetEnvironmentVariables() map[string]string {
	if o == nil {
		return nil
	}
	return o.EnvironmentVariables
}

func (o *Value1) GetContextSample() *ListJwtCustomizersContextSample1 {
	if o == nil {
		return nil
	}
	return o.ContextSample
}

func (o *Value1) GetTokenSample() *ListJwtCustomizersTokenSample1 {
	if o == nil {
		return nil
	}
	return o.TokenSample
}

type ListJwtCustomizersResponseBody1 struct {
	Key   string `json:"key"`
	Value Value1 `json:"value"`
}

func (o *ListJwtCustomizersResponseBody1) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *ListJwtCustomizersResponseBody1) GetValue() Value1 {
	if o == nil {
		return Value1{}
	}
	return o.Value
}

type ListJwtCustomizersResponseBodyUnionType string

const (
	ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody1 ListJwtCustomizersResponseBodyUnionType = "ListJwtCustomizers_ResponseBody_1"
	ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody2 ListJwtCustomizersResponseBodyUnionType = "ListJwtCustomizers_ResponseBody_2"
)

type ListJwtCustomizersResponseBodyUnion struct {
	ListJwtCustomizersResponseBody1 *ListJwtCustomizersResponseBody1 `queryParam:"inline"`
	ListJwtCustomizersResponseBody2 *ListJwtCustomizersResponseBody2 `queryParam:"inline"`

	Type ListJwtCustomizersResponseBodyUnionType
}

func CreateListJwtCustomizersResponseBodyUnionListJwtCustomizersResponseBody1(listJwtCustomizersResponseBody1 ListJwtCustomizersResponseBody1) ListJwtCustomizersResponseBodyUnion {
	typ := ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody1

	return ListJwtCustomizersResponseBodyUnion{
		ListJwtCustomizersResponseBody1: &listJwtCustomizersResponseBody1,
		Type:                            typ,
	}
}

func CreateListJwtCustomizersResponseBodyUnionListJwtCustomizersResponseBody2(listJwtCustomizersResponseBody2 ListJwtCustomizersResponseBody2) ListJwtCustomizersResponseBodyUnion {
	typ := ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody2

	return ListJwtCustomizersResponseBodyUnion{
		ListJwtCustomizersResponseBody2: &listJwtCustomizersResponseBody2,
		Type:                            typ,
	}
}

func (u *ListJwtCustomizersResponseBodyUnion) UnmarshalJSON(data []byte) error {

	var listJwtCustomizersResponseBody1 ListJwtCustomizersResponseBody1 = ListJwtCustomizersResponseBody1{}
	if err := utils.UnmarshalJSON(data, &listJwtCustomizersResponseBody1, "", true, true); err == nil {
		u.ListJwtCustomizersResponseBody1 = &listJwtCustomizersResponseBody1
		u.Type = ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody1
		return nil
	}

	var listJwtCustomizersResponseBody2 ListJwtCustomizersResponseBody2 = ListJwtCustomizersResponseBody2{}
	if err := utils.UnmarshalJSON(data, &listJwtCustomizersResponseBody2, "", true, true); err == nil {
		u.ListJwtCustomizersResponseBody2 = &listJwtCustomizersResponseBody2
		u.Type = ListJwtCustomizersResponseBodyUnionTypeListJwtCustomizersResponseBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListJwtCustomizersResponseBodyUnion", string(data))
}

func (u ListJwtCustomizersResponseBodyUnion) MarshalJSON() ([]byte, error) {
	if u.ListJwtCustomizersResponseBody1 != nil {
		return utils.MarshalJSON(u.ListJwtCustomizersResponseBody1, "", true)
	}

	if u.ListJwtCustomizersResponseBody2 != nil {
		return utils.MarshalJSON(u.ListJwtCustomizersResponseBody2, "", true)
	}

	return nil, errors.New("could not marshal union type ListJwtCustomizersResponseBodyUnion: all fields are null")
}

type ListJwtCustomizersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The JWT customizers.
	ResponseBodies []ListJwtCustomizersResponseBodyUnion
}

func (o *ListJwtCustomizersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListJwtCustomizersResponse) GetResponseBodies() []ListJwtCustomizersResponseBodyUnion {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
