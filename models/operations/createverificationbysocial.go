// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type CreateVerificationBySocialRequest struct {
	// A random string generated on the client side to prevent CSRF (Cross-Site Request Forgery) attacks.
	State string `json:"state"`
	// The URI to navigate back to after the user is authenticated by the connected social identity provider and has granted access to the connector.
	RedirectURI string `json:"redirectUri"`
	// The Logto connector ID.
	ConnectorID string `json:"connectorId"`
}

func (o *CreateVerificationBySocialRequest) GetState() string {
	if o == nil {
		return ""
	}
	return o.State
}

func (o *CreateVerificationBySocialRequest) GetRedirectURI() string {
	if o == nil {
		return ""
	}
	return o.RedirectURI
}

func (o *CreateVerificationBySocialRequest) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

// CreateVerificationBySocialResponseBody - Successfully created the social verification record and returned the authorization URI.
type CreateVerificationBySocialResponseBody struct {
	// The ID of the verification record.
	VerificationRecordID string `json:"verificationRecordId"`
	// The authorization URI to navigate to for authentication and authorization in the connected social identity provider.
	AuthorizationURI string `json:"authorizationUri"`
	// The expiration date and time of the verification record.
	ExpiresAt string `json:"expiresAt"`
}

func (o *CreateVerificationBySocialResponseBody) GetVerificationRecordID() string {
	if o == nil {
		return ""
	}
	return o.VerificationRecordID
}

func (o *CreateVerificationBySocialResponseBody) GetAuthorizationURI() string {
	if o == nil {
		return ""
	}
	return o.AuthorizationURI
}

func (o *CreateVerificationBySocialResponseBody) GetExpiresAt() string {
	if o == nil {
		return ""
	}
	return o.ExpiresAt
}

type CreateVerificationBySocialResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully created the social verification record and returned the authorization URI.
	Object *CreateVerificationBySocialResponseBody
}

func (o *CreateVerificationBySocialResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateVerificationBySocialResponse) GetObject() *CreateVerificationBySocialResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
