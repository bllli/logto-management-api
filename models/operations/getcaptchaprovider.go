// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type GetCaptchaProviderConfig2 struct {
	Type      string `json:"type"`
	SiteKey   string `json:"siteKey"`
	SecretKey string `json:"secretKey"`
	ProjectID string `json:"projectId"`
}

func (o *GetCaptchaProviderConfig2) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *GetCaptchaProviderConfig2) GetSiteKey() string {
	if o == nil {
		return ""
	}
	return o.SiteKey
}

func (o *GetCaptchaProviderConfig2) GetSecretKey() string {
	if o == nil {
		return ""
	}
	return o.SecretKey
}

func (o *GetCaptchaProviderConfig2) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

type GetCaptchaProviderConfig1 struct {
	Type      string `json:"type"`
	SiteKey   string `json:"siteKey"`
	SecretKey string `json:"secretKey"`
}

func (o *GetCaptchaProviderConfig1) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *GetCaptchaProviderConfig1) GetSiteKey() string {
	if o == nil {
		return ""
	}
	return o.SiteKey
}

func (o *GetCaptchaProviderConfig1) GetSecretKey() string {
	if o == nil {
		return ""
	}
	return o.SecretKey
}

type GetCaptchaProviderConfigUnionType string

const (
	GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig1 GetCaptchaProviderConfigUnionType = "GetCaptchaProvider_config_1"
	GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig2 GetCaptchaProviderConfigUnionType = "GetCaptchaProvider_config_2"
)

type GetCaptchaProviderConfigUnion struct {
	GetCaptchaProviderConfig1 *GetCaptchaProviderConfig1 `queryParam:"inline"`
	GetCaptchaProviderConfig2 *GetCaptchaProviderConfig2 `queryParam:"inline"`

	Type GetCaptchaProviderConfigUnionType
}

func CreateGetCaptchaProviderConfigUnionGetCaptchaProviderConfig1(getCaptchaProviderConfig1 GetCaptchaProviderConfig1) GetCaptchaProviderConfigUnion {
	typ := GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig1

	return GetCaptchaProviderConfigUnion{
		GetCaptchaProviderConfig1: &getCaptchaProviderConfig1,
		Type:                      typ,
	}
}

func CreateGetCaptchaProviderConfigUnionGetCaptchaProviderConfig2(getCaptchaProviderConfig2 GetCaptchaProviderConfig2) GetCaptchaProviderConfigUnion {
	typ := GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig2

	return GetCaptchaProviderConfigUnion{
		GetCaptchaProviderConfig2: &getCaptchaProviderConfig2,
		Type:                      typ,
	}
}

func (u *GetCaptchaProviderConfigUnion) UnmarshalJSON(data []byte) error {

	var getCaptchaProviderConfig1 GetCaptchaProviderConfig1 = GetCaptchaProviderConfig1{}
	if err := utils.UnmarshalJSON(data, &getCaptchaProviderConfig1, "", true, true); err == nil {
		u.GetCaptchaProviderConfig1 = &getCaptchaProviderConfig1
		u.Type = GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig1
		return nil
	}

	var getCaptchaProviderConfig2 GetCaptchaProviderConfig2 = GetCaptchaProviderConfig2{}
	if err := utils.UnmarshalJSON(data, &getCaptchaProviderConfig2, "", true, true); err == nil {
		u.GetCaptchaProviderConfig2 = &getCaptchaProviderConfig2
		u.Type = GetCaptchaProviderConfigUnionTypeGetCaptchaProviderConfig2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetCaptchaProviderConfigUnion", string(data))
}

func (u GetCaptchaProviderConfigUnion) MarshalJSON() ([]byte, error) {
	if u.GetCaptchaProviderConfig1 != nil {
		return utils.MarshalJSON(u.GetCaptchaProviderConfig1, "", true)
	}

	if u.GetCaptchaProviderConfig2 != nil {
		return utils.MarshalJSON(u.GetCaptchaProviderConfig2, "", true)
	}

	return nil, errors.New("could not marshal union type GetCaptchaProviderConfigUnion: all fields are null")
}

// GetCaptchaProviderResponseBody - Captcha provider.
type GetCaptchaProviderResponseBody struct {
	TenantID  string                        `json:"tenantId"`
	ID        string                        `json:"id"`
	Config    GetCaptchaProviderConfigUnion `json:"config"`
	CreatedAt float64                       `json:"createdAt"`
	UpdatedAt float64                       `json:"updatedAt"`
}

func (o *GetCaptchaProviderResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetCaptchaProviderResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetCaptchaProviderResponseBody) GetConfig() GetCaptchaProviderConfigUnion {
	if o == nil {
		return GetCaptchaProviderConfigUnion{}
	}
	return o.Config
}

func (o *GetCaptchaProviderResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetCaptchaProviderResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

type GetCaptchaProviderResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Captcha provider.
	Object *GetCaptchaProviderResponseBody
}

func (o *GetCaptchaProviderResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCaptchaProviderResponse) GetObject() *GetCaptchaProviderResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
