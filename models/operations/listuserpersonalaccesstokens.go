// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type ListUserPersonalAccessTokensRequest struct {
	// The unique identifier of the user.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

func (o *ListUserPersonalAccessTokensRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

type ListUserPersonalAccessTokensResponseBody struct {
	TenantID  string   `json:"tenantId"`
	UserID    string   `json:"userId"`
	Name      string   `json:"name"`
	Value     string   `json:"value"`
	CreatedAt float64  `json:"createdAt"`
	ExpiresAt *float64 `json:"expiresAt"`
}

func (o *ListUserPersonalAccessTokensResponseBody) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListUserPersonalAccessTokensResponseBody) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListUserPersonalAccessTokensResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListUserPersonalAccessTokensResponseBody) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *ListUserPersonalAccessTokensResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListUserPersonalAccessTokensResponseBody) GetExpiresAt() *float64 {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

type ListUserPersonalAccessTokensResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of personal access tokens.
	ResponseBodies []ListUserPersonalAccessTokensResponseBody
}

func (o *ListUserPersonalAccessTokensResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListUserPersonalAccessTokensResponse) GetResponseBodies() []ListUserPersonalAccessTokensResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
