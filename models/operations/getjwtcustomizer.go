// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

// GetJwtCustomizerTokenTypePath - The token type to get the JWT customizer for.
type GetJwtCustomizerTokenTypePath string

const (
	GetJwtCustomizerTokenTypePathAccessToken       GetJwtCustomizerTokenTypePath = "access-token"
	GetJwtCustomizerTokenTypePathClientCredentials GetJwtCustomizerTokenTypePath = "client-credentials"
)

func (e GetJwtCustomizerTokenTypePath) ToPointer() *GetJwtCustomizerTokenTypePath {
	return &e
}
func (e *GetJwtCustomizerTokenTypePath) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "access-token":
		fallthrough
	case "client-credentials":
		*e = GetJwtCustomizerTokenTypePath(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJwtCustomizerTokenTypePath: %v", v)
	}
}

type GetJwtCustomizerRequest struct {
	// The token type to get the JWT customizer for.
	TokenTypePath GetJwtCustomizerTokenTypePath `pathParam:"style=simple,explode=false,name=tokenTypePath"`
}

func (o *GetJwtCustomizerRequest) GetTokenTypePath() GetJwtCustomizerTokenTypePath {
	if o == nil {
		return GetJwtCustomizerTokenTypePath("")
	}
	return o.TokenTypePath
}

type GetJwtCustomizerAud2Type string

const (
	GetJwtCustomizerAud2TypeStr        GetJwtCustomizerAud2Type = "str"
	GetJwtCustomizerAud2TypeArrayOfStr GetJwtCustomizerAud2Type = "arrayOfStr"
)

type GetJwtCustomizerAud2 struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type GetJwtCustomizerAud2Type
}

func CreateGetJwtCustomizerAud2Str(str string) GetJwtCustomizerAud2 {
	typ := GetJwtCustomizerAud2TypeStr

	return GetJwtCustomizerAud2{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetJwtCustomizerAud2ArrayOfStr(arrayOfStr []string) GetJwtCustomizerAud2 {
	typ := GetJwtCustomizerAud2TypeArrayOfStr

	return GetJwtCustomizerAud2{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *GetJwtCustomizerAud2) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = GetJwtCustomizerAud2TypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = GetJwtCustomizerAud2TypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetJwtCustomizerAud2", string(data))
}

func (u GetJwtCustomizerAud2) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type GetJwtCustomizerAud2: all fields are null")
}

type GetJwtCustomizerTokenSample2 struct {
	Jti      *string               `json:"jti,omitempty"`
	Aud      *GetJwtCustomizerAud2 `json:"aud,omitempty"`
	Scope    *string               `json:"scope,omitempty"`
	ClientID *string               `json:"clientId,omitempty"`
	Kind     *string               `json:"kind,omitempty"`
}

func (o *GetJwtCustomizerTokenSample2) GetJti() *string {
	if o == nil {
		return nil
	}
	return o.Jti
}

func (o *GetJwtCustomizerTokenSample2) GetAud() *GetJwtCustomizerAud2 {
	if o == nil {
		return nil
	}
	return o.Aud
}

func (o *GetJwtCustomizerTokenSample2) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *GetJwtCustomizerTokenSample2) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *GetJwtCustomizerTokenSample2) GetKind() *string {
	if o == nil {
		return nil
	}
	return o.Kind
}

type GetJwtCustomizerResponseBody2 struct {
	Script               string            `json:"script"`
	EnvironmentVariables map[string]string `json:"environmentVariables,omitempty"`
	// arbitrary
	ContextSample map[string]any                `json:"contextSample,omitempty"`
	TokenSample   *GetJwtCustomizerTokenSample2 `json:"tokenSample,omitempty"`
}

func (o *GetJwtCustomizerResponseBody2) GetScript() string {
	if o == nil {
		return ""
	}
	return o.Script
}

func (o *GetJwtCustomizerResponseBody2) GetEnvironmentVariables() map[string]string {
	if o == nil {
		return nil
	}
	return o.EnvironmentVariables
}

func (o *GetJwtCustomizerResponseBody2) GetContextSample() map[string]any {
	if o == nil {
		return nil
	}
	return o.ContextSample
}

func (o *GetJwtCustomizerResponseBody2) GetTokenSample() *GetJwtCustomizerTokenSample2 {
	if o == nil {
		return nil
	}
	return o.TokenSample
}

type GetJwtCustomizerIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details map[string]any `json:"details,omitempty"`
}

func (o *GetJwtCustomizerIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GetJwtCustomizerIdentities) GetDetails() map[string]any {
	if o == nil {
		return nil
	}
	return o.Details
}

type GetJwtCustomizerAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *GetJwtCustomizerAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *GetJwtCustomizerAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *GetJwtCustomizerAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *GetJwtCustomizerAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *GetJwtCustomizerAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *GetJwtCustomizerAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type GetJwtCustomizerProfile struct {
	FamilyName        *string                  `json:"familyName,omitempty"`
	GivenName         *string                  `json:"givenName,omitempty"`
	MiddleName        *string                  `json:"middleName,omitempty"`
	Nickname          *string                  `json:"nickname,omitempty"`
	PreferredUsername *string                  `json:"preferredUsername,omitempty"`
	Profile           *string                  `json:"profile,omitempty"`
	Website           *string                  `json:"website,omitempty"`
	Gender            *string                  `json:"gender,omitempty"`
	Birthdate         *string                  `json:"birthdate,omitempty"`
	Zoneinfo          *string                  `json:"zoneinfo,omitempty"`
	Locale            *string                  `json:"locale,omitempty"`
	Address           *GetJwtCustomizerAddress `json:"address,omitempty"`
}

func (o *GetJwtCustomizerProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *GetJwtCustomizerProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *GetJwtCustomizerProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *GetJwtCustomizerProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *GetJwtCustomizerProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *GetJwtCustomizerProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetJwtCustomizerProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *GetJwtCustomizerProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *GetJwtCustomizerProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *GetJwtCustomizerProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *GetJwtCustomizerProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *GetJwtCustomizerProfile) GetAddress() *GetJwtCustomizerAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

type GetJwtCustomizerSsoIdentity struct {
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail map[string]any `json:"detail"`
}

func (o *GetJwtCustomizerSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *GetJwtCustomizerSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *GetJwtCustomizerSsoIdentity) GetDetail() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Detail
}

type GetJwtCustomizerMfaVerificationFactor string

const (
	GetJwtCustomizerMfaVerificationFactorTotp       GetJwtCustomizerMfaVerificationFactor = "Totp"
	GetJwtCustomizerMfaVerificationFactorWebAuthn   GetJwtCustomizerMfaVerificationFactor = "WebAuthn"
	GetJwtCustomizerMfaVerificationFactorBackupCode GetJwtCustomizerMfaVerificationFactor = "BackupCode"
)

func (e GetJwtCustomizerMfaVerificationFactor) ToPointer() *GetJwtCustomizerMfaVerificationFactor {
	return &e
}
func (e *GetJwtCustomizerMfaVerificationFactor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Totp":
		fallthrough
	case "WebAuthn":
		fallthrough
	case "BackupCode":
		*e = GetJwtCustomizerMfaVerificationFactor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJwtCustomizerMfaVerificationFactor: %v", v)
	}
}

type GetJwtCustomizerResource struct {
	TenantID       string  `json:"tenantId"`
	ID             string  `json:"id"`
	Name           string  `json:"name"`
	Indicator      string  `json:"indicator"`
	IsDefault      bool    `json:"isDefault"`
	AccessTokenTTL float64 `json:"accessTokenTtl"`
}

func (o *GetJwtCustomizerResource) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetJwtCustomizerResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJwtCustomizerResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetJwtCustomizerResource) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *GetJwtCustomizerResource) GetIsDefault() bool {
	if o == nil {
		return false
	}
	return o.IsDefault
}

func (o *GetJwtCustomizerResource) GetAccessTokenTTL() float64 {
	if o == nil {
		return 0.0
	}
	return o.AccessTokenTTL
}

type GetJwtCustomizerScope struct {
	ID          string                   `json:"id"`
	Name        string                   `json:"name"`
	Description *string                  `json:"description"`
	ResourceID  string                   `json:"resourceId"`
	Resource    GetJwtCustomizerResource `json:"resource"`
}

func (o *GetJwtCustomizerScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJwtCustomizerScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetJwtCustomizerScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetJwtCustomizerScope) GetResourceID() string {
	if o == nil {
		return ""
	}
	return o.ResourceID
}

func (o *GetJwtCustomizerScope) GetResource() GetJwtCustomizerResource {
	if o == nil {
		return GetJwtCustomizerResource{}
	}
	return o.Resource
}

type GetJwtCustomizerRole struct {
	ID          string                  `json:"id"`
	Name        string                  `json:"name"`
	Description string                  `json:"description"`
	Scopes      []GetJwtCustomizerScope `json:"scopes"`
}

func (o *GetJwtCustomizerRole) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJwtCustomizerRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetJwtCustomizerRole) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *GetJwtCustomizerRole) GetScopes() []GetJwtCustomizerScope {
	if o == nil {
		return []GetJwtCustomizerScope{}
	}
	return o.Scopes
}

type GetJwtCustomizerOrganization struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

func (o *GetJwtCustomizerOrganization) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJwtCustomizerOrganization) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetJwtCustomizerOrganization) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type GetJwtCustomizerOrganizationRole struct {
	OrganizationID string `json:"organizationId"`
	RoleID         string `json:"roleId"`
	RoleName       string `json:"roleName"`
}

func (o *GetJwtCustomizerOrganizationRole) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *GetJwtCustomizerOrganizationRole) GetRoleID() string {
	if o == nil {
		return ""
	}
	return o.RoleID
}

func (o *GetJwtCustomizerOrganizationRole) GetRoleName() string {
	if o == nil {
		return ""
	}
	return o.RoleName
}

type GetJwtCustomizerUser struct {
	ID           *string `json:"id,omitempty"`
	Username     *string `json:"username,omitempty"`
	PrimaryEmail *string `json:"primaryEmail,omitempty"`
	PrimaryPhone *string `json:"primaryPhone,omitempty"`
	Name         *string `json:"name,omitempty"`
	Avatar       *string `json:"avatar,omitempty"`
	// arbitrary
	CustomData             map[string]any                          `json:"customData,omitempty"`
	Identities             map[string]GetJwtCustomizerIdentities   `json:"identities,omitempty"`
	LastSignInAt           *float64                                `json:"lastSignInAt,omitempty"`
	CreatedAt              *float64                                `json:"createdAt,omitempty"`
	UpdatedAt              *float64                                `json:"updatedAt,omitempty"`
	Profile                *GetJwtCustomizerProfile                `json:"profile,omitempty"`
	ApplicationID          *string                                 `json:"applicationId,omitempty"`
	IsSuspended            *bool                                   `json:"isSuspended,omitempty"`
	HasPassword            *bool                                   `json:"hasPassword,omitempty"`
	SsoIdentities          []GetJwtCustomizerSsoIdentity           `json:"ssoIdentities,omitempty"`
	MfaVerificationFactors []GetJwtCustomizerMfaVerificationFactor `json:"mfaVerificationFactors,omitempty"`
	Roles                  []GetJwtCustomizerRole                  `json:"roles,omitempty"`
	Organizations          []GetJwtCustomizerOrganization          `json:"organizations,omitempty"`
	OrganizationRoles      []GetJwtCustomizerOrganizationRole      `json:"organizationRoles,omitempty"`
}

func (o *GetJwtCustomizerUser) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetJwtCustomizerUser) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *GetJwtCustomizerUser) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *GetJwtCustomizerUser) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *GetJwtCustomizerUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetJwtCustomizerUser) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *GetJwtCustomizerUser) GetCustomData() map[string]any {
	if o == nil {
		return nil
	}
	return o.CustomData
}

func (o *GetJwtCustomizerUser) GetIdentities() map[string]GetJwtCustomizerIdentities {
	if o == nil {
		return nil
	}
	return o.Identities
}

func (o *GetJwtCustomizerUser) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *GetJwtCustomizerUser) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetJwtCustomizerUser) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetJwtCustomizerUser) GetProfile() *GetJwtCustomizerProfile {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetJwtCustomizerUser) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *GetJwtCustomizerUser) GetIsSuspended() *bool {
	if o == nil {
		return nil
	}
	return o.IsSuspended
}

func (o *GetJwtCustomizerUser) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *GetJwtCustomizerUser) GetSsoIdentities() []GetJwtCustomizerSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

func (o *GetJwtCustomizerUser) GetMfaVerificationFactors() []GetJwtCustomizerMfaVerificationFactor {
	if o == nil {
		return nil
	}
	return o.MfaVerificationFactors
}

func (o *GetJwtCustomizerUser) GetRoles() []GetJwtCustomizerRole {
	if o == nil {
		return nil
	}
	return o.Roles
}

func (o *GetJwtCustomizerUser) GetOrganizations() []GetJwtCustomizerOrganization {
	if o == nil {
		return nil
	}
	return o.Organizations
}

func (o *GetJwtCustomizerUser) GetOrganizationRoles() []GetJwtCustomizerOrganizationRole {
	if o == nil {
		return nil
	}
	return o.OrganizationRoles
}

type GetJwtCustomizerGrant struct {
	Type *string `json:"type,omitempty"`
	// arbitrary
	SubjectTokenContext map[string]any `json:"subjectTokenContext,omitempty"`
}

func (o *GetJwtCustomizerGrant) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *GetJwtCustomizerGrant) GetSubjectTokenContext() map[string]any {
	if o == nil {
		return nil
	}
	return o.SubjectTokenContext
}

type GetJwtCustomizerContextSample struct {
	User  GetJwtCustomizerUser   `json:"user"`
	Grant *GetJwtCustomizerGrant `json:"grant,omitempty"`
}

func (o *GetJwtCustomizerContextSample) GetUser() GetJwtCustomizerUser {
	if o == nil {
		return GetJwtCustomizerUser{}
	}
	return o.User
}

func (o *GetJwtCustomizerContextSample) GetGrant() *GetJwtCustomizerGrant {
	if o == nil {
		return nil
	}
	return o.Grant
}

type GetJwtCustomizerAud1Type string

const (
	GetJwtCustomizerAud1TypeStr        GetJwtCustomizerAud1Type = "str"
	GetJwtCustomizerAud1TypeArrayOfStr GetJwtCustomizerAud1Type = "arrayOfStr"
)

type GetJwtCustomizerAud1 struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type GetJwtCustomizerAud1Type
}

func CreateGetJwtCustomizerAud1Str(str string) GetJwtCustomizerAud1 {
	typ := GetJwtCustomizerAud1TypeStr

	return GetJwtCustomizerAud1{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetJwtCustomizerAud1ArrayOfStr(arrayOfStr []string) GetJwtCustomizerAud1 {
	typ := GetJwtCustomizerAud1TypeArrayOfStr

	return GetJwtCustomizerAud1{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *GetJwtCustomizerAud1) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = GetJwtCustomizerAud1TypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = GetJwtCustomizerAud1TypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetJwtCustomizerAud1", string(data))
}

func (u GetJwtCustomizerAud1) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type GetJwtCustomizerAud1: all fields are null")
}

type GetJwtCustomizerTokenSample1 struct {
	Jti                *string               `json:"jti,omitempty"`
	Aud                *GetJwtCustomizerAud1 `json:"aud,omitempty"`
	Scope              *string               `json:"scope,omitempty"`
	ClientID           *string               `json:"clientId,omitempty"`
	AccountID          *string               `json:"accountId,omitempty"`
	ExpiresWithSession *bool                 `json:"expiresWithSession,omitempty"`
	GrantID            *string               `json:"grantId,omitempty"`
	Gty                *string               `json:"gty,omitempty"`
	SessionUID         *string               `json:"sessionUid,omitempty"`
	Sid                *string               `json:"sid,omitempty"`
	Kind               *string               `json:"kind,omitempty"`
}

func (o *GetJwtCustomizerTokenSample1) GetJti() *string {
	if o == nil {
		return nil
	}
	return o.Jti
}

func (o *GetJwtCustomizerTokenSample1) GetAud() *GetJwtCustomizerAud1 {
	if o == nil {
		return nil
	}
	return o.Aud
}

func (o *GetJwtCustomizerTokenSample1) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *GetJwtCustomizerTokenSample1) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *GetJwtCustomizerTokenSample1) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *GetJwtCustomizerTokenSample1) GetExpiresWithSession() *bool {
	if o == nil {
		return nil
	}
	return o.ExpiresWithSession
}

func (o *GetJwtCustomizerTokenSample1) GetGrantID() *string {
	if o == nil {
		return nil
	}
	return o.GrantID
}

func (o *GetJwtCustomizerTokenSample1) GetGty() *string {
	if o == nil {
		return nil
	}
	return o.Gty
}

func (o *GetJwtCustomizerTokenSample1) GetSessionUID() *string {
	if o == nil {
		return nil
	}
	return o.SessionUID
}

func (o *GetJwtCustomizerTokenSample1) GetSid() *string {
	if o == nil {
		return nil
	}
	return o.Sid
}

func (o *GetJwtCustomizerTokenSample1) GetKind() *string {
	if o == nil {
		return nil
	}
	return o.Kind
}

type GetJwtCustomizerResponseBody1 struct {
	Script               string                         `json:"script"`
	EnvironmentVariables map[string]string              `json:"environmentVariables,omitempty"`
	ContextSample        *GetJwtCustomizerContextSample `json:"contextSample,omitempty"`
	TokenSample          *GetJwtCustomizerTokenSample1  `json:"tokenSample,omitempty"`
}

func (o *GetJwtCustomizerResponseBody1) GetScript() string {
	if o == nil {
		return ""
	}
	return o.Script
}

func (o *GetJwtCustomizerResponseBody1) GetEnvironmentVariables() map[string]string {
	if o == nil {
		return nil
	}
	return o.EnvironmentVariables
}

func (o *GetJwtCustomizerResponseBody1) GetContextSample() *GetJwtCustomizerContextSample {
	if o == nil {
		return nil
	}
	return o.ContextSample
}

func (o *GetJwtCustomizerResponseBody1) GetTokenSample() *GetJwtCustomizerTokenSample1 {
	if o == nil {
		return nil
	}
	return o.TokenSample
}

type GetJwtCustomizerResponseBodyType string

const (
	GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody1 GetJwtCustomizerResponseBodyType = "GetJwtCustomizer_ResponseBody_1"
	GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody2 GetJwtCustomizerResponseBodyType = "GetJwtCustomizer_ResponseBody_2"
)

// GetJwtCustomizerResponseBody - The JWT customizer.
type GetJwtCustomizerResponseBody struct {
	GetJwtCustomizerResponseBody1 *GetJwtCustomizerResponseBody1 `queryParam:"inline"`
	GetJwtCustomizerResponseBody2 *GetJwtCustomizerResponseBody2 `queryParam:"inline"`

	Type GetJwtCustomizerResponseBodyType
}

func CreateGetJwtCustomizerResponseBodyGetJwtCustomizerResponseBody1(getJwtCustomizerResponseBody1 GetJwtCustomizerResponseBody1) GetJwtCustomizerResponseBody {
	typ := GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody1

	return GetJwtCustomizerResponseBody{
		GetJwtCustomizerResponseBody1: &getJwtCustomizerResponseBody1,
		Type:                          typ,
	}
}

func CreateGetJwtCustomizerResponseBodyGetJwtCustomizerResponseBody2(getJwtCustomizerResponseBody2 GetJwtCustomizerResponseBody2) GetJwtCustomizerResponseBody {
	typ := GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody2

	return GetJwtCustomizerResponseBody{
		GetJwtCustomizerResponseBody2: &getJwtCustomizerResponseBody2,
		Type:                          typ,
	}
}

func (u *GetJwtCustomizerResponseBody) UnmarshalJSON(data []byte) error {

	var getJwtCustomizerResponseBody1 GetJwtCustomizerResponseBody1 = GetJwtCustomizerResponseBody1{}
	if err := utils.UnmarshalJSON(data, &getJwtCustomizerResponseBody1, "", true, true); err == nil {
		u.GetJwtCustomizerResponseBody1 = &getJwtCustomizerResponseBody1
		u.Type = GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody1
		return nil
	}

	var getJwtCustomizerResponseBody2 GetJwtCustomizerResponseBody2 = GetJwtCustomizerResponseBody2{}
	if err := utils.UnmarshalJSON(data, &getJwtCustomizerResponseBody2, "", true, true); err == nil {
		u.GetJwtCustomizerResponseBody2 = &getJwtCustomizerResponseBody2
		u.Type = GetJwtCustomizerResponseBodyTypeGetJwtCustomizerResponseBody2
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetJwtCustomizerResponseBody", string(data))
}

func (u GetJwtCustomizerResponseBody) MarshalJSON() ([]byte, error) {
	if u.GetJwtCustomizerResponseBody1 != nil {
		return utils.MarshalJSON(u.GetJwtCustomizerResponseBody1, "", true)
	}

	if u.GetJwtCustomizerResponseBody2 != nil {
		return utils.MarshalJSON(u.GetJwtCustomizerResponseBody2, "", true)
	}

	return nil, errors.New("could not marshal union type GetJwtCustomizerResponseBody: all fields are null")
}

type GetJwtCustomizerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The JWT customizer.
	OneOf *GetJwtCustomizerResponseBody
}

func (o *GetJwtCustomizerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetJwtCustomizerResponse) GetOneOf() *GetJwtCustomizerResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
