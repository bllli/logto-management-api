// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type GetSamlApplicationCallbackRequest struct {
	// The unique identifier of the saml application.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The authorization code from OIDC callback.
	Code *string `queryParam:"style=form,explode=true,name=code"`
	// The state parameter from OIDC callback.
	State *string `queryParam:"style=form,explode=true,name=state"`
	// The redirect URI for the callback.
	RedirectURI      *string `queryParam:"style=form,explode=true,name=redirectUri"`
	Error            *string `queryParam:"style=form,explode=true,name=error"`
	ErrorDescription *string `queryParam:"style=form,explode=true,name=error_description"`
}

func (o *GetSamlApplicationCallbackRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetSamlApplicationCallbackRequest) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *GetSamlApplicationCallbackRequest) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *GetSamlApplicationCallbackRequest) GetRedirectURI() *string {
	if o == nil {
		return nil
	}
	return o.RedirectURI
}

func (o *GetSamlApplicationCallbackRequest) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *GetSamlApplicationCallbackRequest) GetErrorDescription() *string {
	if o == nil {
		return nil
	}
	return o.ErrorDescription
}

type GetSamlApplicationCallbackResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *GetSamlApplicationCallbackResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
