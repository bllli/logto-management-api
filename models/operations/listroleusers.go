// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/internal/utils"
	"github.com/bllli/logto-management-api/models/components"
)

type ListRoleUsersRequest struct {
	// The unique identifier of the role.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Page number (starts from 1).
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Entries per page.
	PageSize *int64 `default:"20" queryParam:"style=form,explode=true,name=page_size"`
	// Search query parameters.
	SearchParams map[string]string `queryParam:"style=form,explode=true,name=search_params"`
}

func (l ListRoleUsersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListRoleUsersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListRoleUsersRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleUsersRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListRoleUsersRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListRoleUsersRequest) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}

// ListRoleUsersCustomData - arbitrary
type ListRoleUsersCustomData struct {
}

// ListRoleUsersDetails - arbitrary
type ListRoleUsersDetails struct {
}

type ListRoleUsersIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details *ListRoleUsersDetails `json:"details,omitempty"`
}

func (o *ListRoleUsersIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListRoleUsersIdentities) GetDetails() *ListRoleUsersDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type ListRoleUsersAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *ListRoleUsersAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *ListRoleUsersAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *ListRoleUsersAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *ListRoleUsersAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *ListRoleUsersAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ListRoleUsersAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type ListRoleUsersProfile struct {
	FamilyName        *string               `json:"familyName,omitempty"`
	GivenName         *string               `json:"givenName,omitempty"`
	MiddleName        *string               `json:"middleName,omitempty"`
	Nickname          *string               `json:"nickname,omitempty"`
	PreferredUsername *string               `json:"preferredUsername,omitempty"`
	Profile           *string               `json:"profile,omitempty"`
	Website           *string               `json:"website,omitempty"`
	Gender            *string               `json:"gender,omitempty"`
	Birthdate         *string               `json:"birthdate,omitempty"`
	Zoneinfo          *string               `json:"zoneinfo,omitempty"`
	Locale            *string               `json:"locale,omitempty"`
	Address           *ListRoleUsersAddress `json:"address,omitempty"`
}

func (o *ListRoleUsersProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *ListRoleUsersProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *ListRoleUsersProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *ListRoleUsersProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *ListRoleUsersProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *ListRoleUsersProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *ListRoleUsersProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ListRoleUsersProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *ListRoleUsersProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *ListRoleUsersProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *ListRoleUsersProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *ListRoleUsersProfile) GetAddress() *ListRoleUsersAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

// ListRoleUsersDetail - arbitrary
type ListRoleUsersDetail struct {
}

type ListRoleUsersSsoIdentity struct {
	TenantID   string `json:"tenantId"`
	ID         string `json:"id"`
	UserID     string `json:"userId"`
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail         ListRoleUsersDetail `json:"detail"`
	CreatedAt      float64             `json:"createdAt"`
	SsoConnectorID string              `json:"ssoConnectorId"`
}

func (o *ListRoleUsersSsoIdentity) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *ListRoleUsersSsoIdentity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleUsersSsoIdentity) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ListRoleUsersSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *ListRoleUsersSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *ListRoleUsersSsoIdentity) GetDetail() ListRoleUsersDetail {
	if o == nil {
		return ListRoleUsersDetail{}
	}
	return o.Detail
}

func (o *ListRoleUsersSsoIdentity) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListRoleUsersSsoIdentity) GetSsoConnectorID() string {
	if o == nil {
		return ""
	}
	return o.SsoConnectorID
}

type ListRoleUsersResponseBody struct {
	ID           string  `json:"id"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	// arbitrary
	CustomData    ListRoleUsersCustomData            `json:"customData"`
	Identities    map[string]ListRoleUsersIdentities `json:"identities"`
	LastSignInAt  *float64                           `json:"lastSignInAt"`
	CreatedAt     float64                            `json:"createdAt"`
	UpdatedAt     float64                            `json:"updatedAt"`
	Profile       ListRoleUsersProfile               `json:"profile"`
	ApplicationID *string                            `json:"applicationId"`
	IsSuspended   bool                               `json:"isSuspended"`
	HasPassword   *bool                              `json:"hasPassword,omitempty"`
	SsoIdentities []ListRoleUsersSsoIdentity         `json:"ssoIdentities,omitempty"`
}

func (o *ListRoleUsersResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListRoleUsersResponseBody) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ListRoleUsersResponseBody) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *ListRoleUsersResponseBody) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *ListRoleUsersResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListRoleUsersResponseBody) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *ListRoleUsersResponseBody) GetCustomData() ListRoleUsersCustomData {
	if o == nil {
		return ListRoleUsersCustomData{}
	}
	return o.CustomData
}

func (o *ListRoleUsersResponseBody) GetIdentities() map[string]ListRoleUsersIdentities {
	if o == nil {
		return map[string]ListRoleUsersIdentities{}
	}
	return o.Identities
}

func (o *ListRoleUsersResponseBody) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *ListRoleUsersResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *ListRoleUsersResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *ListRoleUsersResponseBody) GetProfile() ListRoleUsersProfile {
	if o == nil {
		return ListRoleUsersProfile{}
	}
	return o.Profile
}

func (o *ListRoleUsersResponseBody) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ListRoleUsersResponseBody) GetIsSuspended() bool {
	if o == nil {
		return false
	}
	return o.IsSuspended
}

func (o *ListRoleUsersResponseBody) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *ListRoleUsersResponseBody) GetSsoIdentities() []ListRoleUsersSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

type ListRoleUsersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An array of users who have the role assigned.
	ResponseBodies []ListRoleUsersResponseBody
}

func (o *ListRoleUsersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListRoleUsersResponse) GetResponseBodies() []ListRoleUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
