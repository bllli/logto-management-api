// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type GetAPIInteractionConsentBranding struct {
	LogoURL     *string `json:"logoUrl,omitempty"`
	DarkLogoURL *string `json:"darkLogoUrl,omitempty"`
	Favicon     *string `json:"favicon,omitempty"`
	DarkFavicon *string `json:"darkFavicon,omitempty"`
}

func (o *GetAPIInteractionConsentBranding) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *GetAPIInteractionConsentBranding) GetDarkLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.DarkLogoURL
}

func (o *GetAPIInteractionConsentBranding) GetFavicon() *string {
	if o == nil {
		return nil
	}
	return o.Favicon
}

func (o *GetAPIInteractionConsentBranding) GetDarkFavicon() *string {
	if o == nil {
		return nil
	}
	return o.DarkFavicon
}

type Application struct {
	ID               string                            `json:"id"`
	Name             string                            `json:"name"`
	Branding         *GetAPIInteractionConsentBranding `json:"branding,omitempty"`
	DisplayName      *string                           `json:"displayName,omitempty"`
	PrivacyPolicyURL *string                           `json:"privacyPolicyUrl,omitempty"`
	TermsOfUseURL    *string                           `json:"termsOfUseUrl,omitempty"`
}

func (o *Application) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Application) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Application) GetBranding() *GetAPIInteractionConsentBranding {
	if o == nil {
		return nil
	}
	return o.Branding
}

func (o *Application) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *Application) GetPrivacyPolicyURL() *string {
	if o == nil {
		return nil
	}
	return o.PrivacyPolicyURL
}

func (o *Application) GetTermsOfUseURL() *string {
	if o == nil {
		return nil
	}
	return o.TermsOfUseURL
}

type GetAPIInteractionConsentUser struct {
	ID           string  `json:"id"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
}

func (o *GetAPIInteractionConsentUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAPIInteractionConsentUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetAPIInteractionConsentUser) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *GetAPIInteractionConsentUser) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *GetAPIInteractionConsentUser) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *GetAPIInteractionConsentUser) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

type OrganizationResource struct {
	Name      string `json:"name"`
	Indicator string `json:"indicator"`
	ID        string `json:"id"`
}

func (o *OrganizationResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *OrganizationResource) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *OrganizationResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetAPIInteractionConsentOrganizationScope struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

func (o *GetAPIInteractionConsentOrganizationScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAPIInteractionConsentOrganizationScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetAPIInteractionConsentOrganizationScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type OrganizationMissingResourceScope struct {
	Resource OrganizationResource                        `json:"resource"`
	Scopes   []GetAPIInteractionConsentOrganizationScope `json:"scopes"`
}

func (o *OrganizationMissingResourceScope) GetResource() OrganizationResource {
	if o == nil {
		return OrganizationResource{}
	}
	return o.Resource
}

func (o *OrganizationMissingResourceScope) GetScopes() []GetAPIInteractionConsentOrganizationScope {
	if o == nil {
		return []GetAPIInteractionConsentOrganizationScope{}
	}
	return o.Scopes
}

type GetAPIInteractionConsentOrganization struct {
	ID                    string                             `json:"id"`
	Name                  string                             `json:"name"`
	MissingResourceScopes []OrganizationMissingResourceScope `json:"missingResourceScopes,omitempty"`
}

func (o *GetAPIInteractionConsentOrganization) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAPIInteractionConsentOrganization) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetAPIInteractionConsentOrganization) GetMissingResourceScopes() []OrganizationMissingResourceScope {
	if o == nil {
		return nil
	}
	return o.MissingResourceScopes
}

type GetAPIInteractionConsentResource struct {
	Name      string `json:"name"`
	Indicator string `json:"indicator"`
	ID        string `json:"id"`
}

func (o *GetAPIInteractionConsentResource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetAPIInteractionConsentResource) GetIndicator() string {
	if o == nil {
		return ""
	}
	return o.Indicator
}

func (o *GetAPIInteractionConsentResource) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetAPIInteractionConsentScope struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

func (o *GetAPIInteractionConsentScope) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAPIInteractionConsentScope) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetAPIInteractionConsentScope) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

type MissingResourceScope struct {
	Resource GetAPIInteractionConsentResource `json:"resource"`
	Scopes   []GetAPIInteractionConsentScope  `json:"scopes"`
}

func (o *MissingResourceScope) GetResource() GetAPIInteractionConsentResource {
	if o == nil {
		return GetAPIInteractionConsentResource{}
	}
	return o.Resource
}

func (o *MissingResourceScope) GetScopes() []GetAPIInteractionConsentScope {
	if o == nil {
		return []GetAPIInteractionConsentScope{}
	}
	return o.Scopes
}

// GetAPIInteractionConsentResponseBody - OK
type GetAPIInteractionConsentResponseBody struct {
	Application           Application                            `json:"application"`
	User                  GetAPIInteractionConsentUser           `json:"user"`
	Organizations         []GetAPIInteractionConsentOrganization `json:"organizations,omitempty"`
	MissingOIDCScope      []string                               `json:"missingOIDCScope,omitempty"`
	MissingResourceScopes []MissingResourceScope                 `json:"missingResourceScopes,omitempty"`
	RedirectURI           string                                 `json:"redirectUri"`
}

func (o *GetAPIInteractionConsentResponseBody) GetApplication() Application {
	if o == nil {
		return Application{}
	}
	return o.Application
}

func (o *GetAPIInteractionConsentResponseBody) GetUser() GetAPIInteractionConsentUser {
	if o == nil {
		return GetAPIInteractionConsentUser{}
	}
	return o.User
}

func (o *GetAPIInteractionConsentResponseBody) GetOrganizations() []GetAPIInteractionConsentOrganization {
	if o == nil {
		return nil
	}
	return o.Organizations
}

func (o *GetAPIInteractionConsentResponseBody) GetMissingOIDCScope() []string {
	if o == nil {
		return nil
	}
	return o.MissingOIDCScope
}

func (o *GetAPIInteractionConsentResponseBody) GetMissingResourceScopes() []MissingResourceScope {
	if o == nil {
		return nil
	}
	return o.MissingResourceScopes
}

func (o *GetAPIInteractionConsentResponseBody) GetRedirectURI() string {
	if o == nil {
		return ""
	}
	return o.RedirectURI
}

type GetAPIInteractionConsentResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	Object *GetAPIInteractionConsentResponseBody
}

func (o *GetAPIInteractionConsentResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAPIInteractionConsentResponse) GetObject() *GetAPIInteractionConsentResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
