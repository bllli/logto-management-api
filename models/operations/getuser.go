// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/bllli/logto-management-api/models/components"
)

type GetUserRequest struct {
	// The unique identifier of the user.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
	// If it's provided with a truthy value (`true`, `1`, `yes`), each user in the response will include a `ssoIdentities` property containing a list of SSO identities associated with the user.
	IncludeSsoIdentities *string `queryParam:"style=form,explode=true,name=includeSsoIdentities"`
}

func (o *GetUserRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GetUserRequest) GetIncludeSsoIdentities() *string {
	if o == nil {
		return nil
	}
	return o.IncludeSsoIdentities
}

// GetUserCustomData - arbitrary
type GetUserCustomData struct {
}

// GetUserDetails - arbitrary
type GetUserDetails struct {
}

type GetUserIdentities struct {
	UserID string `json:"userId"`
	// arbitrary
	Details *GetUserDetails `json:"details,omitempty"`
}

func (o *GetUserIdentities) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GetUserIdentities) GetDetails() *GetUserDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

type GetUserAddress struct {
	Formatted     *string `json:"formatted,omitempty"`
	StreetAddress *string `json:"streetAddress,omitempty"`
	Locality      *string `json:"locality,omitempty"`
	Region        *string `json:"region,omitempty"`
	PostalCode    *string `json:"postalCode,omitempty"`
	Country       *string `json:"country,omitempty"`
}

func (o *GetUserAddress) GetFormatted() *string {
	if o == nil {
		return nil
	}
	return o.Formatted
}

func (o *GetUserAddress) GetStreetAddress() *string {
	if o == nil {
		return nil
	}
	return o.StreetAddress
}

func (o *GetUserAddress) GetLocality() *string {
	if o == nil {
		return nil
	}
	return o.Locality
}

func (o *GetUserAddress) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

func (o *GetUserAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *GetUserAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

type GetUserProfile struct {
	FamilyName        *string         `json:"familyName,omitempty"`
	GivenName         *string         `json:"givenName,omitempty"`
	MiddleName        *string         `json:"middleName,omitempty"`
	Nickname          *string         `json:"nickname,omitempty"`
	PreferredUsername *string         `json:"preferredUsername,omitempty"`
	Profile           *string         `json:"profile,omitempty"`
	Website           *string         `json:"website,omitempty"`
	Gender            *string         `json:"gender,omitempty"`
	Birthdate         *string         `json:"birthdate,omitempty"`
	Zoneinfo          *string         `json:"zoneinfo,omitempty"`
	Locale            *string         `json:"locale,omitempty"`
	Address           *GetUserAddress `json:"address,omitempty"`
}

func (o *GetUserProfile) GetFamilyName() *string {
	if o == nil {
		return nil
	}
	return o.FamilyName
}

func (o *GetUserProfile) GetGivenName() *string {
	if o == nil {
		return nil
	}
	return o.GivenName
}

func (o *GetUserProfile) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *GetUserProfile) GetNickname() *string {
	if o == nil {
		return nil
	}
	return o.Nickname
}

func (o *GetUserProfile) GetPreferredUsername() *string {
	if o == nil {
		return nil
	}
	return o.PreferredUsername
}

func (o *GetUserProfile) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetUserProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *GetUserProfile) GetGender() *string {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *GetUserProfile) GetBirthdate() *string {
	if o == nil {
		return nil
	}
	return o.Birthdate
}

func (o *GetUserProfile) GetZoneinfo() *string {
	if o == nil {
		return nil
	}
	return o.Zoneinfo
}

func (o *GetUserProfile) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *GetUserProfile) GetAddress() *GetUserAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

// GetUserDetail - arbitrary
type GetUserDetail struct {
}

type GetUserSsoIdentity struct {
	TenantID   string `json:"tenantId"`
	ID         string `json:"id"`
	UserID     string `json:"userId"`
	Issuer     string `json:"issuer"`
	IdentityID string `json:"identityId"`
	// arbitrary
	Detail         GetUserDetail `json:"detail"`
	CreatedAt      float64       `json:"createdAt"`
	SsoConnectorID string        `json:"ssoConnectorId"`
}

func (o *GetUserSsoIdentity) GetTenantID() string {
	if o == nil {
		return ""
	}
	return o.TenantID
}

func (o *GetUserSsoIdentity) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetUserSsoIdentity) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GetUserSsoIdentity) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *GetUserSsoIdentity) GetIdentityID() string {
	if o == nil {
		return ""
	}
	return o.IdentityID
}

func (o *GetUserSsoIdentity) GetDetail() GetUserDetail {
	if o == nil {
		return GetUserDetail{}
	}
	return o.Detail
}

func (o *GetUserSsoIdentity) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetUserSsoIdentity) GetSsoConnectorID() string {
	if o == nil {
		return ""
	}
	return o.SsoConnectorID
}

// GetUserResponseBody - User data for the given ID.
type GetUserResponseBody struct {
	ID           string  `json:"id"`
	Username     *string `json:"username"`
	PrimaryEmail *string `json:"primaryEmail"`
	PrimaryPhone *string `json:"primaryPhone"`
	Name         *string `json:"name"`
	Avatar       *string `json:"avatar"`
	// arbitrary
	CustomData    GetUserCustomData            `json:"customData"`
	Identities    map[string]GetUserIdentities `json:"identities"`
	LastSignInAt  *float64                     `json:"lastSignInAt"`
	CreatedAt     float64                      `json:"createdAt"`
	UpdatedAt     float64                      `json:"updatedAt"`
	Profile       GetUserProfile               `json:"profile"`
	ApplicationID *string                      `json:"applicationId"`
	IsSuspended   bool                         `json:"isSuspended"`
	HasPassword   *bool                        `json:"hasPassword,omitempty"`
	// List of SSO identities associated with the user. Only available when the `includeSsoIdentities` query parameter is provided with a truthy value.
	SsoIdentities []GetUserSsoIdentity `json:"ssoIdentities,omitempty"`
}

func (o *GetUserResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetUserResponseBody) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *GetUserResponseBody) GetPrimaryEmail() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryEmail
}

func (o *GetUserResponseBody) GetPrimaryPhone() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryPhone
}

func (o *GetUserResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetUserResponseBody) GetAvatar() *string {
	if o == nil {
		return nil
	}
	return o.Avatar
}

func (o *GetUserResponseBody) GetCustomData() GetUserCustomData {
	if o == nil {
		return GetUserCustomData{}
	}
	return o.CustomData
}

func (o *GetUserResponseBody) GetIdentities() map[string]GetUserIdentities {
	if o == nil {
		return map[string]GetUserIdentities{}
	}
	return o.Identities
}

func (o *GetUserResponseBody) GetLastSignInAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSignInAt
}

func (o *GetUserResponseBody) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

func (o *GetUserResponseBody) GetUpdatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAt
}

func (o *GetUserResponseBody) GetProfile() GetUserProfile {
	if o == nil {
		return GetUserProfile{}
	}
	return o.Profile
}

func (o *GetUserResponseBody) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *GetUserResponseBody) GetIsSuspended() bool {
	if o == nil {
		return false
	}
	return o.IsSuspended
}

func (o *GetUserResponseBody) GetHasPassword() *bool {
	if o == nil {
		return nil
	}
	return o.HasPassword
}

func (o *GetUserResponseBody) GetSsoIdentities() []GetUserSsoIdentity {
	if o == nil {
		return nil
	}
	return o.SsoIdentities
}

type GetUserResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// User data for the given ID.
	Object *GetUserResponseBody
}

func (o *GetUserResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetUserResponse) GetObject() *GetUserResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
